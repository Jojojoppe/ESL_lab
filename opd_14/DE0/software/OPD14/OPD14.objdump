
OPD14.elf:     file format elf32-littlenios2
OPD14.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00008150

Program Header:
    LOAD off    0x00001000 vaddr 0x00008000 paddr 0x00008000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00008020 paddr 0x00008020 align 2**12
         filesz 0x00003ce0 memsz 0x00003ce0 flags r-x
    LOAD off    0x00004d00 vaddr 0x0000bd00 paddr 0x0000c024 align 2**12
         filesz 0x00000324 memsz 0x00000324 flags rw-
    LOAD off    0x00005348 vaddr 0x0000c348 paddr 0x0000c348 align 2**12
         filesz 0x00000000 memsz 0x00000208 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00008000  00008000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000130  00008020  00008020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00003a58  00008150  00008150  00001150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000158  0000bba8  0000bba8  00004ba8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000324  0000bd00  0000c024  00004d00  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000208  0000c348  0000c348  00005348  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  00005024  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00000548  00000000  00000000  00005048  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00007b44  00000000  00000000  00005590  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000032f5  00000000  00000000  0000d0d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00002621  00000000  00000000  000103c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000007b4  00000000  00000000  000129ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000119b  00000000  00000000  000131a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000386a  00000000  00000000  0001433b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_alt_sim_info 00000020  00000000  00000000  00017ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000420  00000000  00000000  00017bc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .thread_model 00000003  00000000  00000000  0001a255  2**0
                  CONTENTS, READONLY
 17 .cpu          0000000c  00000000  00000000  0001a258  2**0
                  CONTENTS, READONLY
 18 .qsys         00000001  00000000  00000000  0001a264  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  0001a265  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  0001a266  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  0001a26a  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  0001a26e  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  0001a272  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  0001a27d  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  0001a288  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 00000004  00000000  00000000  0001a293  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 00000022  00000000  00000000  0001a297  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0004b7c7  00000000  00000000  0001a2b9  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00008000 l    d  .entry	00000000 .entry
00008020 l    d  .exceptions	00000000 .exceptions
00008150 l    d  .text	00000000 .text
0000bba8 l    d  .rodata	00000000 .rodata
0000bd00 l    d  .rwdata	00000000 .rwdata
0000c348 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../OPD14_bsp//obj/HAL/src/crt0.o
00008188 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00008094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 xxfuncs.c
00000000 l    df *ABS*	00000000 xxmodel_pan.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00008f64 l     F .text	00000354 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00000000 l    df *ABS*	00000000 fvwrite_small_dev.c
00000000 l    df *ABS*	00000000 impure.c
0000bd00 l     O .rwdata	000000e0 impure_data
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
0000aae0 l     F .text	00000074 udivmodsi4
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_write.c
00000000 l    df *ABS*	00000000 alt_sys_init.c
0000bde0 l     O .rwdata	0000002c jtag_uart_0
0000be0c l     O .rwdata	0000002c uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0000af80 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_uart_write.c
00000000 l    df *ABS*	00000000 alt_close.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0000b230 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0000b3b4 l     F .text	00000070 alt_open_fd.constprop.0
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 
0000ad24 g     F .text	00000050 alt_main
000081d0 g     F .text	00000044 setPWMB
0000a198 g     F .text	00000044 __ashldi3
0000c450 g     O .bss	00000100 alt_irq
00008214 g     F .text	00000024 getENCA
0000c024 g       *ABS*	00000000 __flash_rwdata_start
0000a238 g     F .text	0000004c printf
00008420 g     F .text	00000038 XXDouble2String
00008d40 g     F .text	0000013c __divsf3
0000c380 g     O .bss	00000018 xx_R
0000c34c g     O .bss	00000008 xx_start_time
00009804 g     F .text	00000064 __gtdf2
00000000  w      *UND*	00000000 __errno
00008000 g     F .entry	0000001c __reset
00008020 g       *ABS*	00000000 __flash_exceptions_start
0000c364 g     O .bss	00000004 errno
00009998 g     F .text	00000038 __make_dp
00009d30 g     F .text	0000002c __make_fp
0000c36c g     O .bss	00000004 alt_argv
00013fe0 g       *ABS*	00000000 _gp
0000be38 g     O .rwdata	00000180 alt_fd_list
0000c348 g     O .bss	00000004 ENCA_startval
000083e0 g     F .text	00000040 XXString2Double
0000b76c g     F .text	00000094 alt_find_dev
0000b424 g     F .text	00000078 alt_io_redirect
00009868 g     F .text	0000005c __ltdf2
000086a4 g     F .text	0000001c XXCalculateInput
0000aef4 g     F .text	00000058 altera_avalon_jtag_uart_read
0000a1fc g     F .text	0000003c _printf_r
00008000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0000ac00 g     F .text	00000008 __udivsi3
0000b904 g     F .text	00000050 alt_icache_flush
00008638 g     F .text	00000034 XXModelInitialize
0000c000 g     O .rwdata	00000004 alt_max_fd
00009f80 g     F .text	00000104 __unpack_d
00008f20 g     F .text	00000044 __extendsfdf2
000092b8 g     F .text	00000054 __adddf3
0000bfe0 g     O .rwdata	00000004 ENCA_ppr
0000bff8 g     O .rwdata	00000004 _global_impure_ptr
0000c550 g       *ABS*	00000000 __bss_end
0000b34c g     F .text	00000068 alt_iic_isr_register
0000b670 g     F .text	000000f4 alt_tick
0000b334 g     F .text	00000018 alt_ic_irq_enabled
0000c354 g     O .bss	00000008 xx_time
0000b63c g     F .text	00000034 alt_alarm_stop
00008d08 g     F .text	0000001c XXCalculateFinal
0000c374 g     O .bss	00000004 alt_irq_active
0000c398 g     O .bss	00000018 xx_I
000080ec g     F .exceptions	00000064 alt_irq_handler
0000bfb8 g     O .rwdata	00000028 alt_dev_null
0000c3b0 g     O .bss	00000038 xx_P
00008688 g     F .text	0000001c XXCalculateStatic
00009c68 g     F .text	000000c8 __unpack_f
00008cac g     F .text	0000005c XXCalculateOutput
0000b22c g     F .text	00000004 alt_dcache_flush_all
000098c4 g     F .text	000000d4 __fixdfsi
00008584 g     F .text	0000007c XXModelInitialize_states
0000c024 g       *ABS*	00000000 __ram_rwdata_end
0000c004 g     O .rwdata	00000008 alt_dev_list
0000ad74 g     F .text	000000e8 write
0000bd00 g       *ABS*	00000000 __ram_rodata_end
0000a154 g     F .text	00000044 __lshrdi3
0000ac08 g     F .text	00000008 __umodsi3
00008600 g     F .text	00000038 XXModelInitialize_variables
0000bff5 g     O .rwdata	00000001 xx_major
0000c550 g       *ABS*	00000000 end
00009b3c g     F .text	0000012c __pack_f
0000b0b0 g     F .text	0000009c altera_avalon_uart_write
00010000 g       *ABS*	00000000 __alt_stack_pointer
0000afbc g     F .text	00000050 alt_avalon_timer_sc_init
0000b01c g     F .text	00000010 altera_avalon_uart_write_fd
00009a90 g     F .text	000000ac __clzsi2
00008238 g     F .text	00000024 getENCB
0000af4c g     F .text	00000034 altera_avalon_jtag_uart_write
0000a284 g     F .text	000006c4 ___vfprintf_internal_r
00008538 g     F .text	0000004c XXModelInitialize_initialvalues
0000b9bc g     F .text	000001d8 __call_exitprocs
00008150 g     F .text	0000003c _start
0000c37c g     O .bss	00000004 _alt_tick_rate
0000c378 g     O .bss	00000004 _alt_nticks
0000ae7c g     F .text	00000058 alt_sys_init
00008e7c g     F .text	000000a4 __floatsisf
0000bd00 g       *ABS*	00000000 __ram_rwdata_start
0000bba8 g       *ABS*	00000000 __ram_rodata_start
0000aed4 g     F .text	00000010 altera_avalon_jtag_uart_read_fd
0000b8ac g     F .text	00000058 alt_get_fd
0000a084 g     F .text	000000d0 __fpcmp_parts_d
0000b974 g     F .text	00000048 memcmp
0000c550 g       *ABS*	00000000 __alt_stack_base
00009650 g     F .text	000001b4 __divdf3
0000c360 g     O .bss	00000001 xx_stop_simulation
00008d24 g     F .text	0000001c XXModelTerminate
0000936c g     F .text	000002e4 __muldf3
0000bbb0 g     O .rodata	00000010 __thenan_sf
0000866c g     F .text	0000001c XXCalculateInitial
0000b800 g     F .text	000000ac alt_find_file
0000b238 g     F .text	0000006c alt_dev_llist_insert
0000a96c g     F .text	000000e0 __sfvwrite_small_dev
0000c348 g       *ABS*	00000000 __bss_start
0000a1dc g     F .text	00000020 memset
0000825c g     F .text	00000184 main
0000c368 g     O .bss	00000004 alt_envp
0000aee4 g     F .text	00000010 altera_avalon_jtag_uart_write_fd
0000c3e8 g     O .bss	00000050 xx_V
000099d0 g     F .text	00000060 __truncdfsf2
0000c014 g     O .rwdata	00000004 alt_errno
0000ab54 g     F .text	00000050 __divsi3
0000bbc0 g     O .rodata	00000014 __thenan_df
0000bfec g     O .rwdata	00000008 xx_step_size
0000bba8 g       *ABS*	00000000 __flash_rodata_start
00008458 g     F .text	000000e0 XXModelInitialize_parameters
0000ae5c g     F .text	00000020 alt_irq_init
0000b618 g     F .text	00000024 alt_release_fd
0000bbd4 g     O .rodata	00000100 __clz_tab
0000aa74 g     F .text	0000006c _write_r
0000bffc g     O .rwdata	00000004 _impure_ptr
0000c370 g     O .bss	00000004 alt_argc
00008020 g       .exceptions	00000000 alt_irq_entry
0000818c g     F .text	00000044 setPWMA
0000c35c g     O .bss	00000004 xx_steps
0000c00c g     O .rwdata	00000008 alt_fs_list
0000bfe4 g     O .rwdata	00000008 xx_finish_time
00008020 g       *ABS*	00000000 __ram_exceptions_start
0000b2b0 g     F .text	00000004 alt_ic_isr_register
0000c024 g       *ABS*	00000000 _edata
0000b00c g     F .text	00000010 altera_avalon_uart_read_fd
0000c550 g       *ABS*	00000000 _end
00008150 g       *ABS*	00000000 __ram_exceptions_end
0000b2f4 g     F .text	00000040 alt_ic_irq_disable
0000b764 g     F .text	00000008 altera_nios2_qsys_irq_init
0000b954 g     F .text	00000020 exit
0000aba4 g     F .text	0000005c __modsi3
00010000 g       *ABS*	00000000 __alt_data_end
00008020 g     F .exceptions	00000000 alt_exception
0000bff4 g     O .rwdata	00000001 xx_initialize
0000bb94 g     F .text	00000014 _exit
00009a30 g     F .text	00000060 __muldi3
0000aa4c g     F .text	00000028 strlen
0000b49c g     F .text	0000017c open
0000b2a4 g     F .text	0000000c alt_icache_flush_all
0000c018 g     O .rwdata	00000004 alt_priority_mask
0000b2b4 g     F .text	00000040 alt_ic_irq_enable
0000a948 g     F .text	00000024 __vfprintf_internal
0000b02c g     F .text	00000084 altera_avalon_uart_read
0000930c g     F .text	00000060 __subdf3
0000c01c g     O .rwdata	00000008 alt_alarm_list
0000b14c g     F .text	000000e0 close
0000ac10 g     F .text	00000114 alt_load
00009d5c g     F .text	00000224 __pack_d
00000000  w      *UND*	00000000 free
0000c438 g     O .bss	00000018 xx_s
000086c0 g     F .text	000005ec XXCalculateDynamic



Disassembly of section .entry:

00008000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
    8000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
    8004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
    8008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
    800c:	00bffd16 	blt	zero,r2,8004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
    8010:	00400034 	movhi	at,0
    ori r1, r1, %lo(_start)
    8014:	08605414 	ori	at,at,33104
    jmp r1
    8018:	0800683a 	jmp	at
    801c:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x8000>

Disassembly of section .exceptions:

00008020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
    8020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
    8024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
    8028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
    802c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
    8030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
    8034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
    8038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
    803c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
    8040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
    8044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
    8048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
    804c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
    8050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
    8054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
    8058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
    805c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
    8060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
    8064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
    8068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
    806c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
    8070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
    8074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
    8078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
    807c:	10000326 	beq	r2,zero,808c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
    8080:	20000226 	beq	r4,zero,808c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
    8084:	00080ec0 	call	80ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
    8088:	00000306 	br	8098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
    808c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
    8090:	e8bfff17 	ldw	r2,-4(ea)

00008094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
    8094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
    8098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
    809c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
    80a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
    80a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
    80a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
    80ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
    80b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
    80b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
    80b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
    80bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
    80c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
    80c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
    80c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
    80cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
    80d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
    80d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
    80d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
    80dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
    80e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
    80e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
    80e8:	ef80083a 	eret

000080ec <alt_irq_handler>:
    80ec:	defffe04 	addi	sp,sp,-8
    80f0:	dfc00115 	stw	ra,4(sp)
    80f4:	dc000015 	stw	r16,0(sp)
    80f8:	000b313a 	rdctl	r5,ipending
    80fc:	04000074 	movhi	r16,1
    8100:	84311404 	addi	r16,r16,-15280
    8104:	2880004c 	andi	r2,r5,1
    8108:	0007883a 	mov	r3,zero
    810c:	1000051e 	bne	r2,zero,8124 <alt_irq_handler+0x38>
    8110:	00800044 	movi	r2,1
    8114:	1085883a 	add	r2,r2,r2
    8118:	2888703a 	and	r4,r5,r2
    811c:	18c00044 	addi	r3,r3,1
    8120:	203ffc26 	beq	r4,zero,8114 <alt_irq_handler+0x28>
    8124:	180690fa 	slli	r3,r3,3
    8128:	80c7883a 	add	r3,r16,r3
    812c:	18800017 	ldw	r2,0(r3)
    8130:	19000117 	ldw	r4,4(r3)
    8134:	103ee83a 	callr	r2
    8138:	000b313a 	rdctl	r5,ipending
    813c:	283ff11e 	bne	r5,zero,8104 <alt_irq_handler+0x18>
    8140:	dfc00117 	ldw	ra,4(sp)
    8144:	dc000017 	ldw	r16,0(sp)
    8148:	dec00204 	addi	sp,sp,8
    814c:	f800283a 	ret

Disassembly of section .text:

00008150 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
    8150:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
    8154:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
    8158:	06800074 	movhi	gp,1
    ori gp, gp, %lo(_gp)
    815c:	d68ff814 	ori	gp,gp,16352
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
    8160:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
    8164:	10b0d214 	ori	r2,r2,49992

    movhi r3, %hi(__bss_end)
    8168:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
    816c:	18f15414 	ori	r3,r3,50512

    beq r2, r3, 1f
    8170:	10c00326 	beq	r2,r3,8180 <_start+0x30>

0:
    stw zero, (r2)
    8174:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
    8178:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
    817c:	10fffd36 	bltu	r2,r3,8174 <_start+0x24>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
    8180:	000ac100 	call	ac10 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
    8184:	000ad240 	call	ad24 <alt_main>

00008188 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
    8188:	003fff06 	br	8188 <alt_after_alt_main>

0000818c <setPWMA>:
const int ENCA_ppr = 1000;

// ---------------------
// IO functions
// ---------------------
void setPWMA(unsigned char val, unsigned char dir){
    818c:	defffd04 	addi	sp,sp,-12
    8190:	df000215 	stw	fp,8(sp)
    8194:	df000204 	addi	fp,sp,8
    8198:	2007883a 	mov	r3,r4
    819c:	2805883a 	mov	r2,r5
    81a0:	e0fffe05 	stb	r3,-8(fp)
    81a4:	e0bfff05 	stb	r2,-4(fp)
	IOWR(ESL_PWM_0_BASE, 0, val | dir<<8);
    81a8:	e0fffe03 	ldbu	r3,-8(fp)
    81ac:	e0bfff03 	ldbu	r2,-4(fp)
    81b0:	1004923a 	slli	r2,r2,8
    81b4:	1886b03a 	or	r3,r3,r2
    81b8:	00840004 	movi	r2,4096
    81bc:	10c00035 	stwio	r3,0(r2)
}
    81c0:	e037883a 	mov	sp,fp
    81c4:	df000017 	ldw	fp,0(sp)
    81c8:	dec00104 	addi	sp,sp,4
    81cc:	f800283a 	ret

000081d0 <setPWMB>:
void setPWMB(unsigned char val, unsigned char dir){
    81d0:	defffd04 	addi	sp,sp,-12
    81d4:	df000215 	stw	fp,8(sp)
    81d8:	df000204 	addi	fp,sp,8
    81dc:	2007883a 	mov	r3,r4
    81e0:	2805883a 	mov	r2,r5
    81e4:	e0fffe05 	stb	r3,-8(fp)
    81e8:	e0bfff05 	stb	r2,-4(fp)
	IOWR(ESL_PWM_1_BASE, 0, val | dir<<8);
    81ec:	e0fffe03 	ldbu	r3,-8(fp)
    81f0:	e0bfff03 	ldbu	r2,-4(fp)
    81f4:	1004923a 	slli	r2,r2,8
    81f8:	1886b03a 	or	r3,r3,r2
    81fc:	00850004 	movi	r2,5120
    8200:	10c00035 	stwio	r3,0(r2)
}
    8204:	e037883a 	mov	sp,fp
    8208:	df000017 	ldw	fp,0(sp)
    820c:	dec00104 	addi	sp,sp,4
    8210:	f800283a 	ret

00008214 <getENCA>:
int getENCA(){
    8214:	deffff04 	addi	sp,sp,-4
    8218:	df000015 	stw	fp,0(sp)
    821c:	d839883a 	mov	fp,sp
	return IORD(ESL_ENCODER_0_BASE, 0);
    8220:	0005883a 	mov	r2,zero
    8224:	10800037 	ldwio	r2,0(r2)
}
    8228:	e037883a 	mov	sp,fp
    822c:	df000017 	ldw	fp,0(sp)
    8230:	dec00104 	addi	sp,sp,4
    8234:	f800283a 	ret

00008238 <getENCB>:
int getENCB(){
    8238:	deffff04 	addi	sp,sp,-4
    823c:	df000015 	stw	fp,0(sp)
    8240:	d839883a 	mov	fp,sp
	return IORD(ESL_ENCODER_1_BASE, 0);
    8244:	00810004 	movi	r2,1024
    8248:	10800037 	ldwio	r2,0(r2)
}
    824c:	e037883a 	mov	sp,fp
    8250:	df000017 	ldw	fp,0(sp)
    8254:	dec00104 	addi	sp,sp,4
    8258:	f800283a 	ret

0000825c <main>:
// ---------------------

int main(){
    825c:	defff704 	addi	sp,sp,-36
    8260:	dfc00815 	stw	ra,32(sp)
    8264:	df000715 	stw	fp,28(sp)
    8268:	dc000615 	stw	r16,24(sp)
    826c:	df000604 	addi	fp,sp,24
	//int uart = open("/dev/uart_0", O_RDWR);

	// Stop motors
	setPWMA(0, 0);
    8270:	0009883a 	mov	r4,zero
    8274:	000b883a 	mov	r5,zero
    8278:	000818c0 	call	818c <setPWMA>
	setPWMB(0, 0);
    827c:	0009883a 	mov	r4,zero
    8280:	000b883a 	mov	r5,zero
    8284:	00081d00 	call	81d0 <setPWMB>

	ENCA_startval = getENCA();
    8288:	00082140 	call	8214 <getENCA>
    828c:	d0a0da15 	stw	r2,-31896(gp)

	printf("%d\r\n", ENCA_startval);
    8290:	d0a0da17 	ldw	r2,-31896(gp)
    8294:	01000074 	movhi	r4,1
    8298:	212eea04 	addi	r4,r4,-17496
    829c:	100b883a 	mov	r5,r2
    82a0:	000a2380 	call	a238 <printf>

	float input, setpoint, output;
	int iinput, isetpoint, ioutput, direction;
	setpoint = 0.35f;
    82a4:	008facf4 	movhi	r2,16051
    82a8:	108cccc4 	addi	r2,r2,13107
    82ac:	e0bffc15 	stw	r2,-16(fp)

	for(;;){
		// Get ENCA value [-2pi, 2pi]
		iinput = getENCA() - ENCA_startval;
    82b0:	00082140 	call	8214 <getENCA>
    82b4:	d0e0da17 	ldw	r3,-31896(gp)
    82b8:	10c5c83a 	sub	r2,r2,r3
    82bc:	e0bffd15 	stw	r2,-12(fp)
		input = (float)iinput/(float)ENCA_ppr;
    82c0:	e13ffd17 	ldw	r4,-12(fp)
    82c4:	0008e7c0 	call	8e7c <__floatsisf>
    82c8:	1021883a 	mov	r16,r2
    82cc:	d0a00017 	ldw	r2,-32768(gp)
    82d0:	1009883a 	mov	r4,r2
    82d4:	0008e7c0 	call	8e7c <__floatsisf>
    82d8:	1007883a 	mov	r3,r2
    82dc:	8009883a 	mov	r4,r16
    82e0:	180b883a 	mov	r5,r3
    82e4:	0008d400 	call	8d40 <__divsf3>
    82e8:	1007883a 	mov	r3,r2
    82ec:	e0fffe15 	stw	r3,-8(fp)

		xx_V[8] = input;
    82f0:	e13ffe17 	ldw	r4,-8(fp)
    82f4:	0008f200 	call	8f20 <__extendsfdf2>
    82f8:	1009883a 	mov	r4,r2
    82fc:	180b883a 	mov	r5,r3
    8300:	00800074 	movhi	r2,1
    8304:	10b0fa04 	addi	r2,r2,-15384
    8308:	11001015 	stw	r4,64(r2)
    830c:	11401115 	stw	r5,68(r2)
		xx_V[7] = setpoint;
    8310:	e13ffc17 	ldw	r4,-16(fp)
    8314:	0008f200 	call	8f20 <__extendsfdf2>
    8318:	1009883a 	mov	r4,r2
    831c:	180b883a 	mov	r5,r3
    8320:	00800074 	movhi	r2,1
    8324:	10b0fa04 	addi	r2,r2,-15384
    8328:	11000e15 	stw	r4,56(r2)
    832c:	11400f15 	stw	r5,60(r2)
		XXCalculateDynamic();
    8330:	00086c00 	call	86c0 <XXCalculateDynamic>
		XXCalculateOutput();
    8334:	0008cac0 	call	8cac <XXCalculateOutput>
		output = xx_V[9];
    8338:	01000074 	movhi	r4,1
    833c:	2130fa04 	addi	r4,r4,-15384
    8340:	20801217 	ldw	r2,72(r4)
    8344:	20c01317 	ldw	r3,76(r4)
    8348:	1009883a 	mov	r4,r2
    834c:	180b883a 	mov	r5,r3
    8350:	00099d00 	call	99d0 <__truncdfsf2>
    8354:	1007883a 	mov	r3,r2
    8358:	e0ffff15 	stw	r3,-4(fp)

		// Get PWM values [-1, 1]
		ioutput = (int)(output*256.0);
    835c:	e13fff17 	ldw	r4,-4(fp)
    8360:	0008f200 	call	8f20 <__extendsfdf2>
    8364:	100b883a 	mov	r5,r2
    8368:	180d883a 	mov	r6,r3
    836c:	2809883a 	mov	r4,r5
    8370:	300b883a 	mov	r5,r6
    8374:	000d883a 	mov	r6,zero
    8378:	01d01c34 	movhi	r7,16496
    837c:	000936c0 	call	936c <__muldf3>
    8380:	1009883a 	mov	r4,r2
    8384:	180b883a 	mov	r5,r3
    8388:	2005883a 	mov	r2,r4
    838c:	2807883a 	mov	r3,r5
    8390:	1009883a 	mov	r4,r2
    8394:	180b883a 	mov	r5,r3
    8398:	00098c40 	call	98c4 <__fixdfsi>
    839c:	e0bffa15 	stw	r2,-24(fp)
		direction = 1;
    83a0:	00800044 	movi	r2,1
    83a4:	e0bffb15 	stw	r2,-20(fp)
		if(ioutput<0){
    83a8:	e0bffa17 	ldw	r2,-24(fp)
    83ac:	1000040e 	bge	r2,zero,83c0 <main+0x164>
			ioutput = -1*ioutput;
    83b0:	e0bffa17 	ldw	r2,-24(fp)
    83b4:	0085c83a 	sub	r2,zero,r2
    83b8:	e0bffa15 	stw	r2,-24(fp)
			direction = 0;
    83bc:	e03ffb15 	stw	zero,-20(fp)
		}
		setPWMA(ioutput, direction);
    83c0:	e0bffa17 	ldw	r2,-24(fp)
    83c4:	10c03fcc 	andi	r3,r2,255
    83c8:	e0bffb17 	ldw	r2,-20(fp)
    83cc:	10803fcc 	andi	r2,r2,255
    83d0:	1809883a 	mov	r4,r3
    83d4:	100b883a 	mov	r5,r2
    83d8:	000818c0 	call	818c <setPWMA>
	}
    83dc:	003fb406 	br	82b0 <main+0x54>

000083e0 <XXString2Double>:
	double m_double;
	const char* m_char;
}str2dbl;

XXDouble XXString2Double(const char* argument)
{
    83e0:	defffc04 	addi	sp,sp,-16
    83e4:	df000315 	stw	fp,12(sp)
    83e8:	df000304 	addi	fp,sp,12
    83ec:	e13fff15 	stw	r4,-4(fp)
	str2dbl myConversion;
	myConversion.m_char = argument;
    83f0:	e0bfff17 	ldw	r2,-4(fp)
    83f4:	e0bffd15 	stw	r2,-12(fp)
	return myConversion.m_double;
    83f8:	e17ffd17 	ldw	r5,-12(fp)
    83fc:	e1bffe17 	ldw	r6,-8(fp)
    8400:	2807883a 	mov	r3,r5
    8404:	3009883a 	mov	r4,r6

}
    8408:	1805883a 	mov	r2,r3
    840c:	2007883a 	mov	r3,r4
    8410:	e037883a 	mov	sp,fp
    8414:	df000017 	ldw	fp,0(sp)
    8418:	dec00104 	addi	sp,sp,4
    841c:	f800283a 	ret

00008420 <XXDouble2String>:

const char* XXDouble2String(XXDouble argument)
{
    8420:	defffb04 	addi	sp,sp,-20
    8424:	df000415 	stw	fp,16(sp)
    8428:	df000404 	addi	fp,sp,16
    842c:	e13ffe15 	stw	r4,-8(fp)
    8430:	e17fff15 	stw	r5,-4(fp)
	str2dbl myConversion;
	myConversion.m_double = argument;
    8434:	e0bffe17 	ldw	r2,-8(fp)
    8438:	e0bffc15 	stw	r2,-16(fp)
    843c:	e0bfff17 	ldw	r2,-4(fp)
    8440:	e0bffd15 	stw	r2,-12(fp)
	return myConversion.m_char;
    8444:	e0bffc17 	ldw	r2,-16(fp)
}
    8448:	e037883a 	mov	sp,fp
    844c:	df000017 	ldw	fp,0(sp)
    8450:	dec00104 	addi	sp,sp,4
    8454:	f800283a 	ret

00008458 <XXModelInitialize_parameters>:

#if (7 > 8192) && defined _MSC_VER
#pragma optimize("", off)
#endif
void XXModelInitialize_parameters(void)
{
    8458:	deffff04 	addi	sp,sp,-4
    845c:	df000015 	stw	fp,0(sp)
    8460:	d839883a 	mov	fp,sp
	/* set the parameters */
	xx_P[0] = 0.0;		/* corrGain\K */
    8464:	00800074 	movhi	r2,1
    8468:	10b0ec04 	addi	r2,r2,-15440
    846c:	10000015 	stw	zero,0(r2)
    8470:	10000115 	stw	zero,4(r2)
	xx_P[1] = 2.6;		/* PID1\kp */
    8474:	00800074 	movhi	r2,1
    8478:	10b0ec04 	addi	r2,r2,-15440
    847c:	00f33374 	movhi	r3,52429
    8480:	18f33344 	addi	r3,r3,-13107
    8484:	10c00215 	stw	r3,8(r2)
    8488:	00d00174 	movhi	r3,16389
    848c:	18f33304 	addi	r3,r3,-13108
    8490:	10c00315 	stw	r3,12(r2)
	xx_P[2] = 0.05;		/* PID1\tauD */
    8494:	00800074 	movhi	r2,1
    8498:	10b0ec04 	addi	r2,r2,-15440
    849c:	00e666b4 	movhi	r3,39322
    84a0:	18e66684 	addi	r3,r3,-26214
    84a4:	10c00415 	stw	r3,16(r2)
    84a8:	00cfeab4 	movhi	r3,16298
    84ac:	18e66644 	addi	r3,r3,-26215
    84b0:	10c00515 	stw	r3,20(r2)
	xx_P[3] = 0.17;		/* PID1\beta */
    84b4:	00800074 	movhi	r2,1
    84b8:	10b0ec04 	addi	r2,r2,-15440
    84bc:	00d70a74 	movhi	r3,23593
    84c0:	18fd70c4 	addi	r3,r3,-2621
    84c4:	10c00615 	stw	r3,24(r2)
    84c8:	00cff1b4 	movhi	r3,16326
    84cc:	18f0a3c4 	addi	r3,r3,-15729
    84d0:	10c00715 	stw	r3,28(r2)
	xx_P[4] = 9.0;		/* PID1\tauI */
    84d4:	00800074 	movhi	r2,1
    84d8:	10b0ec04 	addi	r2,r2,-15440
    84dc:	10000815 	stw	zero,32(r2)
    84e0:	00d008b4 	movhi	r3,16418
    84e4:	10c00915 	stw	r3,36(r2)
	xx_P[5] = -0.99;		/* SignalLimiter2\minimum */
    84e8:	00800074 	movhi	r2,1
    84ec:	10b0ec04 	addi	r2,r2,-15440
    84f0:	00deb874 	movhi	r3,31457
    84f4:	18d1eb84 	addi	r3,r3,18350
    84f8:	10c00a15 	stw	r3,40(r2)
    84fc:	00effc34 	movhi	r3,49136
    8500:	18eb8504 	addi	r3,r3,-20972
    8504:	10c00b15 	stw	r3,44(r2)
	xx_P[6] = 0.99;		/* SignalLimiter2\maximum */
    8508:	00800074 	movhi	r2,1
    850c:	10b0ec04 	addi	r2,r2,-15440
    8510:	00deb874 	movhi	r3,31457
    8514:	18d1eb84 	addi	r3,r3,18350
    8518:	10c00c15 	stw	r3,48(r2)
    851c:	00cffc34 	movhi	r3,16368
    8520:	18eb8504 	addi	r3,r3,-20972
    8524:	10c00d15 	stw	r3,52(r2)

}
    8528:	e037883a 	mov	sp,fp
    852c:	df000017 	ldw	fp,0(sp)
    8530:	dec00104 	addi	sp,sp,4
    8534:	f800283a 	ret

00008538 <XXModelInitialize_initialvalues>:
#if (7 > 8192) && defined _MSC_VER
#pragma optimize("", on)
#endif

void XXModelInitialize_initialvalues(void)
{
    8538:	deffff04 	addi	sp,sp,-4
    853c:	df000015 	stw	fp,0(sp)
    8540:	d839883a 	mov	fp,sp
	/* set the initial values */
	xx_I[0] = 0.0;		/* PID1\uD_previous_initial */
    8544:	00800074 	movhi	r2,1
    8548:	10b0e604 	addi	r2,r2,-15464
    854c:	10000015 	stw	zero,0(r2)
    8550:	10000115 	stw	zero,4(r2)
	xx_I[1] = 0.0;		/* PID1\error_previous_initial */
    8554:	00800074 	movhi	r2,1
    8558:	10b0e604 	addi	r2,r2,-15464
    855c:	10000215 	stw	zero,8(r2)
    8560:	10000315 	stw	zero,12(r2)
	xx_I[2] = 0.0;		/* PID1\uI_previous_initial */
    8564:	00800074 	movhi	r2,1
    8568:	10b0e604 	addi	r2,r2,-15464
    856c:	10000415 	stw	zero,16(r2)
    8570:	10000515 	stw	zero,20(r2)

}
    8574:	e037883a 	mov	sp,fp
    8578:	df000017 	ldw	fp,0(sp)
    857c:	dec00104 	addi	sp,sp,4
    8580:	f800283a 	ret

00008584 <XXModelInitialize_states>:

void XXModelInitialize_states(void)
{
    8584:	deffff04 	addi	sp,sp,-4
    8588:	df000015 	stw	fp,0(sp)
    858c:	d839883a 	mov	fp,sp
	/* set the states */
	xx_s[0] = xx_I[0];		/* PID1\uD_previous */
    8590:	01000074 	movhi	r4,1
    8594:	2130e604 	addi	r4,r4,-15464
    8598:	20800017 	ldw	r2,0(r4)
    859c:	20c00117 	ldw	r3,4(r4)
    85a0:	01000074 	movhi	r4,1
    85a4:	21310e04 	addi	r4,r4,-15304
    85a8:	20800015 	stw	r2,0(r4)
    85ac:	20c00115 	stw	r3,4(r4)
	xx_s[1] = xx_I[1];		/* PID1\error_previous */
    85b0:	01000074 	movhi	r4,1
    85b4:	2130e604 	addi	r4,r4,-15464
    85b8:	20800217 	ldw	r2,8(r4)
    85bc:	20c00317 	ldw	r3,12(r4)
    85c0:	01000074 	movhi	r4,1
    85c4:	21310e04 	addi	r4,r4,-15304
    85c8:	20800215 	stw	r2,8(r4)
    85cc:	20c00315 	stw	r3,12(r4)
	xx_s[2] = xx_I[2];		/* PID1\uI_previous */
    85d0:	01000074 	movhi	r4,1
    85d4:	2130e604 	addi	r4,r4,-15464
    85d8:	20800417 	ldw	r2,16(r4)
    85dc:	20c00517 	ldw	r3,20(r4)
    85e0:	01000074 	movhi	r4,1
    85e4:	21310e04 	addi	r4,r4,-15304
    85e8:	20800415 	stw	r2,16(r4)
    85ec:	20c00515 	stw	r3,20(r4)

}
    85f0:	e037883a 	mov	sp,fp
    85f4:	df000017 	ldw	fp,0(sp)
    85f8:	dec00104 	addi	sp,sp,4
    85fc:	f800283a 	ret

00008600 <XXModelInitialize_variables>:

void XXModelInitialize_variables(void)
{
    8600:	defffe04 	addi	sp,sp,-8
    8604:	dfc00115 	stw	ra,4(sp)
    8608:	df000015 	stw	fp,0(sp)
    860c:	d839883a 	mov	fp,sp
	/* initialize the variable memory to zero */
	memset(xx_V, 0, xx_variables_size * sizeof(XXDouble));
    8610:	01000074 	movhi	r4,1
    8614:	2130fa04 	addi	r4,r4,-15384
    8618:	000b883a 	mov	r5,zero
    861c:	01801404 	movi	r6,80
    8620:	000a1dc0 	call	a1dc <memset>
}
    8624:	e037883a 	mov	sp,fp
    8628:	dfc00117 	ldw	ra,4(sp)
    862c:	df000017 	ldw	fp,0(sp)
    8630:	dec00204 	addi	sp,sp,8
    8634:	f800283a 	ret

00008638 <XXModelInitialize>:

/* this method is called before calculation is possible */
void XXModelInitialize (void)
{
    8638:	defffe04 	addi	sp,sp,-8
    863c:	dfc00115 	stw	ra,4(sp)
    8640:	df000015 	stw	fp,0(sp)
    8644:	d839883a 	mov	fp,sp
	XXModelInitialize_parameters();
    8648:	00084580 	call	8458 <XXModelInitialize_parameters>
	XXModelInitialize_variables();
    864c:	00086000 	call	8600 <XXModelInitialize_variables>
	XXModelInitialize_initialvalues();
    8650:	00085380 	call	8538 <XXModelInitialize_initialvalues>
	XXModelInitialize_states();
    8654:	00085840 	call	8584 <XXModelInitialize_states>
}
    8658:	e037883a 	mov	sp,fp
    865c:	dfc00117 	ldw	ra,4(sp)
    8660:	df000017 	ldw	fp,0(sp)
    8664:	dec00204 	addi	sp,sp,8
    8668:	f800283a 	ret

0000866c <XXCalculateInitial>:

/* This function calculates the initial equations of the model.
 * These equations are calculated before anything else
 */
void XXCalculateInitial (void)
{
    866c:	deffff04 	addi	sp,sp,-4
    8670:	df000015 	stw	fp,0(sp)
    8674:	d839883a 	mov	fp,sp

}
    8678:	e037883a 	mov	sp,fp
    867c:	df000017 	ldw	fp,0(sp)
    8680:	dec00104 	addi	sp,sp,4
    8684:	f800283a 	ret

00008688 <XXCalculateStatic>:

/* This function calculates the static equations of the model.
 * These equations are only dependent from parameters and constants
 */
void XXCalculateStatic (void)
{
    8688:	deffff04 	addi	sp,sp,-4
    868c:	df000015 	stw	fp,0(sp)
    8690:	d839883a 	mov	fp,sp

}
    8694:	e037883a 	mov	sp,fp
    8698:	df000017 	ldw	fp,0(sp)
    869c:	dec00104 	addi	sp,sp,4
    86a0:	f800283a 	ret

000086a4 <XXCalculateInput>:
/* This function calculates the input equations of the model.
 * These equations are dynamic equations that must not change
 * in calls from the integration method (like random and delay).
 */
void XXCalculateInput (void)
{
    86a4:	deffff04 	addi	sp,sp,-4
    86a8:	df000015 	stw	fp,0(sp)
    86ac:	d839883a 	mov	fp,sp

}
    86b0:	e037883a 	mov	sp,fp
    86b4:	df000017 	ldw	fp,0(sp)
    86b8:	dec00104 	addi	sp,sp,4
    86bc:	f800283a 	ret

000086c0 <XXCalculateDynamic>:
/* This function calculates the dynamic equations of the model.
 * These equations are called from the integration method
 * to calculate the new model rates (that are then integrated).
 */
void XXCalculateDynamic (void)
{
    86c0:	defff804 	addi	sp,sp,-32
    86c4:	dfc00715 	stw	ra,28(sp)
    86c8:	df000615 	stw	fp,24(sp)
    86cc:	dd400515 	stw	r21,20(sp)
    86d0:	dd000415 	stw	r20,16(sp)
    86d4:	dcc00315 	stw	r19,12(sp)
    86d8:	dc800215 	stw	r18,8(sp)
    86dc:	dc400115 	stw	r17,4(sp)
    86e0:	dc000015 	stw	r16,0(sp)
    86e4:	d839883a 	mov	fp,sp
	/* PID1\factor = 1 / (sampletime + PID1\tauD * PID1\beta); */
	xx_V[2] = 1.0 / (xx_step_size + xx_P[2] * xx_P[3]);
    86e8:	00800074 	movhi	r2,1
    86ec:	10b0ec04 	addi	r2,r2,-15440
    86f0:	11400417 	ldw	r5,16(r2)
    86f4:	11800517 	ldw	r6,20(r2)
    86f8:	01000074 	movhi	r4,1
    86fc:	2130ec04 	addi	r4,r4,-15440
    8700:	20800617 	ldw	r2,24(r4)
    8704:	20c00717 	ldw	r3,28(r4)
    8708:	2809883a 	mov	r4,r5
    870c:	300b883a 	mov	r5,r6
    8710:	100d883a 	mov	r6,r2
    8714:	180f883a 	mov	r7,r3
    8718:	000936c0 	call	936c <__muldf3>
    871c:	100f883a 	mov	r7,r2
    8720:	1811883a 	mov	r8,r3
    8724:	380b883a 	mov	r5,r7
    8728:	400d883a 	mov	r6,r8
    872c:	d0a00317 	ldw	r2,-32756(gp)
    8730:	01000074 	movhi	r4,1
    8734:	212ffc04 	addi	r4,r4,-16400
    8738:	20c00017 	ldw	r3,0(r4)
    873c:	2809883a 	mov	r4,r5
    8740:	300b883a 	mov	r5,r6
    8744:	100d883a 	mov	r6,r2
    8748:	180f883a 	mov	r7,r3
    874c:	00092b80 	call	92b8 <__adddf3>
    8750:	1009883a 	mov	r4,r2
    8754:	180b883a 	mov	r5,r3
    8758:	2005883a 	mov	r2,r4
    875c:	2807883a 	mov	r3,r5
    8760:	0009883a 	mov	r4,zero
    8764:	014ffc34 	movhi	r5,16368
    8768:	100d883a 	mov	r6,r2
    876c:	180f883a 	mov	r7,r3
    8770:	00096500 	call	9650 <__divdf3>
    8774:	1009883a 	mov	r4,r2
    8778:	180b883a 	mov	r5,r3
    877c:	2005883a 	mov	r2,r4
    8780:	2807883a 	mov	r3,r5
    8784:	01000074 	movhi	r4,1
    8788:	2130fa04 	addi	r4,r4,-15384
    878c:	20800415 	stw	r2,16(r4)
    8790:	20c00515 	stw	r3,20(r4)

	/* PlusMinus1\plus1 = in; */
	xx_V[3] = xx_V[7];
    8794:	01000074 	movhi	r4,1
    8798:	2130fa04 	addi	r4,r4,-15384
    879c:	20800e17 	ldw	r2,56(r4)
    87a0:	20c00f17 	ldw	r3,60(r4)
    87a4:	01000074 	movhi	r4,1
    87a8:	2130fa04 	addi	r4,r4,-15384
    87ac:	20800615 	stw	r2,24(r4)
    87b0:	20c00715 	stw	r3,28(r4)

	/* Splitter1\input = position; */
	xx_V[5] = xx_V[8];
    87b4:	01000074 	movhi	r4,1
    87b8:	2130fa04 	addi	r4,r4,-15384
    87bc:	20801017 	ldw	r2,64(r4)
    87c0:	20c01117 	ldw	r3,68(r4)
    87c4:	01000074 	movhi	r4,1
    87c8:	2130fa04 	addi	r4,r4,-15384
    87cc:	20800a15 	stw	r2,40(r4)
    87d0:	20c00b15 	stw	r3,44(r4)

	/* corrGain\corr = corrGain\K * Splitter1\input; */
	xx_V[0] = xx_P[0] * xx_V[5];
    87d4:	00800074 	movhi	r2,1
    87d8:	10b0ec04 	addi	r2,r2,-15440
    87dc:	11400017 	ldw	r5,0(r2)
    87e0:	11800117 	ldw	r6,4(r2)
    87e4:	01000074 	movhi	r4,1
    87e8:	2130fa04 	addi	r4,r4,-15384
    87ec:	20800a17 	ldw	r2,40(r4)
    87f0:	20c00b17 	ldw	r3,44(r4)
    87f4:	2809883a 	mov	r4,r5
    87f8:	300b883a 	mov	r5,r6
    87fc:	100d883a 	mov	r6,r2
    8800:	180f883a 	mov	r7,r3
    8804:	000936c0 	call	936c <__muldf3>
    8808:	1009883a 	mov	r4,r2
    880c:	180b883a 	mov	r5,r3
    8810:	2005883a 	mov	r2,r4
    8814:	2807883a 	mov	r3,r5
    8818:	01000074 	movhi	r4,1
    881c:	2130fa04 	addi	r4,r4,-15384
    8820:	20800015 	stw	r2,0(r4)
    8824:	20c00115 	stw	r3,4(r4)

	/* PID1\error = PlusMinus1\plus1 - Splitter1\input; */
	xx_R[1] = xx_V[3] - xx_V[5];
    8828:	00800074 	movhi	r2,1
    882c:	10b0fa04 	addi	r2,r2,-15384
    8830:	11400617 	ldw	r5,24(r2)
    8834:	11800717 	ldw	r6,28(r2)
    8838:	01000074 	movhi	r4,1
    883c:	2130fa04 	addi	r4,r4,-15384
    8840:	20800a17 	ldw	r2,40(r4)
    8844:	20c00b17 	ldw	r3,44(r4)
    8848:	2809883a 	mov	r4,r5
    884c:	300b883a 	mov	r5,r6
    8850:	100d883a 	mov	r6,r2
    8854:	180f883a 	mov	r7,r3
    8858:	000930c0 	call	930c <__subdf3>
    885c:	1009883a 	mov	r4,r2
    8860:	180b883a 	mov	r5,r3
    8864:	2005883a 	mov	r2,r4
    8868:	2807883a 	mov	r3,r5
    886c:	01000074 	movhi	r4,1
    8870:	2130e004 	addi	r4,r4,-15488
    8874:	20800215 	stw	r2,8(r4)
    8878:	20c00315 	stw	r3,12(r4)

	/* PID1\uD = PID1\factor * (((PID1\tauD * PID1\uD_previous) * PID1\beta + (PID1\tauD * PID1\kp) * (PID1\error - PID1\error_previous)) + (sampletime * PID1\kp) * PID1\error); */
	xx_R[0] = xx_V[2] * (((xx_P[2] * xx_s[0]) * xx_P[3] + (xx_P[2] * xx_P[1]) * (xx_R[1] - xx_s[1])) + (xx_step_size * xx_P[1]) * xx_R[1]);
    887c:	00800074 	movhi	r2,1
    8880:	10b0fa04 	addi	r2,r2,-15384
    8884:	14000417 	ldw	r16,16(r2)
    8888:	14400517 	ldw	r17,20(r2)
    888c:	00800074 	movhi	r2,1
    8890:	10b0ec04 	addi	r2,r2,-15440
    8894:	11400417 	ldw	r5,16(r2)
    8898:	11800517 	ldw	r6,20(r2)
    889c:	01000074 	movhi	r4,1
    88a0:	21310e04 	addi	r4,r4,-15304
    88a4:	20800017 	ldw	r2,0(r4)
    88a8:	20c00117 	ldw	r3,4(r4)
    88ac:	2809883a 	mov	r4,r5
    88b0:	300b883a 	mov	r5,r6
    88b4:	100d883a 	mov	r6,r2
    88b8:	180f883a 	mov	r7,r3
    88bc:	000936c0 	call	936c <__muldf3>
    88c0:	100f883a 	mov	r7,r2
    88c4:	1811883a 	mov	r8,r3
    88c8:	380b883a 	mov	r5,r7
    88cc:	400d883a 	mov	r6,r8
    88d0:	01000074 	movhi	r4,1
    88d4:	2130ec04 	addi	r4,r4,-15440
    88d8:	20800617 	ldw	r2,24(r4)
    88dc:	20c00717 	ldw	r3,28(r4)
    88e0:	2809883a 	mov	r4,r5
    88e4:	300b883a 	mov	r5,r6
    88e8:	100d883a 	mov	r6,r2
    88ec:	180f883a 	mov	r7,r3
    88f0:	000936c0 	call	936c <__muldf3>
    88f4:	1009883a 	mov	r4,r2
    88f8:	180b883a 	mov	r5,r3
    88fc:	2025883a 	mov	r18,r4
    8900:	2827883a 	mov	r19,r5
    8904:	00800074 	movhi	r2,1
    8908:	10b0ec04 	addi	r2,r2,-15440
    890c:	11400417 	ldw	r5,16(r2)
    8910:	11800517 	ldw	r6,20(r2)
    8914:	01000074 	movhi	r4,1
    8918:	2130ec04 	addi	r4,r4,-15440
    891c:	20800217 	ldw	r2,8(r4)
    8920:	20c00317 	ldw	r3,12(r4)
    8924:	2809883a 	mov	r4,r5
    8928:	300b883a 	mov	r5,r6
    892c:	100d883a 	mov	r6,r2
    8930:	180f883a 	mov	r7,r3
    8934:	000936c0 	call	936c <__muldf3>
    8938:	1009883a 	mov	r4,r2
    893c:	180b883a 	mov	r5,r3
    8940:	2029883a 	mov	r20,r4
    8944:	282b883a 	mov	r21,r5
    8948:	00800074 	movhi	r2,1
    894c:	10b0e004 	addi	r2,r2,-15488
    8950:	11400217 	ldw	r5,8(r2)
    8954:	11800317 	ldw	r6,12(r2)
    8958:	01000074 	movhi	r4,1
    895c:	21310e04 	addi	r4,r4,-15304
    8960:	20800217 	ldw	r2,8(r4)
    8964:	20c00317 	ldw	r3,12(r4)
    8968:	2809883a 	mov	r4,r5
    896c:	300b883a 	mov	r5,r6
    8970:	100d883a 	mov	r6,r2
    8974:	180f883a 	mov	r7,r3
    8978:	000930c0 	call	930c <__subdf3>
    897c:	1009883a 	mov	r4,r2
    8980:	180b883a 	mov	r5,r3
    8984:	2005883a 	mov	r2,r4
    8988:	2807883a 	mov	r3,r5
    898c:	a009883a 	mov	r4,r20
    8990:	a80b883a 	mov	r5,r21
    8994:	100d883a 	mov	r6,r2
    8998:	180f883a 	mov	r7,r3
    899c:	000936c0 	call	936c <__muldf3>
    89a0:	1009883a 	mov	r4,r2
    89a4:	180b883a 	mov	r5,r3
    89a8:	2005883a 	mov	r2,r4
    89ac:	2807883a 	mov	r3,r5
    89b0:	9009883a 	mov	r4,r18
    89b4:	980b883a 	mov	r5,r19
    89b8:	100d883a 	mov	r6,r2
    89bc:	180f883a 	mov	r7,r3
    89c0:	00092b80 	call	92b8 <__adddf3>
    89c4:	1009883a 	mov	r4,r2
    89c8:	180b883a 	mov	r5,r3
    89cc:	2025883a 	mov	r18,r4
    89d0:	2827883a 	mov	r19,r5
    89d4:	00800074 	movhi	r2,1
    89d8:	10b0ec04 	addi	r2,r2,-15440
    89dc:	11400217 	ldw	r5,8(r2)
    89e0:	11800317 	ldw	r6,12(r2)
    89e4:	d0a00317 	ldw	r2,-32756(gp)
    89e8:	01000074 	movhi	r4,1
    89ec:	212ffc04 	addi	r4,r4,-16400
    89f0:	20c00017 	ldw	r3,0(r4)
    89f4:	2809883a 	mov	r4,r5
    89f8:	300b883a 	mov	r5,r6
    89fc:	100d883a 	mov	r6,r2
    8a00:	180f883a 	mov	r7,r3
    8a04:	000936c0 	call	936c <__muldf3>
    8a08:	100f883a 	mov	r7,r2
    8a0c:	1811883a 	mov	r8,r3
    8a10:	380b883a 	mov	r5,r7
    8a14:	400d883a 	mov	r6,r8
    8a18:	01000074 	movhi	r4,1
    8a1c:	2130e004 	addi	r4,r4,-15488
    8a20:	20800217 	ldw	r2,8(r4)
    8a24:	20c00317 	ldw	r3,12(r4)
    8a28:	2809883a 	mov	r4,r5
    8a2c:	300b883a 	mov	r5,r6
    8a30:	100d883a 	mov	r6,r2
    8a34:	180f883a 	mov	r7,r3
    8a38:	000936c0 	call	936c <__muldf3>
    8a3c:	1009883a 	mov	r4,r2
    8a40:	180b883a 	mov	r5,r3
    8a44:	2005883a 	mov	r2,r4
    8a48:	2807883a 	mov	r3,r5
    8a4c:	9009883a 	mov	r4,r18
    8a50:	980b883a 	mov	r5,r19
    8a54:	100d883a 	mov	r6,r2
    8a58:	180f883a 	mov	r7,r3
    8a5c:	00092b80 	call	92b8 <__adddf3>
    8a60:	1009883a 	mov	r4,r2
    8a64:	180b883a 	mov	r5,r3
    8a68:	2005883a 	mov	r2,r4
    8a6c:	2807883a 	mov	r3,r5
    8a70:	8009883a 	mov	r4,r16
    8a74:	880b883a 	mov	r5,r17
    8a78:	100d883a 	mov	r6,r2
    8a7c:	180f883a 	mov	r7,r3
    8a80:	000936c0 	call	936c <__muldf3>
    8a84:	1009883a 	mov	r4,r2
    8a88:	180b883a 	mov	r5,r3
    8a8c:	2005883a 	mov	r2,r4
    8a90:	2807883a 	mov	r3,r5
    8a94:	01000074 	movhi	r4,1
    8a98:	2130e004 	addi	r4,r4,-15488
    8a9c:	20800015 	stw	r2,0(r4)
    8aa0:	20c00115 	stw	r3,4(r4)

	/* PID1\uI = PID1\uI_previous + (sampletime * PID1\uD) / PID1\tauI; */
	xx_R[2] = xx_s[2] + (xx_step_size * xx_R[0]) / xx_P[4];
    8aa4:	00800074 	movhi	r2,1
    8aa8:	10b10e04 	addi	r2,r2,-15304
    8aac:	14000417 	ldw	r16,16(r2)
    8ab0:	14400517 	ldw	r17,20(r2)
    8ab4:	00800074 	movhi	r2,1
    8ab8:	10b0e004 	addi	r2,r2,-15488
    8abc:	11400017 	ldw	r5,0(r2)
    8ac0:	11800117 	ldw	r6,4(r2)
    8ac4:	d0a00317 	ldw	r2,-32756(gp)
    8ac8:	01000074 	movhi	r4,1
    8acc:	212ffc04 	addi	r4,r4,-16400
    8ad0:	20c00017 	ldw	r3,0(r4)
    8ad4:	2809883a 	mov	r4,r5
    8ad8:	300b883a 	mov	r5,r6
    8adc:	100d883a 	mov	r6,r2
    8ae0:	180f883a 	mov	r7,r3
    8ae4:	000936c0 	call	936c <__muldf3>
    8ae8:	100f883a 	mov	r7,r2
    8aec:	1811883a 	mov	r8,r3
    8af0:	380b883a 	mov	r5,r7
    8af4:	400d883a 	mov	r6,r8
    8af8:	01000074 	movhi	r4,1
    8afc:	2130ec04 	addi	r4,r4,-15440
    8b00:	20800817 	ldw	r2,32(r4)
    8b04:	20c00917 	ldw	r3,36(r4)
    8b08:	2809883a 	mov	r4,r5
    8b0c:	300b883a 	mov	r5,r6
    8b10:	100d883a 	mov	r6,r2
    8b14:	180f883a 	mov	r7,r3
    8b18:	00096500 	call	9650 <__divdf3>
    8b1c:	1009883a 	mov	r4,r2
    8b20:	180b883a 	mov	r5,r3
    8b24:	2005883a 	mov	r2,r4
    8b28:	2807883a 	mov	r3,r5
    8b2c:	8009883a 	mov	r4,r16
    8b30:	880b883a 	mov	r5,r17
    8b34:	100d883a 	mov	r6,r2
    8b38:	180f883a 	mov	r7,r3
    8b3c:	00092b80 	call	92b8 <__adddf3>
    8b40:	1009883a 	mov	r4,r2
    8b44:	180b883a 	mov	r5,r3
    8b48:	2005883a 	mov	r2,r4
    8b4c:	2807883a 	mov	r3,r5
    8b50:	01000074 	movhi	r4,1
    8b54:	2130e004 	addi	r4,r4,-15488
    8b58:	20800415 	stw	r2,16(r4)
    8b5c:	20c00515 	stw	r3,20(r4)

	/* PID1\output = PID1\uI + PID1\uD; */
	xx_V[1] = xx_R[2] + xx_R[0];
    8b60:	00800074 	movhi	r2,1
    8b64:	10b0e004 	addi	r2,r2,-15488
    8b68:	11400417 	ldw	r5,16(r2)
    8b6c:	11800517 	ldw	r6,20(r2)
    8b70:	01000074 	movhi	r4,1
    8b74:	2130e004 	addi	r4,r4,-15488
    8b78:	20800017 	ldw	r2,0(r4)
    8b7c:	20c00117 	ldw	r3,4(r4)
    8b80:	2809883a 	mov	r4,r5
    8b84:	300b883a 	mov	r5,r6
    8b88:	100d883a 	mov	r6,r2
    8b8c:	180f883a 	mov	r7,r3
    8b90:	00092b80 	call	92b8 <__adddf3>
    8b94:	1009883a 	mov	r4,r2
    8b98:	180b883a 	mov	r5,r3
    8b9c:	2005883a 	mov	r2,r4
    8ba0:	2807883a 	mov	r3,r5
    8ba4:	01000074 	movhi	r4,1
    8ba8:	2130fa04 	addi	r4,r4,-15384
    8bac:	20800215 	stw	r2,8(r4)
    8bb0:	20c00315 	stw	r3,12(r4)

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	xx_V[4] = ((xx_V[1] < xx_P[5]) ?
    8bb4:	00800074 	movhi	r2,1
    8bb8:	10b0fa04 	addi	r2,r2,-15384
    8bbc:	11400217 	ldw	r5,8(r2)
    8bc0:	11800317 	ldw	r6,12(r2)
    8bc4:	01000074 	movhi	r4,1
    8bc8:	2130ec04 	addi	r4,r4,-15440
    8bcc:	20800a17 	ldw	r2,40(r4)
    8bd0:	20c00b17 	ldw	r3,44(r4)
		/* SignalLimiter2\minimum */
		xx_P[5]
	:
    8bd4:	2809883a 	mov	r4,r5
    8bd8:	300b883a 	mov	r5,r6
    8bdc:	100d883a 	mov	r6,r2
    8be0:	180f883a 	mov	r7,r3
    8be4:	00098680 	call	9868 <__ltdf2>
    8be8:	1000050e 	bge	r2,zero,8c00 <XXCalculateDynamic+0x540>
    8bec:	01000074 	movhi	r4,1
    8bf0:	2130ec04 	addi	r4,r4,-15440
    8bf4:	20800a17 	ldw	r2,40(r4)
    8bf8:	20c00b17 	ldw	r3,44(r4)
    8bfc:	00001906 	br	8c64 <XXCalculateDynamic+0x5a4>
		/* (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) */
		((xx_V[1] > xx_P[6]) ?
    8c00:	00800074 	movhi	r2,1
    8c04:	10b0fa04 	addi	r2,r2,-15384
    8c08:	11400217 	ldw	r5,8(r2)
    8c0c:	11800317 	ldw	r6,12(r2)
    8c10:	01000074 	movhi	r4,1
    8c14:	2130ec04 	addi	r4,r4,-15440
    8c18:	20800c17 	ldw	r2,48(r4)
    8c1c:	20c00d17 	ldw	r3,52(r4)
			/* SignalLimiter2\maximum */
			xx_P[6]
		:
    8c20:	2809883a 	mov	r4,r5
    8c24:	300b883a 	mov	r5,r6
    8c28:	100d883a 	mov	r6,r2
    8c2c:	180f883a 	mov	r7,r3
    8c30:	00098040 	call	9804 <__gtdf2>
    8c34:	0080050e 	bge	zero,r2,8c4c <XXCalculateDynamic+0x58c>
    8c38:	00800074 	movhi	r2,1
    8c3c:	10b0ec04 	addi	r2,r2,-15440
    8c40:	11000c17 	ldw	r4,48(r2)
    8c44:	11400d17 	ldw	r5,52(r2)
    8c48:	00000406 	br	8c5c <XXCalculateDynamic+0x59c>
    8c4c:	00800074 	movhi	r2,1
    8c50:	10b0fa04 	addi	r2,r2,-15384
    8c54:	11000217 	ldw	r4,8(r2)
    8c58:	11400317 	ldw	r5,12(r2)

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	xx_V[4] = ((xx_V[1] < xx_P[5]) ?
		/* SignalLimiter2\minimum */
		xx_P[5]
	:
    8c5c:	2005883a 	mov	r2,r4
    8c60:	2807883a 	mov	r3,r5

	/* PID1\output = PID1\uI + PID1\uD; */
	xx_V[1] = xx_R[2] + xx_R[0];

	/* SignalLimiter2\output = (if PID1\output < SignalLimiter2\minimum then SignalLimiter2\minimum else (if PID1\output > SignalLimiter2\maximum then SignalLimiter2\maximum else PID1\output end) end); */
	xx_V[4] = ((xx_V[1] < xx_P[5]) ?
    8c64:	01000074 	movhi	r4,1
    8c68:	2130fa04 	addi	r4,r4,-15384
    8c6c:	20800815 	stw	r2,32(r4)
    8c70:	20c00915 	stw	r3,36(r4)
		)
	);


	/* increment the step counter */
	xx_steps++;
    8c74:	d0a0df17 	ldw	r2,-31876(gp)
    8c78:	10800044 	addi	r2,r2,1
    8c7c:	d0a0df15 	stw	r2,-31876(gp)
}
    8c80:	e037883a 	mov	sp,fp
    8c84:	dfc00717 	ldw	ra,28(sp)
    8c88:	df000617 	ldw	fp,24(sp)
    8c8c:	dd400517 	ldw	r21,20(sp)
    8c90:	dd000417 	ldw	r20,16(sp)
    8c94:	dcc00317 	ldw	r19,12(sp)
    8c98:	dc800217 	ldw	r18,8(sp)
    8c9c:	dc400117 	ldw	r17,4(sp)
    8ca0:	dc000017 	ldw	r16,0(sp)
    8ca4:	dec00804 	addi	sp,sp,32
    8ca8:	f800283a 	ret

00008cac <XXCalculateOutput>:
 * and are kept separate to make the dynamic set of equations smaller.
 * These dynamic equations are called often more than one time for each
 * integration step that is taken. This makes model computation much faster.
 */
void XXCalculateOutput (void)
{
    8cac:	deffff04 	addi	sp,sp,-4
    8cb0:	df000015 	stw	fp,0(sp)
    8cb4:	d839883a 	mov	fp,sp
	/* corr = corrGain\corr; */
	xx_V[6] = xx_V[0];
    8cb8:	01000074 	movhi	r4,1
    8cbc:	2130fa04 	addi	r4,r4,-15384
    8cc0:	20800017 	ldw	r2,0(r4)
    8cc4:	20c00117 	ldw	r3,4(r4)
    8cc8:	01000074 	movhi	r4,1
    8ccc:	2130fa04 	addi	r4,r4,-15384
    8cd0:	20800c15 	stw	r2,48(r4)
    8cd4:	20c00d15 	stw	r3,52(r4)

	/* out = SignalLimiter2\output; */
	xx_V[9] = xx_V[4];
    8cd8:	01000074 	movhi	r4,1
    8cdc:	2130fa04 	addi	r4,r4,-15384
    8ce0:	20800817 	ldw	r2,32(r4)
    8ce4:	20c00917 	ldw	r3,36(r4)
    8ce8:	01000074 	movhi	r4,1
    8cec:	2130fa04 	addi	r4,r4,-15384
    8cf0:	20801215 	stw	r2,72(r4)
    8cf4:	20c01315 	stw	r3,76(r4)

}
    8cf8:	e037883a 	mov	sp,fp
    8cfc:	df000017 	ldw	fp,0(sp)
    8d00:	dec00104 	addi	sp,sp,4
    8d04:	f800283a 	ret

00008d08 <XXCalculateFinal>:
/* This function calculates the final equations of the model.
 * These equations are calculated after all the calculations
 * are performed
 */
void XXCalculateFinal (void)
{
    8d08:	deffff04 	addi	sp,sp,-4
    8d0c:	df000015 	stw	fp,0(sp)
    8d10:	d839883a 	mov	fp,sp

}
    8d14:	e037883a 	mov	sp,fp
    8d18:	df000017 	ldw	fp,0(sp)
    8d1c:	dec00104 	addi	sp,sp,4
    8d20:	f800283a 	ret

00008d24 <XXModelTerminate>:

/* this method is called after all calculations are performed */
void XXModelTerminate(void)
{
    8d24:	deffff04 	addi	sp,sp,-4
    8d28:	df000015 	stw	fp,0(sp)
    8d2c:	d839883a 	mov	fp,sp
}
    8d30:	e037883a 	mov	sp,fp
    8d34:	df000017 	ldw	fp,0(sp)
    8d38:	dec00104 	addi	sp,sp,4
    8d3c:	f800283a 	ret

00008d40 <__divsf3>:
    8d40:	defff504 	addi	sp,sp,-44
    8d44:	d9000915 	stw	r4,36(sp)
    8d48:	d9400815 	stw	r5,32(sp)
    8d4c:	d9000904 	addi	r4,sp,36
    8d50:	d9400404 	addi	r5,sp,16
    8d54:	dfc00a15 	stw	ra,40(sp)
    8d58:	0009c680 	call	9c68 <__unpack_f>
    8d5c:	d9000804 	addi	r4,sp,32
    8d60:	d80b883a 	mov	r5,sp
    8d64:	0009c680 	call	9c68 <__unpack_f>
    8d68:	d8c00417 	ldw	r3,16(sp)
    8d6c:	00800044 	movi	r2,1
    8d70:	10c00536 	bltu	r2,r3,8d88 <__divsf3+0x48>
    8d74:	d9000404 	addi	r4,sp,16
    8d78:	0009b3c0 	call	9b3c <__pack_f>
    8d7c:	dfc00a17 	ldw	ra,40(sp)
    8d80:	dec00b04 	addi	sp,sp,44
    8d84:	f800283a 	ret
    8d88:	d9000017 	ldw	r4,0(sp)
    8d8c:	11000536 	bltu	r2,r4,8da4 <__divsf3+0x64>
    8d90:	d809883a 	mov	r4,sp
    8d94:	0009b3c0 	call	9b3c <__pack_f>
    8d98:	dfc00a17 	ldw	ra,40(sp)
    8d9c:	dec00b04 	addi	sp,sp,44
    8da0:	f800283a 	ret
    8da4:	d9800517 	ldw	r6,20(sp)
    8da8:	d9400117 	ldw	r5,4(sp)
    8dac:	00800104 	movi	r2,4
    8db0:	314af03a 	xor	r5,r6,r5
    8db4:	d9400515 	stw	r5,20(sp)
    8db8:	18800226 	beq	r3,r2,8dc4 <__divsf3+0x84>
    8dbc:	01400084 	movi	r5,2
    8dc0:	1940041e 	bne	r3,r5,8dd4 <__divsf3+0x94>
    8dc4:	193feb1e 	bne	r3,r4,8d74 <__divsf3+0x34>
    8dc8:	01000074 	movhi	r4,1
    8dcc:	212eec04 	addi	r4,r4,-17488
    8dd0:	003fe906 	br	8d78 <__divsf3+0x38>
    8dd4:	20802226 	beq	r4,r2,8e60 <__divsf3+0x120>
    8dd8:	21402526 	beq	r4,r5,8e70 <__divsf3+0x130>
    8ddc:	d9000617 	ldw	r4,24(sp)
    8de0:	d8c00217 	ldw	r3,8(sp)
    8de4:	d8800717 	ldw	r2,28(sp)
    8de8:	d9400317 	ldw	r5,12(sp)
    8dec:	20c7c83a 	sub	r3,r4,r3
    8df0:	d8c00615 	stw	r3,24(sp)
    8df4:	1140032e 	bgeu	r2,r5,8e04 <__divsf3+0xc4>
    8df8:	18ffffc4 	addi	r3,r3,-1
    8dfc:	1085883a 	add	r2,r2,r2
    8e00:	d8c00615 	stw	r3,24(sp)
    8e04:	00c007c4 	movi	r3,31
    8e08:	01100034 	movhi	r4,16384
    8e0c:	000d883a 	mov	r6,zero
    8e10:	18ffffc4 	addi	r3,r3,-1
    8e14:	11400236 	bltu	r2,r5,8e20 <__divsf3+0xe0>
    8e18:	310cb03a 	or	r6,r6,r4
    8e1c:	1145c83a 	sub	r2,r2,r5
    8e20:	2008d07a 	srli	r4,r4,1
    8e24:	1085883a 	add	r2,r2,r2
    8e28:	183ff91e 	bne	r3,zero,8e10 <__divsf3+0xd0>
    8e2c:	31001fcc 	andi	r4,r6,127
    8e30:	00c01004 	movi	r3,64
    8e34:	20c00226 	beq	r4,r3,8e40 <__divsf3+0x100>
    8e38:	d9800715 	stw	r6,28(sp)
    8e3c:	003fcd06 	br	8d74 <__divsf3+0x34>
    8e40:	30c0200c 	andi	r3,r6,128
    8e44:	183ffc1e 	bne	r3,zero,8e38 <__divsf3+0xf8>
    8e48:	103ffb26 	beq	r2,zero,8e38 <__divsf3+0xf8>
    8e4c:	31801004 	addi	r6,r6,64
    8e50:	00bfe004 	movi	r2,-128
    8e54:	308c703a 	and	r6,r6,r2
    8e58:	d9800715 	stw	r6,28(sp)
    8e5c:	003fc506 	br	8d74 <__divsf3+0x34>
    8e60:	d8000715 	stw	zero,28(sp)
    8e64:	d8000615 	stw	zero,24(sp)
    8e68:	d9000404 	addi	r4,sp,16
    8e6c:	003fc206 	br	8d78 <__divsf3+0x38>
    8e70:	d8800415 	stw	r2,16(sp)
    8e74:	d9000404 	addi	r4,sp,16
    8e78:	003fbf06 	br	8d78 <__divsf3+0x38>

00008e7c <__floatsisf>:
    8e7c:	2004d7fa 	srli	r2,r4,31
    8e80:	defffa04 	addi	sp,sp,-24
    8e84:	00c000c4 	movi	r3,3
    8e88:	dfc00515 	stw	ra,20(sp)
    8e8c:	dc000415 	stw	r16,16(sp)
    8e90:	d8c00015 	stw	r3,0(sp)
    8e94:	d8800115 	stw	r2,4(sp)
    8e98:	2000081e 	bne	r4,zero,8ebc <__floatsisf+0x40>
    8e9c:	00800084 	movi	r2,2
    8ea0:	d8800015 	stw	r2,0(sp)
    8ea4:	d809883a 	mov	r4,sp
    8ea8:	0009b3c0 	call	9b3c <__pack_f>
    8eac:	dfc00517 	ldw	ra,20(sp)
    8eb0:	dc000417 	ldw	r16,16(sp)
    8eb4:	dec00604 	addi	sp,sp,24
    8eb8:	f800283a 	ret
    8ebc:	00c00784 	movi	r3,30
    8ec0:	d8c00215 	stw	r3,8(sp)
    8ec4:	10000b1e 	bne	r2,zero,8ef4 <__floatsisf+0x78>
    8ec8:	2021883a 	mov	r16,r4
    8ecc:	8009883a 	mov	r4,r16
    8ed0:	0009a900 	call	9a90 <__clzsi2>
    8ed4:	113fffc4 	addi	r4,r2,-1
    8ed8:	01000d0e 	bge	zero,r4,8f10 <__floatsisf+0x94>
    8edc:	8108983a 	sll	r4,r16,r4
    8ee0:	00c007c4 	movi	r3,31
    8ee4:	1885c83a 	sub	r2,r3,r2
    8ee8:	d9000315 	stw	r4,12(sp)
    8eec:	d8800215 	stw	r2,8(sp)
    8ef0:	003fec06 	br	8ea4 <__floatsisf+0x28>
    8ef4:	00a00034 	movhi	r2,32768
    8ef8:	20800726 	beq	r4,r2,8f18 <__floatsisf+0x9c>
    8efc:	0121c83a 	sub	r16,zero,r4
    8f00:	8009883a 	mov	r4,r16
    8f04:	0009a900 	call	9a90 <__clzsi2>
    8f08:	113fffc4 	addi	r4,r2,-1
    8f0c:	013ff316 	blt	zero,r4,8edc <__floatsisf+0x60>
    8f10:	dc000315 	stw	r16,12(sp)
    8f14:	003fe306 	br	8ea4 <__floatsisf+0x28>
    8f18:	00b3c034 	movhi	r2,52992
    8f1c:	003fe306 	br	8eac <__floatsisf+0x30>

00008f20 <__extendsfdf2>:
    8f20:	defff904 	addi	sp,sp,-28
    8f24:	d9000515 	stw	r4,20(sp)
    8f28:	d9400104 	addi	r5,sp,4
    8f2c:	d9000504 	addi	r4,sp,20
    8f30:	dfc00615 	stw	ra,24(sp)
    8f34:	0009c680 	call	9c68 <__unpack_f>
    8f38:	d9c00417 	ldw	r7,16(sp)
    8f3c:	d9000117 	ldw	r4,4(sp)
    8f40:	d9400217 	ldw	r5,8(sp)
    8f44:	3804d0ba 	srli	r2,r7,2
    8f48:	d9800317 	ldw	r6,12(sp)
    8f4c:	380e97ba 	slli	r7,r7,30
    8f50:	d8800015 	stw	r2,0(sp)
    8f54:	00099980 	call	9998 <__make_dp>
    8f58:	dfc00617 	ldw	ra,24(sp)
    8f5c:	dec00704 	addi	sp,sp,28
    8f60:	f800283a 	ret

00008f64 <_fpadd_parts>:
    8f64:	2005883a 	mov	r2,r4
    8f68:	21000017 	ldw	r4,0(r4)
    8f6c:	01c00044 	movi	r7,1
    8f70:	3900622e 	bgeu	r7,r4,90fc <_fpadd_parts+0x198>
    8f74:	28c00017 	ldw	r3,0(r5)
    8f78:	38c05f2e 	bgeu	r7,r3,90f8 <_fpadd_parts+0x194>
    8f7c:	01c00104 	movi	r7,4
    8f80:	21c0c626 	beq	r4,r7,929c <_fpadd_parts+0x338>
    8f84:	19c05c26 	beq	r3,r7,90f8 <_fpadd_parts+0x194>
    8f88:	01c00084 	movi	r7,2
    8f8c:	19c06b26 	beq	r3,r7,913c <_fpadd_parts+0x1d8>
    8f90:	21c05926 	beq	r4,r7,90f8 <_fpadd_parts+0x194>
    8f94:	11c00217 	ldw	r7,8(r2)
    8f98:	2ac00217 	ldw	r11,8(r5)
    8f9c:	13000317 	ldw	r12,12(r2)
    8fa0:	13400417 	ldw	r13,16(r2)
    8fa4:	3ac9c83a 	sub	r4,r7,r11
    8fa8:	2a000317 	ldw	r8,12(r5)
    8fac:	2a400417 	ldw	r9,16(r5)
    8fb0:	2015883a 	mov	r10,r4
    8fb4:	20007516 	blt	r4,zero,918c <_fpadd_parts+0x228>
    8fb8:	00c00fc4 	movi	r3,63
    8fbc:	1a805016 	blt	r3,r10,9100 <_fpadd_parts+0x19c>
    8fc0:	0100870e 	bge	zero,r4,91e0 <_fpadd_parts+0x27c>
    8fc4:	50fff804 	addi	r3,r10,-32
    8fc8:	18009916 	blt	r3,zero,9230 <_fpadd_parts+0x2cc>
    8fcc:	48d6d83a 	srl	r11,r9,r3
    8fd0:	001d883a 	mov	r14,zero
    8fd4:	18009e16 	blt	r3,zero,9250 <_fpadd_parts+0x2ec>
    8fd8:	01000044 	movi	r4,1
    8fdc:	20c6983a 	sll	r3,r4,r3
    8fe0:	0015883a 	mov	r10,zero
    8fe4:	513fffc4 	addi	r4,r10,-1
    8fe8:	2295403a 	cmpgeu	r10,r4,r10
    8fec:	1a87c83a 	sub	r3,r3,r10
    8ff0:	1a52703a 	and	r9,r3,r9
    8ff4:	2210703a 	and	r8,r4,r8
    8ff8:	4250b03a 	or	r8,r8,r9
    8ffc:	4010c03a 	cmpne	r8,r8,zero
    9000:	42d0b03a 	or	r8,r8,r11
    9004:	7013883a 	mov	r9,r14
    9008:	11000117 	ldw	r4,4(r2)
    900c:	28800117 	ldw	r2,4(r5)
    9010:	20804126 	beq	r4,r2,9118 <_fpadd_parts+0x1b4>
    9014:	20006326 	beq	r4,zero,91a4 <_fpadd_parts+0x240>
    9018:	4305c83a 	sub	r2,r8,r12
    901c:	4091803a 	cmpltu	r8,r8,r2
    9020:	4b47c83a 	sub	r3,r9,r13
    9024:	1a07c83a 	sub	r3,r3,r8
    9028:	18006316 	blt	r3,zero,91b8 <_fpadd_parts+0x254>
    902c:	30000115 	stw	zero,4(r6)
    9030:	31c00215 	stw	r7,8(r6)
    9034:	30800315 	stw	r2,12(r6)
    9038:	30c00415 	stw	r3,16(r6)
    903c:	11ffffc4 	addi	r7,r2,-1
    9040:	388b403a 	cmpgeu	r5,r7,r2
    9044:	194bc83a 	sub	r5,r3,r5
    9048:	01040034 	movhi	r4,4096
    904c:	213fffc4 	addi	r4,r4,-1
    9050:	21401736 	bltu	r4,r5,90b0 <_fpadd_parts+0x14c>
    9054:	29008226 	beq	r5,r4,9260 <_fpadd_parts+0x2fc>
    9058:	31400217 	ldw	r5,8(r6)
    905c:	02840034 	movhi	r10,4096
    9060:	52bfffc4 	addi	r10,r10,-1
    9064:	033fff84 	movi	r12,-2
    9068:	297fffc4 	addi	r5,r5,-1
    906c:	00000106 	br	9074 <_fpadd_parts+0x110>
    9070:	3a804a26 	beq	r7,r10,919c <_fpadd_parts+0x238>
    9074:	1089883a 	add	r4,r2,r2
    9078:	2091803a 	cmpltu	r8,r4,r2
    907c:	18c7883a 	add	r3,r3,r3
    9080:	227fffc4 	addi	r9,r4,-1
    9084:	40d1883a 	add	r8,r8,r3
    9088:	490f403a 	cmpgeu	r7,r9,r4
    908c:	41cfc83a 	sub	r7,r8,r7
    9090:	2817883a 	mov	r11,r5
    9094:	2005883a 	mov	r2,r4
    9098:	4007883a 	mov	r3,r8
    909c:	297fffc4 	addi	r5,r5,-1
    90a0:	51fff32e 	bgeu	r10,r7,9070 <_fpadd_parts+0x10c>
    90a4:	31000315 	stw	r4,12(r6)
    90a8:	32000415 	stw	r8,16(r6)
    90ac:	32c00215 	stw	r11,8(r6)
    90b0:	010000c4 	movi	r4,3
    90b4:	31000015 	stw	r4,0(r6)
    90b8:	01080034 	movhi	r4,8192
    90bc:	213fffc4 	addi	r4,r4,-1
    90c0:	20c00b2e 	bgeu	r4,r3,90f0 <_fpadd_parts+0x18c>
    90c4:	180e97fa 	slli	r7,r3,31
    90c8:	1008d07a 	srli	r4,r2,1
    90cc:	31400217 	ldw	r5,8(r6)
    90d0:	1806d07a 	srli	r3,r3,1
    90d4:	1080004c 	andi	r2,r2,1
    90d8:	3908b03a 	or	r4,r7,r4
    90dc:	1108b03a 	or	r4,r2,r4
    90e0:	29400044 	addi	r5,r5,1
    90e4:	31000315 	stw	r4,12(r6)
    90e8:	30c00415 	stw	r3,16(r6)
    90ec:	31400215 	stw	r5,8(r6)
    90f0:	3005883a 	mov	r2,r6
    90f4:	f800283a 	ret
    90f8:	2805883a 	mov	r2,r5
    90fc:	f800283a 	ret
    9100:	59c01e0e 	bge	r11,r7,917c <_fpadd_parts+0x218>
    9104:	11000117 	ldw	r4,4(r2)
    9108:	28800117 	ldw	r2,4(r5)
    910c:	0011883a 	mov	r8,zero
    9110:	0013883a 	mov	r9,zero
    9114:	20bfbf1e 	bne	r4,r2,9014 <_fpadd_parts+0xb0>
    9118:	4305883a 	add	r2,r8,r12
    911c:	1207803a 	cmpltu	r3,r2,r8
    9120:	4b53883a 	add	r9,r9,r13
    9124:	1a47883a 	add	r3,r3,r9
    9128:	31000115 	stw	r4,4(r6)
    912c:	31c00215 	stw	r7,8(r6)
    9130:	30800315 	stw	r2,12(r6)
    9134:	30c00415 	stw	r3,16(r6)
    9138:	003fdd06 	br	90b0 <_fpadd_parts+0x14c>
    913c:	20ffef1e 	bne	r4,r3,90fc <_fpadd_parts+0x198>
    9140:	31000015 	stw	r4,0(r6)
    9144:	10c00117 	ldw	r3,4(r2)
    9148:	30c00115 	stw	r3,4(r6)
    914c:	10c00217 	ldw	r3,8(r2)
    9150:	11000117 	ldw	r4,4(r2)
    9154:	29400117 	ldw	r5,4(r5)
    9158:	30c00215 	stw	r3,8(r6)
    915c:	10c00317 	ldw	r3,12(r2)
    9160:	2908703a 	and	r4,r5,r4
    9164:	30c00315 	stw	r3,12(r6)
    9168:	10c00417 	ldw	r3,16(r2)
    916c:	31000115 	stw	r4,4(r6)
    9170:	3005883a 	mov	r2,r6
    9174:	30c00415 	stw	r3,16(r6)
    9178:	f800283a 	ret
    917c:	580f883a 	mov	r7,r11
    9180:	0019883a 	mov	r12,zero
    9184:	001b883a 	mov	r13,zero
    9188:	003f9f06 	br	9008 <_fpadd_parts+0xa4>
    918c:	0115c83a 	sub	r10,zero,r4
    9190:	00c00fc4 	movi	r3,63
    9194:	1abfda16 	blt	r3,r10,9100 <_fpadd_parts+0x19c>
    9198:	003f8906 	br	8fc0 <_fpadd_parts+0x5c>
    919c:	627fb52e 	bgeu	r12,r9,9074 <_fpadd_parts+0x110>
    91a0:	003fc006 	br	90a4 <_fpadd_parts+0x140>
    91a4:	6205c83a 	sub	r2,r12,r8
    91a8:	6099803a 	cmpltu	r12,r12,r2
    91ac:	6a47c83a 	sub	r3,r13,r9
    91b0:	1b07c83a 	sub	r3,r3,r12
    91b4:	183f9d0e 	bge	r3,zero,902c <_fpadd_parts+0xc8>
    91b8:	0085c83a 	sub	r2,zero,r2
    91bc:	1008c03a 	cmpne	r4,r2,zero
    91c0:	00c7c83a 	sub	r3,zero,r3
    91c4:	1907c83a 	sub	r3,r3,r4
    91c8:	01000044 	movi	r4,1
    91cc:	31000115 	stw	r4,4(r6)
    91d0:	31c00215 	stw	r7,8(r6)
    91d4:	30800315 	stw	r2,12(r6)
    91d8:	30c00415 	stw	r3,16(r6)
    91dc:	003f9706 	br	903c <_fpadd_parts+0xd8>
    91e0:	203f8926 	beq	r4,zero,9008 <_fpadd_parts+0xa4>
    91e4:	50fff804 	addi	r3,r10,-32
    91e8:	3a8f883a 	add	r7,r7,r10
    91ec:	18002316 	blt	r3,zero,927c <_fpadd_parts+0x318>
    91f0:	68d6d83a 	srl	r11,r13,r3
    91f4:	001d883a 	mov	r14,zero
    91f8:	18001c16 	blt	r3,zero,926c <_fpadd_parts+0x308>
    91fc:	01000044 	movi	r4,1
    9200:	20c6983a 	sll	r3,r4,r3
    9204:	0015883a 	mov	r10,zero
    9208:	513fffc4 	addi	r4,r10,-1
    920c:	2295403a 	cmpgeu	r10,r4,r10
    9210:	1a87c83a 	sub	r3,r3,r10
    9214:	1b5a703a 	and	r13,r3,r13
    9218:	2318703a 	and	r12,r4,r12
    921c:	6358b03a 	or	r12,r12,r13
    9220:	6018c03a 	cmpne	r12,r12,zero
    9224:	62d8b03a 	or	r12,r12,r11
    9228:	701b883a 	mov	r13,r14
    922c:	003f7606 	br	9008 <_fpadd_parts+0xa4>
    9230:	4808907a 	slli	r4,r9,1
    9234:	02c007c4 	movi	r11,31
    9238:	5a97c83a 	sub	r11,r11,r10
    923c:	22c8983a 	sll	r4,r4,r11
    9240:	4296d83a 	srl	r11,r8,r10
    9244:	4a9cd83a 	srl	r14,r9,r10
    9248:	22d6b03a 	or	r11,r4,r11
    924c:	003f6106 	br	8fd4 <_fpadd_parts+0x70>
    9250:	00c00044 	movi	r3,1
    9254:	1a94983a 	sll	r10,r3,r10
    9258:	0007883a 	mov	r3,zero
    925c:	003f6106 	br	8fe4 <_fpadd_parts+0x80>
    9260:	013fff84 	movi	r4,-2
    9264:	21ff7c2e 	bgeu	r4,r7,9058 <_fpadd_parts+0xf4>
    9268:	003f9106 	br	90b0 <_fpadd_parts+0x14c>
    926c:	00c00044 	movi	r3,1
    9270:	1a94983a 	sll	r10,r3,r10
    9274:	0007883a 	mov	r3,zero
    9278:	003fe306 	br	9208 <_fpadd_parts+0x2a4>
    927c:	6816907a 	slli	r11,r13,1
    9280:	010007c4 	movi	r4,31
    9284:	2289c83a 	sub	r4,r4,r10
    9288:	5908983a 	sll	r4,r11,r4
    928c:	6296d83a 	srl	r11,r12,r10
    9290:	6a9cd83a 	srl	r14,r13,r10
    9294:	22d6b03a 	or	r11,r4,r11
    9298:	003fd706 	br	91f8 <_fpadd_parts+0x294>
    929c:	193f971e 	bne	r3,r4,90fc <_fpadd_parts+0x198>
    92a0:	11000117 	ldw	r4,4(r2)
    92a4:	28c00117 	ldw	r3,4(r5)
    92a8:	20ff9426 	beq	r4,r3,90fc <_fpadd_parts+0x198>
    92ac:	00800074 	movhi	r2,1
    92b0:	10aef004 	addi	r2,r2,-17472
    92b4:	f800283a 	ret

000092b8 <__adddf3>:
    92b8:	deffec04 	addi	sp,sp,-80
    92bc:	d9001115 	stw	r4,68(sp)
    92c0:	d9401215 	stw	r5,72(sp)
    92c4:	d9001104 	addi	r4,sp,68
    92c8:	d9400a04 	addi	r5,sp,40
    92cc:	dfc01315 	stw	ra,76(sp)
    92d0:	d9c01015 	stw	r7,64(sp)
    92d4:	d9800f15 	stw	r6,60(sp)
    92d8:	0009f800 	call	9f80 <__unpack_d>
    92dc:	d9000f04 	addi	r4,sp,60
    92e0:	d9400504 	addi	r5,sp,20
    92e4:	0009f800 	call	9f80 <__unpack_d>
    92e8:	d9000a04 	addi	r4,sp,40
    92ec:	d9400504 	addi	r5,sp,20
    92f0:	d80d883a 	mov	r6,sp
    92f4:	0008f640 	call	8f64 <_fpadd_parts>
    92f8:	1009883a 	mov	r4,r2
    92fc:	0009d5c0 	call	9d5c <__pack_d>
    9300:	dfc01317 	ldw	ra,76(sp)
    9304:	dec01404 	addi	sp,sp,80
    9308:	f800283a 	ret

0000930c <__subdf3>:
    930c:	deffec04 	addi	sp,sp,-80
    9310:	d9001115 	stw	r4,68(sp)
    9314:	d9401215 	stw	r5,72(sp)
    9318:	d9001104 	addi	r4,sp,68
    931c:	d9400a04 	addi	r5,sp,40
    9320:	dfc01315 	stw	ra,76(sp)
    9324:	d9c01015 	stw	r7,64(sp)
    9328:	d9800f15 	stw	r6,60(sp)
    932c:	0009f800 	call	9f80 <__unpack_d>
    9330:	d9000f04 	addi	r4,sp,60
    9334:	d9400504 	addi	r5,sp,20
    9338:	0009f800 	call	9f80 <__unpack_d>
    933c:	d8800617 	ldw	r2,24(sp)
    9340:	d9000a04 	addi	r4,sp,40
    9344:	d9400504 	addi	r5,sp,20
    9348:	d80d883a 	mov	r6,sp
    934c:	1080005c 	xori	r2,r2,1
    9350:	d8800615 	stw	r2,24(sp)
    9354:	0008f640 	call	8f64 <_fpadd_parts>
    9358:	1009883a 	mov	r4,r2
    935c:	0009d5c0 	call	9d5c <__pack_d>
    9360:	dfc01317 	ldw	ra,76(sp)
    9364:	dec01404 	addi	sp,sp,80
    9368:	f800283a 	ret

0000936c <__muldf3>:
    936c:	deffe404 	addi	sp,sp,-112
    9370:	d9001115 	stw	r4,68(sp)
    9374:	d9401215 	stw	r5,72(sp)
    9378:	d9001104 	addi	r4,sp,68
    937c:	d9400a04 	addi	r5,sp,40
    9380:	dfc01b15 	stw	ra,108(sp)
    9384:	d9800f15 	stw	r6,60(sp)
    9388:	d9c01015 	stw	r7,64(sp)
    938c:	ddc01a15 	stw	r23,104(sp)
    9390:	dd801915 	stw	r22,100(sp)
    9394:	dd401815 	stw	r21,96(sp)
    9398:	dd001715 	stw	r20,92(sp)
    939c:	dcc01615 	stw	r19,88(sp)
    93a0:	dc801515 	stw	r18,84(sp)
    93a4:	dc401415 	stw	r17,80(sp)
    93a8:	dc001315 	stw	r16,76(sp)
    93ac:	0009f800 	call	9f80 <__unpack_d>
    93b0:	d9000f04 	addi	r4,sp,60
    93b4:	d9400504 	addi	r5,sp,20
    93b8:	0009f800 	call	9f80 <__unpack_d>
    93bc:	d8c00a17 	ldw	r3,40(sp)
    93c0:	00800044 	movi	r2,1
    93c4:	10c01136 	bltu	r2,r3,940c <__muldf3+0xa0>
    93c8:	d8c00b17 	ldw	r3,44(sp)
    93cc:	d8800617 	ldw	r2,24(sp)
    93d0:	d9000a04 	addi	r4,sp,40
    93d4:	1884c03a 	cmpne	r2,r3,r2
    93d8:	d8800b15 	stw	r2,44(sp)
    93dc:	0009d5c0 	call	9d5c <__pack_d>
    93e0:	dfc01b17 	ldw	ra,108(sp)
    93e4:	ddc01a17 	ldw	r23,104(sp)
    93e8:	dd801917 	ldw	r22,100(sp)
    93ec:	dd401817 	ldw	r21,96(sp)
    93f0:	dd001717 	ldw	r20,92(sp)
    93f4:	dcc01617 	ldw	r19,88(sp)
    93f8:	dc801517 	ldw	r18,84(sp)
    93fc:	dc401417 	ldw	r17,80(sp)
    9400:	dc001317 	ldw	r16,76(sp)
    9404:	dec01c04 	addi	sp,sp,112
    9408:	f800283a 	ret
    940c:	d9000517 	ldw	r4,20(sp)
    9410:	11000636 	bltu	r2,r4,942c <__muldf3+0xc0>
    9414:	d8800617 	ldw	r2,24(sp)
    9418:	d8c00b17 	ldw	r3,44(sp)
    941c:	d9000504 	addi	r4,sp,20
    9420:	1884c03a 	cmpne	r2,r3,r2
    9424:	d8800615 	stw	r2,24(sp)
    9428:	003fec06 	br	93dc <__muldf3+0x70>
    942c:	00800104 	movi	r2,4
    9430:	1880051e 	bne	r3,r2,9448 <__muldf3+0xdc>
    9434:	00800084 	movi	r2,2
    9438:	20bfe31e 	bne	r4,r2,93c8 <__muldf3+0x5c>
    943c:	01000074 	movhi	r4,1
    9440:	212ef004 	addi	r4,r4,-17472
    9444:	003fe506 	br	93dc <__muldf3+0x70>
    9448:	2080031e 	bne	r4,r2,9458 <__muldf3+0xec>
    944c:	00800084 	movi	r2,2
    9450:	18bffa26 	beq	r3,r2,943c <__muldf3+0xd0>
    9454:	003fef06 	br	9414 <__muldf3+0xa8>
    9458:	00800084 	movi	r2,2
    945c:	18bfda26 	beq	r3,r2,93c8 <__muldf3+0x5c>
    9460:	20bfec26 	beq	r4,r2,9414 <__muldf3+0xa8>
    9464:	dc000d17 	ldw	r16,52(sp)
    9468:	dd000817 	ldw	r20,32(sp)
    946c:	dc800917 	ldw	r18,36(sp)
    9470:	8009883a 	mov	r4,r16
    9474:	000b883a 	mov	r5,zero
    9478:	a00d883a 	mov	r6,r20
    947c:	000f883a 	mov	r7,zero
    9480:	0009a300 	call	9a30 <__muldi3>
    9484:	dc400e17 	ldw	r17,56(sp)
    9488:	9009883a 	mov	r4,r18
    948c:	800d883a 	mov	r6,r16
    9490:	000b883a 	mov	r5,zero
    9494:	000f883a 	mov	r7,zero
    9498:	102f883a 	mov	r23,r2
    949c:	1827883a 	mov	r19,r3
    94a0:	0009a300 	call	9a30 <__muldi3>
    94a4:	900d883a 	mov	r6,r18
    94a8:	8809883a 	mov	r4,r17
    94ac:	000b883a 	mov	r5,zero
    94b0:	000f883a 	mov	r7,zero
    94b4:	102b883a 	mov	r21,r2
    94b8:	1821883a 	mov	r16,r3
    94bc:	0009a300 	call	9a30 <__muldi3>
    94c0:	8809883a 	mov	r4,r17
    94c4:	000b883a 	mov	r5,zero
    94c8:	a00d883a 	mov	r6,r20
    94cc:	000f883a 	mov	r7,zero
    94d0:	102d883a 	mov	r22,r2
    94d4:	1825883a 	mov	r18,r3
    94d8:	0009a300 	call	9a30 <__muldi3>
    94dc:	154b883a 	add	r5,r2,r21
    94e0:	2889803a 	cmpltu	r4,r5,r2
    94e4:	1c07883a 	add	r3,r3,r16
    94e8:	20c9883a 	add	r4,r4,r3
    94ec:	24004b36 	bltu	r4,r16,961c <__muldf3+0x2b0>
    94f0:	8100011e 	bne	r16,r4,94f8 <__muldf3+0x18c>
    94f4:	2d404936 	bltu	r5,r21,961c <__muldf3+0x2b0>
    94f8:	0011883a 	mov	r8,zero
    94fc:	0007883a 	mov	r3,zero
    9500:	2ccb883a 	add	r5,r5,r19
    9504:	b80d883a 	mov	r6,r23
    9508:	2cc0012e 	bgeu	r5,r19,9510 <__muldf3+0x1a4>
    950c:	02000044 	movi	r8,1
    9510:	258f883a 	add	r7,r4,r22
    9514:	3909803a 	cmpltu	r4,r7,r4
    9518:	da400c17 	ldw	r9,48(sp)
    951c:	2489883a 	add	r4,r4,r18
    9520:	d8800717 	ldw	r2,28(sp)
    9524:	20c9883a 	add	r4,r4,r3
    9528:	da800b17 	ldw	r10,44(sp)
    952c:	d8c00617 	ldw	r3,24(sp)
    9530:	3a11883a 	add	r8,r7,r8
    9534:	4885883a 	add	r2,r9,r2
    9538:	50c6c03a 	cmpne	r3,r10,r3
    953c:	41cf803a 	cmpltu	r7,r8,r7
    9540:	12400104 	addi	r9,r2,4
    9544:	d8c00115 	stw	r3,4(sp)
    9548:	3909883a 	add	r4,r7,r4
    954c:	da400215 	stw	r9,8(sp)
    9550:	03480034 	movhi	r13,8192
    9554:	6b7fffc4 	addi	r13,r13,-1
    9558:	4007883a 	mov	r3,r8
    955c:	6900102e 	bgeu	r13,r4,95a0 <__muldf3+0x234>
    9560:	10800144 	addi	r2,r2,5
    9564:	180ed07a 	srli	r7,r3,1
    9568:	18c0004c 	andi	r3,r3,1
    956c:	201097fa 	slli	r8,r4,31
    9570:	281697fa 	slli	r11,r5,31
    9574:	2008d07a 	srli	r4,r4,1
    9578:	3014d07a 	srli	r10,r6,1
    957c:	2812d07a 	srli	r9,r5,1
    9580:	1019883a 	mov	r12,r2
    9584:	18000226 	beq	r3,zero,9590 <__muldf3+0x224>
    9588:	5a8cb03a 	or	r6,r11,r10
    958c:	49600034 	orhi	r5,r9,32768
    9590:	41c6b03a 	or	r3,r8,r7
    9594:	10800044 	addi	r2,r2,1
    9598:	693ff236 	bltu	r13,r4,9564 <__muldf3+0x1f8>
    959c:	db000215 	stw	r12,8(sp)
    95a0:	03440034 	movhi	r13,4096
    95a4:	6b7fffc4 	addi	r13,r13,-1
    95a8:	69001336 	bltu	r13,r4,95f8 <__muldf3+0x28c>
    95ac:	d8800217 	ldw	r2,8(sp)
    95b0:	10bfffc4 	addi	r2,r2,-1
    95b4:	18d3883a 	add	r9,r3,r3
    95b8:	48c7803a 	cmpltu	r3,r9,r3
    95bc:	2109883a 	add	r4,r4,r4
    95c0:	190f883a 	add	r7,r3,r4
    95c4:	3191883a 	add	r8,r6,r6
    95c8:	4197803a 	cmpltu	r11,r8,r6
    95cc:	2955883a 	add	r10,r5,r5
    95d0:	1019883a 	mov	r12,r2
    95d4:	4807883a 	mov	r3,r9
    95d8:	3809883a 	mov	r4,r7
    95dc:	2800010e 	bge	r5,zero,95e4 <__muldf3+0x278>
    95e0:	48c00054 	ori	r3,r9,1
    95e4:	400d883a 	mov	r6,r8
    95e8:	5a8b883a 	add	r5,r11,r10
    95ec:	10bfffc4 	addi	r2,r2,-1
    95f0:	69fff02e 	bgeu	r13,r7,95b4 <__muldf3+0x248>
    95f4:	db000215 	stw	r12,8(sp)
    95f8:	18803fcc 	andi	r2,r3,255
    95fc:	01c02004 	movi	r7,128
    9600:	11c00926 	beq	r2,r7,9628 <__muldf3+0x2bc>
    9604:	008000c4 	movi	r2,3
    9608:	d9000415 	stw	r4,16(sp)
    960c:	d8c00315 	stw	r3,12(sp)
    9610:	d8800015 	stw	r2,0(sp)
    9614:	d809883a 	mov	r4,sp
    9618:	003f7006 	br	93dc <__muldf3+0x70>
    961c:	0011883a 	mov	r8,zero
    9620:	00c00044 	movi	r3,1
    9624:	003fb606 	br	9500 <__muldf3+0x194>
    9628:	19c0400c 	andi	r7,r3,256
    962c:	383ff51e 	bne	r7,zero,9604 <__muldf3+0x298>
    9630:	314ab03a 	or	r5,r6,r5
    9634:	283ff326 	beq	r5,zero,9604 <__muldf3+0x298>
    9638:	1885883a 	add	r2,r3,r2
    963c:	10cb803a 	cmpltu	r5,r2,r3
    9640:	00ffc004 	movi	r3,-256
    9644:	10c6703a 	and	r3,r2,r3
    9648:	2909883a 	add	r4,r5,r4
    964c:	003fed06 	br	9604 <__muldf3+0x298>

00009650 <__divdf3>:
    9650:	defff104 	addi	sp,sp,-60
    9654:	d9000c15 	stw	r4,48(sp)
    9658:	d9400d15 	stw	r5,52(sp)
    965c:	d9000c04 	addi	r4,sp,48
    9660:	d9400504 	addi	r5,sp,20
    9664:	dfc00e15 	stw	ra,56(sp)
    9668:	d9800a15 	stw	r6,40(sp)
    966c:	d9c00b15 	stw	r7,44(sp)
    9670:	0009f800 	call	9f80 <__unpack_d>
    9674:	d9000a04 	addi	r4,sp,40
    9678:	d80b883a 	mov	r5,sp
    967c:	0009f800 	call	9f80 <__unpack_d>
    9680:	d8c00517 	ldw	r3,20(sp)
    9684:	00800044 	movi	r2,1
    9688:	10c00536 	bltu	r2,r3,96a0 <__divdf3+0x50>
    968c:	d9000504 	addi	r4,sp,20
    9690:	0009d5c0 	call	9d5c <__pack_d>
    9694:	dfc00e17 	ldw	ra,56(sp)
    9698:	dec00f04 	addi	sp,sp,60
    969c:	f800283a 	ret
    96a0:	d9000017 	ldw	r4,0(sp)
    96a4:	11000536 	bltu	r2,r4,96bc <__divdf3+0x6c>
    96a8:	d809883a 	mov	r4,sp
    96ac:	0009d5c0 	call	9d5c <__pack_d>
    96b0:	dfc00e17 	ldw	ra,56(sp)
    96b4:	dec00f04 	addi	sp,sp,60
    96b8:	f800283a 	ret
    96bc:	d9800617 	ldw	r6,24(sp)
    96c0:	d9400117 	ldw	r5,4(sp)
    96c4:	00800104 	movi	r2,4
    96c8:	314af03a 	xor	r5,r6,r5
    96cc:	d9400615 	stw	r5,24(sp)
    96d0:	18800226 	beq	r3,r2,96dc <__divdf3+0x8c>
    96d4:	01400084 	movi	r5,2
    96d8:	1940041e 	bne	r3,r5,96ec <__divdf3+0x9c>
    96dc:	193feb1e 	bne	r3,r4,968c <__divdf3+0x3c>
    96e0:	01000074 	movhi	r4,1
    96e4:	212ef004 	addi	r4,r4,-17472
    96e8:	003fe906 	br	9690 <__divdf3+0x40>
    96ec:	20803326 	beq	r4,r2,97bc <__divdf3+0x16c>
    96f0:	21403726 	beq	r4,r5,97d0 <__divdf3+0x180>
    96f4:	d8800217 	ldw	r2,8(sp)
    96f8:	d9000717 	ldw	r4,28(sp)
    96fc:	d8c00917 	ldw	r3,36(sp)
    9700:	da000417 	ldw	r8,16(sp)
    9704:	2089c83a 	sub	r4,r4,r2
    9708:	d9000715 	stw	r4,28(sp)
    970c:	d8800817 	ldw	r2,32(sp)
    9710:	dbc00317 	ldw	r15,12(sp)
    9714:	1a000236 	bltu	r3,r8,9720 <__divdf3+0xd0>
    9718:	40c0081e 	bne	r8,r3,973c <__divdf3+0xec>
    971c:	13c0072e 	bgeu	r2,r15,973c <__divdf3+0xec>
    9720:	108b883a 	add	r5,r2,r2
    9724:	288d803a 	cmpltu	r6,r5,r2
    9728:	18c7883a 	add	r3,r3,r3
    972c:	213fffc4 	addi	r4,r4,-1
    9730:	2805883a 	mov	r2,r5
    9734:	30c7883a 	add	r3,r6,r3
    9738:	d9000715 	stw	r4,28(sp)
    973c:	01400f44 	movi	r5,61
    9740:	000f883a 	mov	r7,zero
    9744:	01040034 	movhi	r4,4096
    9748:	0019883a 	mov	r12,zero
    974c:	001b883a 	mov	r13,zero
    9750:	201697fa 	slli	r11,r4,31
    9754:	3814d07a 	srli	r10,r7,1
    9758:	297fffc4 	addi	r5,r5,-1
    975c:	1a000936 	bltu	r3,r8,9784 <__divdf3+0x134>
    9760:	13cdc83a 	sub	r6,r2,r15
    9764:	1193803a 	cmpltu	r9,r2,r6
    9768:	1a1dc83a 	sub	r14,r3,r8
    976c:	40c0011e 	bne	r8,r3,9774 <__divdf3+0x124>
    9770:	13c00436 	bltu	r2,r15,9784 <__divdf3+0x134>
    9774:	3005883a 	mov	r2,r6
    9778:	7247c83a 	sub	r3,r14,r9
    977c:	61d8b03a 	or	r12,r12,r7
    9780:	691ab03a 	or	r13,r13,r4
    9784:	108d883a 	add	r6,r2,r2
    9788:	3093803a 	cmpltu	r9,r6,r2
    978c:	18c7883a 	add	r3,r3,r3
    9790:	5a8eb03a 	or	r7,r11,r10
    9794:	2008d07a 	srli	r4,r4,1
    9798:	3005883a 	mov	r2,r6
    979c:	48c7883a 	add	r3,r9,r3
    97a0:	283feb1e 	bne	r5,zero,9750 <__divdf3+0x100>
    97a4:	61003fcc 	andi	r4,r12,255
    97a8:	01402004 	movi	r5,128
    97ac:	21400b26 	beq	r4,r5,97dc <__divdf3+0x18c>
    97b0:	db000815 	stw	r12,32(sp)
    97b4:	db400915 	stw	r13,36(sp)
    97b8:	003fb406 	br	968c <__divdf3+0x3c>
    97bc:	d8000815 	stw	zero,32(sp)
    97c0:	d8000915 	stw	zero,36(sp)
    97c4:	d8000715 	stw	zero,28(sp)
    97c8:	d9000504 	addi	r4,sp,20
    97cc:	003fb006 	br	9690 <__divdf3+0x40>
    97d0:	d8800515 	stw	r2,20(sp)
    97d4:	d9000504 	addi	r4,sp,20
    97d8:	003fad06 	br	9690 <__divdf3+0x40>
    97dc:	6140400c 	andi	r5,r12,256
    97e0:	283ff31e 	bne	r5,zero,97b0 <__divdf3+0x160>
    97e4:	30c4b03a 	or	r2,r6,r3
    97e8:	103ff126 	beq	r2,zero,97b0 <__divdf3+0x160>
    97ec:	6109883a 	add	r4,r12,r4
    97f0:	2305803a 	cmpltu	r2,r4,r12
    97f4:	033fc004 	movi	r12,-256
    97f8:	2318703a 	and	r12,r4,r12
    97fc:	135b883a 	add	r13,r2,r13
    9800:	003feb06 	br	97b0 <__divdf3+0x160>

00009804 <__gtdf2>:
    9804:	defff104 	addi	sp,sp,-60
    9808:	d9000c15 	stw	r4,48(sp)
    980c:	d9400d15 	stw	r5,52(sp)
    9810:	d9000c04 	addi	r4,sp,48
    9814:	d9400504 	addi	r5,sp,20
    9818:	dfc00e15 	stw	ra,56(sp)
    981c:	d9800a15 	stw	r6,40(sp)
    9820:	d9c00b15 	stw	r7,44(sp)
    9824:	0009f800 	call	9f80 <__unpack_d>
    9828:	d9000a04 	addi	r4,sp,40
    982c:	d80b883a 	mov	r5,sp
    9830:	0009f800 	call	9f80 <__unpack_d>
    9834:	d8c00517 	ldw	r3,20(sp)
    9838:	00800044 	movi	r2,1
    983c:	10c0082e 	bgeu	r2,r3,9860 <__gtdf2+0x5c>
    9840:	d8c00017 	ldw	r3,0(sp)
    9844:	10c0062e 	bgeu	r2,r3,9860 <__gtdf2+0x5c>
    9848:	d9000504 	addi	r4,sp,20
    984c:	d80b883a 	mov	r5,sp
    9850:	000a0840 	call	a084 <__fpcmp_parts_d>
    9854:	dfc00e17 	ldw	ra,56(sp)
    9858:	dec00f04 	addi	sp,sp,60
    985c:	f800283a 	ret
    9860:	00bfffc4 	movi	r2,-1
    9864:	003ffb06 	br	9854 <__gtdf2+0x50>

00009868 <__ltdf2>:
    9868:	defff104 	addi	sp,sp,-60
    986c:	d9000c15 	stw	r4,48(sp)
    9870:	d9400d15 	stw	r5,52(sp)
    9874:	d9000c04 	addi	r4,sp,48
    9878:	d9400504 	addi	r5,sp,20
    987c:	dfc00e15 	stw	ra,56(sp)
    9880:	d9800a15 	stw	r6,40(sp)
    9884:	d9c00b15 	stw	r7,44(sp)
    9888:	0009f800 	call	9f80 <__unpack_d>
    988c:	d9000a04 	addi	r4,sp,40
    9890:	d80b883a 	mov	r5,sp
    9894:	0009f800 	call	9f80 <__unpack_d>
    9898:	d8c00517 	ldw	r3,20(sp)
    989c:	00800044 	movi	r2,1
    98a0:	10c0052e 	bgeu	r2,r3,98b8 <__ltdf2+0x50>
    98a4:	d8c00017 	ldw	r3,0(sp)
    98a8:	10c0032e 	bgeu	r2,r3,98b8 <__ltdf2+0x50>
    98ac:	d9000504 	addi	r4,sp,20
    98b0:	d80b883a 	mov	r5,sp
    98b4:	000a0840 	call	a084 <__fpcmp_parts_d>
    98b8:	dfc00e17 	ldw	ra,56(sp)
    98bc:	dec00f04 	addi	sp,sp,60
    98c0:	f800283a 	ret

000098c4 <__fixdfsi>:
    98c4:	defff804 	addi	sp,sp,-32
    98c8:	d9000515 	stw	r4,20(sp)
    98cc:	d9400615 	stw	r5,24(sp)
    98d0:	d9000504 	addi	r4,sp,20
    98d4:	d80b883a 	mov	r5,sp
    98d8:	dfc00715 	stw	ra,28(sp)
    98dc:	0009f800 	call	9f80 <__unpack_d>
    98e0:	d8800017 	ldw	r2,0(sp)
    98e4:	00c00084 	movi	r3,2
    98e8:	10c01c26 	beq	r2,r3,995c <__fixdfsi+0x98>
    98ec:	00c00044 	movi	r3,1
    98f0:	18801a2e 	bgeu	r3,r2,995c <__fixdfsi+0x98>
    98f4:	00c00104 	movi	r3,4
    98f8:	10c01126 	beq	r2,r3,9940 <__fixdfsi+0x7c>
    98fc:	d8800217 	ldw	r2,8(sp)
    9900:	10001616 	blt	r2,zero,995c <__fixdfsi+0x98>
    9904:	00c00784 	movi	r3,30
    9908:	18800d16 	blt	r3,r2,9940 <__fixdfsi+0x7c>
    990c:	00c00f04 	movi	r3,60
    9910:	1885c83a 	sub	r2,r3,r2
    9914:	10fff804 	addi	r3,r2,-32
    9918:	d9400317 	ldw	r5,12(sp)
    991c:	d9000417 	ldw	r4,16(sp)
    9920:	18001616 	blt	r3,zero,997c <__fixdfsi+0xb8>
    9924:	20c4d83a 	srl	r2,r4,r3
    9928:	d8c00117 	ldw	r3,4(sp)
    992c:	18000126 	beq	r3,zero,9934 <__fixdfsi+0x70>
    9930:	0085c83a 	sub	r2,zero,r2
    9934:	dfc00717 	ldw	ra,28(sp)
    9938:	dec00804 	addi	sp,sp,32
    993c:	f800283a 	ret
    9940:	d8800117 	ldw	r2,4(sp)
    9944:	1000091e 	bne	r2,zero,996c <__fixdfsi+0xa8>
    9948:	00a00034 	movhi	r2,32768
    994c:	10bfffc4 	addi	r2,r2,-1
    9950:	dfc00717 	ldw	ra,28(sp)
    9954:	dec00804 	addi	sp,sp,32
    9958:	f800283a 	ret
    995c:	0005883a 	mov	r2,zero
    9960:	dfc00717 	ldw	ra,28(sp)
    9964:	dec00804 	addi	sp,sp,32
    9968:	f800283a 	ret
    996c:	00a00034 	movhi	r2,32768
    9970:	dfc00717 	ldw	ra,28(sp)
    9974:	dec00804 	addi	sp,sp,32
    9978:	f800283a 	ret
    997c:	2008907a 	slli	r4,r4,1
    9980:	018007c4 	movi	r6,31
    9984:	308dc83a 	sub	r6,r6,r2
    9988:	2188983a 	sll	r4,r4,r6
    998c:	2884d83a 	srl	r2,r5,r2
    9990:	2084b03a 	or	r2,r4,r2
    9994:	003fe406 	br	9928 <__fixdfsi+0x64>

00009998 <__make_dp>:
    9998:	defff904 	addi	sp,sp,-28
    999c:	d8800717 	ldw	r2,28(sp)
    99a0:	d9000015 	stw	r4,0(sp)
    99a4:	d809883a 	mov	r4,sp
    99a8:	dfc00515 	stw	ra,20(sp)
    99ac:	d9c00615 	stw	r7,24(sp)
    99b0:	d9400115 	stw	r5,4(sp)
    99b4:	d9800215 	stw	r6,8(sp)
    99b8:	d9c00315 	stw	r7,12(sp)
    99bc:	d8800415 	stw	r2,16(sp)
    99c0:	0009d5c0 	call	9d5c <__pack_d>
    99c4:	dfc00517 	ldw	ra,20(sp)
    99c8:	dec00704 	addi	sp,sp,28
    99cc:	f800283a 	ret

000099d0 <__truncdfsf2>:
    99d0:	defff804 	addi	sp,sp,-32
    99d4:	d9000515 	stw	r4,20(sp)
    99d8:	d9400615 	stw	r5,24(sp)
    99dc:	d9000504 	addi	r4,sp,20
    99e0:	d80b883a 	mov	r5,sp
    99e4:	dfc00715 	stw	ra,28(sp)
    99e8:	0009f800 	call	9f80 <__unpack_d>
    99ec:	d8800317 	ldw	r2,12(sp)
    99f0:	d8c00417 	ldw	r3,16(sp)
    99f4:	01100034 	movhi	r4,16384
    99f8:	213fffc4 	addi	r4,r4,-1
    99fc:	100ed7ba 	srli	r7,r2,30
    9a00:	180690ba 	slli	r3,r3,2
    9a04:	1104703a 	and	r2,r2,r4
    9a08:	19ceb03a 	or	r7,r3,r7
    9a0c:	10000126 	beq	r2,zero,9a14 <__truncdfsf2+0x44>
    9a10:	39c00054 	ori	r7,r7,1
    9a14:	d9000017 	ldw	r4,0(sp)
    9a18:	d9400117 	ldw	r5,4(sp)
    9a1c:	d9800217 	ldw	r6,8(sp)
    9a20:	0009d300 	call	9d30 <__make_fp>
    9a24:	dfc00717 	ldw	ra,28(sp)
    9a28:	dec00804 	addi	sp,sp,32
    9a2c:	f800283a 	ret

00009a30 <__muldi3>:
    9a30:	20bfffcc 	andi	r2,r4,65535
    9a34:	2010d43a 	srli	r8,r4,16
    9a38:	30ffffcc 	andi	r3,r6,65535
    9a3c:	3014d43a 	srli	r10,r6,16
    9a40:	1893383a 	mul	r9,r3,r2
    9a44:	1a07383a 	mul	r3,r3,r8
    9a48:	5085383a 	mul	r2,r10,r2
    9a4c:	4816d43a 	srli	r11,r9,16
    9a50:	5211383a 	mul	r8,r10,r8
    9a54:	1885883a 	add	r2,r3,r2
    9a58:	12c5883a 	add	r2,r2,r11
    9a5c:	10c0022e 	bgeu	r2,r3,9a68 <__muldi3+0x38>
    9a60:	00c00074 	movhi	r3,1
    9a64:	40d1883a 	add	r8,r8,r3
    9a68:	1014d43a 	srli	r10,r2,16
    9a6c:	21c9383a 	mul	r4,r4,r7
    9a70:	314d383a 	mul	r6,r6,r5
    9a74:	1004943a 	slli	r2,r2,16
    9a78:	4291883a 	add	r8,r8,r10
    9a7c:	4a7fffcc 	andi	r9,r9,65535
    9a80:	2187883a 	add	r3,r4,r6
    9a84:	1245883a 	add	r2,r2,r9
    9a88:	1a07883a 	add	r3,r3,r8
    9a8c:	f800283a 	ret

00009a90 <__clzsi2>:
    9a90:	00bfffd4 	movui	r2,65535
    9a94:	11000b36 	bltu	r2,r4,9ac4 <__clzsi2+0x34>
    9a98:	00803fc4 	movi	r2,255
    9a9c:	11001e2e 	bgeu	r2,r4,9b18 <__clzsi2+0x88>
    9aa0:	00c00204 	movi	r3,8
    9aa4:	20c8d83a 	srl	r4,r4,r3
    9aa8:	00c00074 	movhi	r3,1
    9aac:	18eef504 	addi	r3,r3,-17452
    9ab0:	00800604 	movi	r2,24
    9ab4:	1909883a 	add	r4,r3,r4
    9ab8:	20c00003 	ldbu	r3,0(r4)
    9abc:	10c5c83a 	sub	r2,r2,r3
    9ac0:	f800283a 	ret
    9ac4:	00804034 	movhi	r2,256
    9ac8:	10bfffc4 	addi	r2,r2,-1
    9acc:	11000936 	bltu	r2,r4,9af4 <__clzsi2+0x64>
    9ad0:	00800404 	movi	r2,16
    9ad4:	1007883a 	mov	r3,r2
    9ad8:	20c8d83a 	srl	r4,r4,r3
    9adc:	00c00074 	movhi	r3,1
    9ae0:	18eef504 	addi	r3,r3,-17452
    9ae4:	1909883a 	add	r4,r3,r4
    9ae8:	20c00003 	ldbu	r3,0(r4)
    9aec:	10c5c83a 	sub	r2,r2,r3
    9af0:	f800283a 	ret
    9af4:	00c00604 	movi	r3,24
    9af8:	20c8d83a 	srl	r4,r4,r3
    9afc:	00c00074 	movhi	r3,1
    9b00:	18eef504 	addi	r3,r3,-17452
    9b04:	00800204 	movi	r2,8
    9b08:	1909883a 	add	r4,r3,r4
    9b0c:	20c00003 	ldbu	r3,0(r4)
    9b10:	10c5c83a 	sub	r2,r2,r3
    9b14:	f800283a 	ret
    9b18:	0007883a 	mov	r3,zero
    9b1c:	20c8d83a 	srl	r4,r4,r3
    9b20:	00c00074 	movhi	r3,1
    9b24:	18eef504 	addi	r3,r3,-17452
    9b28:	00800804 	movi	r2,32
    9b2c:	1909883a 	add	r4,r3,r4
    9b30:	20c00003 	ldbu	r3,0(r4)
    9b34:	10c5c83a 	sub	r2,r2,r3
    9b38:	f800283a 	ret

00009b3c <__pack_f>:
    9b3c:	21400017 	ldw	r5,0(r4)
    9b40:	01800044 	movi	r6,1
    9b44:	20c00317 	ldw	r3,12(r4)
    9b48:	21c00117 	ldw	r7,4(r4)
    9b4c:	3140282e 	bgeu	r6,r5,9bf0 <__pack_f+0xb4>
    9b50:	00800104 	movi	r2,4
    9b54:	28802326 	beq	r5,r2,9be4 <__pack_f+0xa8>
    9b58:	00800084 	movi	r2,2
    9b5c:	28800f26 	beq	r5,r2,9b9c <__pack_f+0x60>
    9b60:	18000e26 	beq	r3,zero,9b9c <__pack_f+0x60>
    9b64:	21000217 	ldw	r4,8(r4)
    9b68:	00bfe084 	movi	r2,-126
    9b6c:	20802616 	blt	r4,r2,9c08 <__pack_f+0xcc>
    9b70:	00801fc4 	movi	r2,127
    9b74:	11001b16 	blt	r2,r4,9be4 <__pack_f+0xa8>
    9b78:	188a703a 	and	r5,r3,r2
    9b7c:	00801004 	movi	r2,64
    9b80:	28801126 	beq	r5,r2,9bc8 <__pack_f+0x8c>
    9b84:	18c00fc4 	addi	r3,r3,63
    9b88:	18001316 	blt	r3,zero,9bd8 <__pack_f+0x9c>
    9b8c:	21001fc4 	addi	r4,r4,127
    9b90:	180690ba 	slli	r3,r3,2
    9b94:	1806d27a 	srli	r3,r3,9
    9b98:	00000206 	br	9ba4 <__pack_f+0x68>
    9b9c:	0009883a 	mov	r4,zero
    9ba0:	0007883a 	mov	r3,zero
    9ba4:	21003fcc 	andi	r4,r4,255
    9ba8:	200895fa 	slli	r4,r4,23
    9bac:	380a97fa 	slli	r5,r7,31
    9bb0:	00802034 	movhi	r2,128
    9bb4:	10bfffc4 	addi	r2,r2,-1
    9bb8:	1886703a 	and	r3,r3,r2
    9bbc:	1904b03a 	or	r2,r3,r4
    9bc0:	1144b03a 	or	r2,r2,r5
    9bc4:	f800283a 	ret
    9bc8:	1880200c 	andi	r2,r3,128
    9bcc:	103fee26 	beq	r2,zero,9b88 <__pack_f+0x4c>
    9bd0:	18c01004 	addi	r3,r3,64
    9bd4:	183fed0e 	bge	r3,zero,9b8c <__pack_f+0x50>
    9bd8:	1806d07a 	srli	r3,r3,1
    9bdc:	21002004 	addi	r4,r4,128
    9be0:	003feb06 	br	9b90 <__pack_f+0x54>
    9be4:	013fffc4 	movi	r4,-1
    9be8:	0007883a 	mov	r3,zero
    9bec:	003fed06 	br	9ba4 <__pack_f+0x68>
    9bf0:	18c00434 	orhi	r3,r3,16
    9bf4:	00802034 	movhi	r2,128
    9bf8:	10bfffc4 	addi	r2,r2,-1
    9bfc:	1886703a 	and	r3,r3,r2
    9c00:	013fffc4 	movi	r4,-1
    9c04:	003fe706 	br	9ba4 <__pack_f+0x68>
    9c08:	1105c83a 	sub	r2,r2,r4
    9c0c:	01000644 	movi	r4,25
    9c10:	20801216 	blt	r4,r2,9c5c <__pack_f+0x120>
    9c14:	3088983a 	sll	r4,r6,r2
    9c18:	1884d83a 	srl	r2,r3,r2
    9c1c:	213fffc4 	addi	r4,r4,-1
    9c20:	20c6703a 	and	r3,r4,r3
    9c24:	1806c03a 	cmpne	r3,r3,zero
    9c28:	1884b03a 	or	r2,r3,r2
    9c2c:	11001fcc 	andi	r4,r2,127
    9c30:	00c01004 	movi	r3,64
    9c34:	20c00a1e 	bne	r4,r3,9c60 <__pack_f+0x124>
    9c38:	10c0200c 	andi	r3,r2,128
    9c3c:	18000126 	beq	r3,zero,9c44 <__pack_f+0x108>
    9c40:	10801004 	addi	r2,r2,64
    9c44:	100690ba 	slli	r3,r2,2
    9c48:	01100034 	movhi	r4,16384
    9c4c:	1105403a 	cmpgeu	r2,r2,r4
    9c50:	1806d27a 	srli	r3,r3,9
    9c54:	1009883a 	mov	r4,r2
    9c58:	003fd206 	br	9ba4 <__pack_f+0x68>
    9c5c:	0005883a 	mov	r2,zero
    9c60:	10800fc4 	addi	r2,r2,63
    9c64:	003ff706 	br	9c44 <__pack_f+0x108>

00009c68 <__unpack_f>:
    9c68:	20c00017 	ldw	r3,0(r4)
    9c6c:	00802034 	movhi	r2,128
    9c70:	10bfffc4 	addi	r2,r2,-1
    9c74:	1808d5fa 	srli	r4,r3,23
    9c78:	180cd7fa 	srli	r6,r3,31
    9c7c:	1884703a 	and	r2,r3,r2
    9c80:	21003fcc 	andi	r4,r4,255
    9c84:	29800115 	stw	r6,4(r5)
    9c88:	2000111e 	bne	r4,zero,9cd0 <__unpack_f+0x68>
    9c8c:	10001a26 	beq	r2,zero,9cf8 <__unpack_f+0x90>
    9c90:	00ffe084 	movi	r3,-126
    9c94:	100491fa 	slli	r2,r2,7
    9c98:	28c00215 	stw	r3,8(r5)
    9c9c:	00c000c4 	movi	r3,3
    9ca0:	28c00015 	stw	r3,0(r5)
    9ca4:	01900034 	movhi	r6,16384
    9ca8:	31bfffc4 	addi	r6,r6,-1
    9cac:	30801036 	bltu	r6,r2,9cf0 <__unpack_f+0x88>
    9cb0:	00ffe044 	movi	r3,-127
    9cb4:	1085883a 	add	r2,r2,r2
    9cb8:	1809883a 	mov	r4,r3
    9cbc:	18ffffc4 	addi	r3,r3,-1
    9cc0:	30bffc2e 	bgeu	r6,r2,9cb4 <__unpack_f+0x4c>
    9cc4:	29000215 	stw	r4,8(r5)
    9cc8:	28800315 	stw	r2,12(r5)
    9ccc:	f800283a 	ret
    9cd0:	01803fc4 	movi	r6,255
    9cd4:	21800b26 	beq	r4,r6,9d04 <__unpack_f+0x9c>
    9cd8:	100491fa 	slli	r2,r2,7
    9cdc:	213fe044 	addi	r4,r4,-127
    9ce0:	00c000c4 	movi	r3,3
    9ce4:	10900034 	orhi	r2,r2,16384
    9ce8:	29000215 	stw	r4,8(r5)
    9cec:	28c00015 	stw	r3,0(r5)
    9cf0:	28800315 	stw	r2,12(r5)
    9cf4:	f800283a 	ret
    9cf8:	00800084 	movi	r2,2
    9cfc:	28800015 	stw	r2,0(r5)
    9d00:	f800283a 	ret
    9d04:	10000526 	beq	r2,zero,9d1c <__unpack_f+0xb4>
    9d08:	18c0042c 	andhi	r3,r3,16
    9d0c:	18000626 	beq	r3,zero,9d28 <__unpack_f+0xc0>
    9d10:	00c00044 	movi	r3,1
    9d14:	28c00015 	stw	r3,0(r5)
    9d18:	003ff506 	br	9cf0 <__unpack_f+0x88>
    9d1c:	00800104 	movi	r2,4
    9d20:	28800015 	stw	r2,0(r5)
    9d24:	f800283a 	ret
    9d28:	28000015 	stw	zero,0(r5)
    9d2c:	003ff006 	br	9cf0 <__unpack_f+0x88>

00009d30 <__make_fp>:
    9d30:	defffb04 	addi	sp,sp,-20
    9d34:	d9000015 	stw	r4,0(sp)
    9d38:	d809883a 	mov	r4,sp
    9d3c:	dfc00415 	stw	ra,16(sp)
    9d40:	d9400115 	stw	r5,4(sp)
    9d44:	d9800215 	stw	r6,8(sp)
    9d48:	d9c00315 	stw	r7,12(sp)
    9d4c:	0009b3c0 	call	9b3c <__pack_f>
    9d50:	dfc00417 	ldw	ra,16(sp)
    9d54:	dec00504 	addi	sp,sp,20
    9d58:	f800283a 	ret

00009d5c <__pack_d>:
    9d5c:	20800017 	ldw	r2,0(r4)
    9d60:	defff804 	addi	sp,sp,-32
    9d64:	dcc00315 	stw	r19,12(sp)
    9d68:	dc800215 	stw	r18,8(sp)
    9d6c:	dfc00715 	stw	ra,28(sp)
    9d70:	dd800615 	stw	r22,24(sp)
    9d74:	dd400515 	stw	r21,20(sp)
    9d78:	dd000415 	stw	r20,16(sp)
    9d7c:	dc400115 	stw	r17,4(sp)
    9d80:	dc000015 	stw	r16,0(sp)
    9d84:	04800044 	movi	r18,1
    9d88:	24400317 	ldw	r17,12(r4)
    9d8c:	24000417 	ldw	r16,16(r4)
    9d90:	24c00117 	ldw	r19,4(r4)
    9d94:	9080422e 	bgeu	r18,r2,9ea0 <__pack_d+0x144>
    9d98:	00c00104 	movi	r3,4
    9d9c:	10c03c26 	beq	r2,r3,9e90 <__pack_d+0x134>
    9da0:	00c00084 	movi	r3,2
    9da4:	10c01926 	beq	r2,r3,9e0c <__pack_d+0xb0>
    9da8:	8c04b03a 	or	r2,r17,r16
    9dac:	10001726 	beq	r2,zero,9e0c <__pack_d+0xb0>
    9db0:	21000217 	ldw	r4,8(r4)
    9db4:	00bf0084 	movi	r2,-1022
    9db8:	20804016 	blt	r4,r2,9ebc <__pack_d+0x160>
    9dbc:	0080ffc4 	movi	r2,1023
    9dc0:	11003316 	blt	r2,r4,9e90 <__pack_d+0x134>
    9dc4:	88803fcc 	andi	r2,r17,255
    9dc8:	00c02004 	movi	r3,128
    9dcc:	10c02926 	beq	r2,r3,9e74 <__pack_d+0x118>
    9dd0:	88801fc4 	addi	r2,r17,127
    9dd4:	1463803a 	cmpltu	r17,r2,r17
    9dd8:	8c21883a 	add	r16,r17,r16
    9ddc:	1023883a 	mov	r17,r2
    9de0:	00880034 	movhi	r2,8192
    9de4:	10bfffc4 	addi	r2,r2,-1
    9de8:	14001c36 	bltu	r2,r16,9e5c <__pack_d+0x100>
    9dec:	2100ffc4 	addi	r4,r4,1023
    9df0:	8006963a 	slli	r3,r16,24
    9df4:	8804d23a 	srli	r2,r17,8
    9df8:	8020913a 	slli	r16,r16,4
    9dfc:	2101ffcc 	andi	r4,r4,2047
    9e00:	1884b03a 	or	r2,r3,r2
    9e04:	8020d33a 	srli	r16,r16,12
    9e08:	00000306 	br	9e18 <__pack_d+0xbc>
    9e0c:	0009883a 	mov	r4,zero
    9e10:	0005883a 	mov	r2,zero
    9e14:	0021883a 	mov	r16,zero
    9e18:	2008953a 	slli	r4,r4,20
    9e1c:	982697fa 	slli	r19,r19,31
    9e20:	00c00434 	movhi	r3,16
    9e24:	18ffffc4 	addi	r3,r3,-1
    9e28:	80e0703a 	and	r16,r16,r3
    9e2c:	8106b03a 	or	r3,r16,r4
    9e30:	1cc6b03a 	or	r3,r3,r19
    9e34:	dfc00717 	ldw	ra,28(sp)
    9e38:	dd800617 	ldw	r22,24(sp)
    9e3c:	dd400517 	ldw	r21,20(sp)
    9e40:	dd000417 	ldw	r20,16(sp)
    9e44:	dcc00317 	ldw	r19,12(sp)
    9e48:	dc800217 	ldw	r18,8(sp)
    9e4c:	dc400117 	ldw	r17,4(sp)
    9e50:	dc000017 	ldw	r16,0(sp)
    9e54:	dec00804 	addi	sp,sp,32
    9e58:	f800283a 	ret
    9e5c:	800697fa 	slli	r3,r16,31
    9e60:	8804d07a 	srli	r2,r17,1
    9e64:	21010004 	addi	r4,r4,1024
    9e68:	8020d07a 	srli	r16,r16,1
    9e6c:	18a2b03a 	or	r17,r3,r2
    9e70:	003fdf06 	br	9df0 <__pack_d+0x94>
    9e74:	88c0400c 	andi	r3,r17,256
    9e78:	183fd926 	beq	r3,zero,9de0 <__pack_d+0x84>
    9e7c:	8885883a 	add	r2,r17,r2
    9e80:	1463803a 	cmpltu	r17,r2,r17
    9e84:	8c21883a 	add	r16,r17,r16
    9e88:	1023883a 	mov	r17,r2
    9e8c:	003fd406 	br	9de0 <__pack_d+0x84>
    9e90:	0101ffc4 	movi	r4,2047
    9e94:	0005883a 	mov	r2,zero
    9e98:	0021883a 	mov	r16,zero
    9e9c:	003fde06 	br	9e18 <__pack_d+0xbc>
    9ea0:	84000234 	orhi	r16,r16,8
    9ea4:	00c00434 	movhi	r3,16
    9ea8:	18ffffc4 	addi	r3,r3,-1
    9eac:	8805883a 	mov	r2,r17
    9eb0:	80e0703a 	and	r16,r16,r3
    9eb4:	0101ffc4 	movi	r4,2047
    9eb8:	003fd706 	br	9e18 <__pack_d+0xbc>
    9ebc:	1129c83a 	sub	r20,r2,r4
    9ec0:	00800e04 	movi	r2,56
    9ec4:	15002716 	blt	r2,r20,9f64 <__pack_d+0x208>
    9ec8:	800b883a 	mov	r5,r16
    9ecc:	a00d883a 	mov	r6,r20
    9ed0:	8809883a 	mov	r4,r17
    9ed4:	000a1540 	call	a154 <__lshrdi3>
    9ed8:	9009883a 	mov	r4,r18
    9edc:	000b883a 	mov	r5,zero
    9ee0:	a00d883a 	mov	r6,r20
    9ee4:	102d883a 	mov	r22,r2
    9ee8:	182b883a 	mov	r21,r3
    9eec:	000a1980 	call	a198 <__ashldi3>
    9ef0:	1009003a 	cmpeq	r4,r2,zero
    9ef4:	1907c83a 	sub	r3,r3,r4
    9ef8:	10bfffc4 	addi	r2,r2,-1
    9efc:	1c20703a 	and	r16,r3,r16
    9f00:	1444703a 	and	r2,r2,r17
    9f04:	1404b03a 	or	r2,r2,r16
    9f08:	1004c03a 	cmpne	r2,r2,zero
    9f0c:	1584b03a 	or	r2,r2,r22
    9f10:	11003fcc 	andi	r4,r2,255
    9f14:	01402004 	movi	r5,128
    9f18:	a807883a 	mov	r3,r21
    9f1c:	2140131e 	bne	r4,r5,9f6c <__pack_d+0x210>
    9f20:	1140400c 	andi	r5,r2,256
    9f24:	28000426 	beq	r5,zero,9f38 <__pack_d+0x1dc>
    9f28:	1109883a 	add	r4,r2,r4
    9f2c:	2085803a 	cmpltu	r2,r4,r2
    9f30:	1547883a 	add	r3,r2,r21
    9f34:	2005883a 	mov	r2,r4
    9f38:	1808963a 	slli	r4,r3,24
    9f3c:	1004d23a 	srli	r2,r2,8
    9f40:	1820913a 	slli	r16,r3,4
    9f44:	01440034 	movhi	r5,4096
    9f48:	297fffc4 	addi	r5,r5,-1
    9f4c:	2084b03a 	or	r2,r4,r2
    9f50:	8020d33a 	srli	r16,r16,12
    9f54:	01000044 	movi	r4,1
    9f58:	28ffaf36 	bltu	r5,r3,9e18 <__pack_d+0xbc>
    9f5c:	0009883a 	mov	r4,zero
    9f60:	003fad06 	br	9e18 <__pack_d+0xbc>
    9f64:	0005883a 	mov	r2,zero
    9f68:	0007883a 	mov	r3,zero
    9f6c:	11001fc4 	addi	r4,r2,127
    9f70:	2085803a 	cmpltu	r2,r4,r2
    9f74:	10c7883a 	add	r3,r2,r3
    9f78:	2005883a 	mov	r2,r4
    9f7c:	003fee06 	br	9f38 <__pack_d+0x1dc>

00009f80 <__unpack_d>:
    9f80:	21800117 	ldw	r6,4(r4)
    9f84:	20c00017 	ldw	r3,0(r4)
    9f88:	3004d7fa 	srli	r2,r6,31
    9f8c:	3008d53a 	srli	r4,r6,20
    9f90:	28800115 	stw	r2,4(r5)
    9f94:	2101ffcc 	andi	r4,r4,2047
    9f98:	00800434 	movhi	r2,16
    9f9c:	10bfffc4 	addi	r2,r2,-1
    9fa0:	3084703a 	and	r2,r6,r2
    9fa4:	20001a1e 	bne	r4,zero,a010 <__unpack_d+0x90>
    9fa8:	1888b03a 	or	r4,r3,r2
    9fac:	20002626 	beq	r4,zero,a048 <__unpack_d+0xc8>
    9fb0:	1808d63a 	srli	r4,r3,24
    9fb4:	1004923a 	slli	r2,r2,8
    9fb8:	01bf0084 	movi	r6,-1022
    9fbc:	29800215 	stw	r6,8(r5)
    9fc0:	2084b03a 	or	r2,r4,r2
    9fc4:	010000c4 	movi	r4,3
    9fc8:	29000015 	stw	r4,0(r5)
    9fcc:	02040034 	movhi	r8,4096
    9fd0:	423fffc4 	addi	r8,r8,-1
    9fd4:	1806923a 	slli	r3,r3,8
    9fd8:	40801836 	bltu	r8,r2,a03c <__unpack_d+0xbc>
    9fdc:	013f0044 	movi	r4,-1023
    9fe0:	18cd883a 	add	r6,r3,r3
    9fe4:	30c7803a 	cmpltu	r3,r6,r3
    9fe8:	1085883a 	add	r2,r2,r2
    9fec:	1885883a 	add	r2,r3,r2
    9ff0:	200f883a 	mov	r7,r4
    9ff4:	3007883a 	mov	r3,r6
    9ff8:	213fffc4 	addi	r4,r4,-1
    9ffc:	40bff82e 	bgeu	r8,r2,9fe0 <__unpack_d+0x60>
    a000:	29c00215 	stw	r7,8(r5)
    a004:	28c00315 	stw	r3,12(r5)
    a008:	28800415 	stw	r2,16(r5)
    a00c:	f800283a 	ret
    a010:	01c1ffc4 	movi	r7,2047
    a014:	21c00f26 	beq	r4,r7,a054 <__unpack_d+0xd4>
    a018:	180cd63a 	srli	r6,r3,24
    a01c:	1004923a 	slli	r2,r2,8
    a020:	213f0044 	addi	r4,r4,-1023
    a024:	1806923a 	slli	r3,r3,8
    a028:	3084b03a 	or	r2,r6,r2
    a02c:	29000215 	stw	r4,8(r5)
    a030:	010000c4 	movi	r4,3
    a034:	10840034 	orhi	r2,r2,4096
    a038:	29000015 	stw	r4,0(r5)
    a03c:	28c00315 	stw	r3,12(r5)
    a040:	28800415 	stw	r2,16(r5)
    a044:	f800283a 	ret
    a048:	00800084 	movi	r2,2
    a04c:	28800015 	stw	r2,0(r5)
    a050:	f800283a 	ret
    a054:	1888b03a 	or	r4,r3,r2
    a058:	20000526 	beq	r4,zero,a070 <__unpack_d+0xf0>
    a05c:	3180022c 	andhi	r6,r6,8
    a060:	30000626 	beq	r6,zero,a07c <__unpack_d+0xfc>
    a064:	01000044 	movi	r4,1
    a068:	29000015 	stw	r4,0(r5)
    a06c:	003ff306 	br	a03c <__unpack_d+0xbc>
    a070:	00800104 	movi	r2,4
    a074:	28800015 	stw	r2,0(r5)
    a078:	f800283a 	ret
    a07c:	28000015 	stw	zero,0(r5)
    a080:	003fee06 	br	a03c <__unpack_d+0xbc>

0000a084 <__fpcmp_parts_d>:
    a084:	20c00017 	ldw	r3,0(r4)
    a088:	00800044 	movi	r2,1
    a08c:	10c0142e 	bgeu	r2,r3,a0e0 <__fpcmp_parts_d+0x5c>
    a090:	29800017 	ldw	r6,0(r5)
    a094:	1180122e 	bgeu	r2,r6,a0e0 <__fpcmp_parts_d+0x5c>
    a098:	01c00104 	movi	r7,4
    a09c:	19c02826 	beq	r3,r7,a140 <__fpcmp_parts_d+0xbc>
    a0a0:	31c00926 	beq	r6,r7,a0c8 <__fpcmp_parts_d+0x44>
    a0a4:	01c00084 	movi	r7,2
    a0a8:	19c00626 	beq	r3,r7,a0c4 <__fpcmp_parts_d+0x40>
    a0ac:	31c00a26 	beq	r6,r7,a0d8 <__fpcmp_parts_d+0x54>
    a0b0:	20c00117 	ldw	r3,4(r4)
    a0b4:	29800117 	ldw	r6,4(r5)
    a0b8:	19800b26 	beq	r3,r6,a0e8 <__fpcmp_parts_d+0x64>
    a0bc:	1800041e 	bne	r3,zero,a0d0 <__fpcmp_parts_d+0x4c>
    a0c0:	f800283a 	ret
    a0c4:	30c01a26 	beq	r6,r3,a130 <__fpcmp_parts_d+0xac>
    a0c8:	28800117 	ldw	r2,4(r5)
    a0cc:	1000041e 	bne	r2,zero,a0e0 <__fpcmp_parts_d+0x5c>
    a0d0:	00bfffc4 	movi	r2,-1
    a0d4:	f800283a 	ret
    a0d8:	20800117 	ldw	r2,4(r4)
    a0dc:	103ffc1e 	bne	r2,zero,a0d0 <__fpcmp_parts_d+0x4c>
    a0e0:	00800044 	movi	r2,1
    a0e4:	f800283a 	ret
    a0e8:	21c00217 	ldw	r7,8(r4)
    a0ec:	29800217 	ldw	r6,8(r5)
    a0f0:	31c0020e 	bge	r6,r7,a0fc <__fpcmp_parts_d+0x78>
    a0f4:	183ff61e 	bne	r3,zero,a0d0 <__fpcmp_parts_d+0x4c>
    a0f8:	f800283a 	ret
    a0fc:	39800a16 	blt	r7,r6,a128 <__fpcmp_parts_d+0xa4>
    a100:	20800417 	ldw	r2,16(r4)
    a104:	29800417 	ldw	r6,16(r5)
    a108:	21c00317 	ldw	r7,12(r4)
    a10c:	29000317 	ldw	r4,12(r5)
    a110:	30800936 	bltu	r6,r2,a138 <__fpcmp_parts_d+0xb4>
    a114:	1180011e 	bne	r2,r6,a11c <__fpcmp_parts_d+0x98>
    a118:	21c00736 	bltu	r4,r7,a138 <__fpcmp_parts_d+0xb4>
    a11c:	11800236 	bltu	r2,r6,a128 <__fpcmp_parts_d+0xa4>
    a120:	3080031e 	bne	r6,r2,a130 <__fpcmp_parts_d+0xac>
    a124:	3900022e 	bgeu	r7,r4,a130 <__fpcmp_parts_d+0xac>
    a128:	183fe926 	beq	r3,zero,a0d0 <__fpcmp_parts_d+0x4c>
    a12c:	003fec06 	br	a0e0 <__fpcmp_parts_d+0x5c>
    a130:	0005883a 	mov	r2,zero
    a134:	f800283a 	ret
    a138:	183fe926 	beq	r3,zero,a0e0 <__fpcmp_parts_d+0x5c>
    a13c:	003fe406 	br	a0d0 <__fpcmp_parts_d+0x4c>
    a140:	30ffe51e 	bne	r6,r3,a0d8 <__fpcmp_parts_d+0x54>
    a144:	28c00117 	ldw	r3,4(r5)
    a148:	20800117 	ldw	r2,4(r4)
    a14c:	1885c83a 	sub	r2,r3,r2
    a150:	f800283a 	ret

0000a154 <__lshrdi3>:
    a154:	2005883a 	mov	r2,r4
    a158:	2807883a 	mov	r3,r5
    a15c:	30000826 	beq	r6,zero,a180 <__lshrdi3+0x2c>
    a160:	01000804 	movi	r4,32
    a164:	2189c83a 	sub	r4,r4,r6
    a168:	0100060e 	bge	zero,r4,a184 <__lshrdi3+0x30>
    a16c:	1184d83a 	srl	r2,r2,r6
    a170:	2908983a 	sll	r4,r5,r4
    a174:	298cd83a 	srl	r6,r5,r6
    a178:	2084b03a 	or	r2,r4,r2
    a17c:	3007883a 	mov	r3,r6
    a180:	f800283a 	ret
    a184:	0105c83a 	sub	r2,zero,r4
    a188:	000d883a 	mov	r6,zero
    a18c:	2884d83a 	srl	r2,r5,r2
    a190:	3007883a 	mov	r3,r6
    a194:	003ffa06 	br	a180 <__lshrdi3+0x2c>

0000a198 <__ashldi3>:
    a198:	2005883a 	mov	r2,r4
    a19c:	2807883a 	mov	r3,r5
    a1a0:	30000826 	beq	r6,zero,a1c4 <__ashldi3+0x2c>
    a1a4:	01000804 	movi	r4,32
    a1a8:	2189c83a 	sub	r4,r4,r6
    a1ac:	0100060e 	bge	zero,r4,a1c8 <__ashldi3+0x30>
    a1b0:	1108d83a 	srl	r4,r2,r4
    a1b4:	2986983a 	sll	r3,r5,r6
    a1b8:	118c983a 	sll	r6,r2,r6
    a1bc:	20c6b03a 	or	r3,r4,r3
    a1c0:	3005883a 	mov	r2,r6
    a1c4:	f800283a 	ret
    a1c8:	0107c83a 	sub	r3,zero,r4
    a1cc:	000d883a 	mov	r6,zero
    a1d0:	10c6983a 	sll	r3,r2,r3
    a1d4:	3005883a 	mov	r2,r6
    a1d8:	003ffa06 	br	a1c4 <__ashldi3+0x2c>

0000a1dc <memset>:
    a1dc:	2005883a 	mov	r2,r4
    a1e0:	30000526 	beq	r6,zero,a1f8 <memset+0x1c>
    a1e4:	218d883a 	add	r6,r4,r6
    a1e8:	2007883a 	mov	r3,r4
    a1ec:	19400005 	stb	r5,0(r3)
    a1f0:	18c00044 	addi	r3,r3,1
    a1f4:	19bffd1e 	bne	r3,r6,a1ec <memset+0x10>
    a1f8:	f800283a 	ret

0000a1fc <_printf_r>:
    a1fc:	defffd04 	addi	sp,sp,-12
    a200:	dfc00015 	stw	ra,0(sp)
    a204:	d9800115 	stw	r6,4(sp)
    a208:	d9c00215 	stw	r7,8(sp)
    a20c:	20800217 	ldw	r2,8(r4)
    a210:	00c00074 	movhi	r3,1
    a214:	18ea5b04 	addi	r3,r3,-22164
    a218:	280d883a 	mov	r6,r5
    a21c:	10c00115 	stw	r3,4(r2)
    a220:	100b883a 	mov	r5,r2
    a224:	d9c00104 	addi	r7,sp,4
    a228:	000a2840 	call	a284 <___vfprintf_internal_r>
    a22c:	dfc00017 	ldw	ra,0(sp)
    a230:	dec00304 	addi	sp,sp,12
    a234:	f800283a 	ret

0000a238 <printf>:
    a238:	defffc04 	addi	sp,sp,-16
    a23c:	dfc00015 	stw	ra,0(sp)
    a240:	d9400115 	stw	r5,4(sp)
    a244:	d9800215 	stw	r6,8(sp)
    a248:	d9c00315 	stw	r7,12(sp)
    a24c:	00800074 	movhi	r2,1
    a250:	10afff04 	addi	r2,r2,-16388
    a254:	10800017 	ldw	r2,0(r2)
    a258:	00c00074 	movhi	r3,1
    a25c:	18ea5b04 	addi	r3,r3,-22164
    a260:	200b883a 	mov	r5,r4
    a264:	10800217 	ldw	r2,8(r2)
    a268:	d9800104 	addi	r6,sp,4
    a26c:	10c00115 	stw	r3,4(r2)
    a270:	1009883a 	mov	r4,r2
    a274:	000a9480 	call	a948 <__vfprintf_internal>
    a278:	dfc00017 	ldw	ra,0(sp)
    a27c:	dec00404 	addi	sp,sp,16
    a280:	f800283a 	ret

0000a284 <___vfprintf_internal_r>:
    a284:	deffe204 	addi	sp,sp,-120
    a288:	d8c00804 	addi	r3,sp,32
    a28c:	df001c15 	stw	fp,112(sp)
    a290:	ddc01b15 	stw	r23,108(sp)
    a294:	dd401915 	stw	r21,100(sp)
    a298:	dd001815 	stw	r20,96(sp)
    a29c:	dcc01715 	stw	r19,92(sp)
    a2a0:	dc801615 	stw	r18,88(sp)
    a2a4:	dc001415 	stw	r16,80(sp)
    a2a8:	dfc01d15 	stw	ra,116(sp)
    a2ac:	dd801a15 	stw	r22,104(sp)
    a2b0:	dc401515 	stw	r17,84(sp)
    a2b4:	2039883a 	mov	fp,r4
    a2b8:	d9c00e15 	stw	r7,56(sp)
    a2bc:	3021883a 	mov	r16,r6
    a2c0:	0025883a 	mov	r18,zero
    a2c4:	d8001315 	stw	zero,76(sp)
    a2c8:	d8000d15 	stw	zero,52(sp)
    a2cc:	0029883a 	mov	r20,zero
    a2d0:	d8000b15 	stw	zero,44(sp)
    a2d4:	d8000c15 	stw	zero,48(sp)
    a2d8:	d8001115 	stw	zero,68(sp)
    a2dc:	d8001015 	stw	zero,64(sp)
    a2e0:	002b883a 	mov	r21,zero
    a2e4:	04c00044 	movi	r19,1
    a2e8:	d8c00a15 	stw	r3,40(sp)
    a2ec:	282f883a 	mov	r23,r5
    a2f0:	80c00003 	ldbu	r3,0(r16)
    a2f4:	84000044 	addi	r16,r16,1
    a2f8:	18803fcc 	andi	r2,r3,255
    a2fc:	1080201c 	xori	r2,r2,128
    a300:	10bfe004 	addi	r2,r2,-128
    a304:	10001426 	beq	r2,zero,a358 <___vfprintf_internal_r+0xd4>
    a308:	acc02f26 	beq	r21,r19,a3c8 <___vfprintf_internal_r+0x144>
    a30c:	9d401f16 	blt	r19,r21,a38c <___vfprintf_internal_r+0x108>
    a310:	a83ff71e 	bne	r21,zero,a2f0 <___vfprintf_internal_r+0x6c>
    a314:	01000944 	movi	r4,37
    a318:	1100d526 	beq	r2,r4,a670 <___vfprintf_internal_r+0x3ec>
    a31c:	b8800117 	ldw	r2,4(r23)
    a320:	d8c00905 	stb	r3,36(sp)
    a324:	e009883a 	mov	r4,fp
    a328:	b80b883a 	mov	r5,r23
    a32c:	d9800904 	addi	r6,sp,36
    a330:	01c00044 	movi	r7,1
    a334:	103ee83a 	callr	r2
    a338:	10009c1e 	bne	r2,zero,a5ac <___vfprintf_internal_r+0x328>
    a33c:	80c00003 	ldbu	r3,0(r16)
    a340:	94800044 	addi	r18,r18,1
    a344:	84000044 	addi	r16,r16,1
    a348:	18803fcc 	andi	r2,r3,255
    a34c:	1080201c 	xori	r2,r2,128
    a350:	10bfe004 	addi	r2,r2,-128
    a354:	103fec1e 	bne	r2,zero,a308 <___vfprintf_internal_r+0x84>
    a358:	9005883a 	mov	r2,r18
    a35c:	dfc01d17 	ldw	ra,116(sp)
    a360:	df001c17 	ldw	fp,112(sp)
    a364:	ddc01b17 	ldw	r23,108(sp)
    a368:	dd801a17 	ldw	r22,104(sp)
    a36c:	dd401917 	ldw	r21,100(sp)
    a370:	dd001817 	ldw	r20,96(sp)
    a374:	dcc01717 	ldw	r19,92(sp)
    a378:	dc801617 	ldw	r18,88(sp)
    a37c:	dc401517 	ldw	r17,84(sp)
    a380:	dc001417 	ldw	r16,80(sp)
    a384:	dec01e04 	addi	sp,sp,120
    a388:	f800283a 	ret
    a38c:	01000084 	movi	r4,2
    a390:	a9001126 	beq	r21,r4,a3d8 <___vfprintf_internal_r+0x154>
    a394:	010000c4 	movi	r4,3
    a398:	a93fd51e 	bne	r21,r4,a2f0 <___vfprintf_internal_r+0x6c>
    a39c:	193ff404 	addi	r4,r3,-48
    a3a0:	21003fcc 	andi	r4,r4,255
    a3a4:	01400244 	movi	r5,9
    a3a8:	29001936 	bltu	r5,r4,a410 <___vfprintf_internal_r+0x18c>
    a3ac:	d8c00b17 	ldw	r3,44(sp)
    a3b0:	00bfffc4 	movi	r2,-1
    a3b4:	1880e126 	beq	r3,r2,a73c <___vfprintf_internal_r+0x4b8>
    a3b8:	188002a4 	muli	r2,r3,10
    a3bc:	2089883a 	add	r4,r4,r2
    a3c0:	d9000b15 	stw	r4,44(sp)
    a3c4:	003fca06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a3c8:	01000c04 	movi	r4,48
    a3cc:	1100d626 	beq	r2,r4,a728 <___vfprintf_internal_r+0x4a4>
    a3d0:	01000944 	movi	r4,37
    a3d4:	1100f026 	beq	r2,r4,a798 <___vfprintf_internal_r+0x514>
    a3d8:	193ff404 	addi	r4,r3,-48
    a3dc:	21003fcc 	andi	r4,r4,255
    a3e0:	01400244 	movi	r5,9
    a3e4:	29000836 	bltu	r5,r4,a408 <___vfprintf_internal_r+0x184>
    a3e8:	d8c00c17 	ldw	r3,48(sp)
    a3ec:	00bfffc4 	movi	r2,-1
    a3f0:	1880d026 	beq	r3,r2,a734 <___vfprintf_internal_r+0x4b0>
    a3f4:	188002a4 	muli	r2,r3,10
    a3f8:	2089883a 	add	r4,r4,r2
    a3fc:	d9000c15 	stw	r4,48(sp)
    a400:	05400084 	movi	r21,2
    a404:	003fba06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a408:	01000b84 	movi	r4,46
    a40c:	1100a526 	beq	r2,r4,a6a4 <___vfprintf_internal_r+0x420>
    a410:	01001b04 	movi	r4,108
    a414:	1100a126 	beq	r2,r4,a69c <___vfprintf_internal_r+0x418>
    a418:	d9400b17 	ldw	r5,44(sp)
    a41c:	00bfffc4 	movi	r2,-1
    a420:	2880da26 	beq	r5,r2,a78c <___vfprintf_internal_r+0x508>
    a424:	d8001015 	stw	zero,64(sp)
    a428:	18ffea04 	addi	r3,r3,-88
    a42c:	18c03fcc 	andi	r3,r3,255
    a430:	00800804 	movi	r2,32
    a434:	10c0022e 	bgeu	r2,r3,a440 <___vfprintf_internal_r+0x1bc>
    a438:	002b883a 	mov	r21,zero
    a43c:	003fac06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a440:	18c7883a 	add	r3,r3,r3
    a444:	18c7883a 	add	r3,r3,r3
    a448:	01000074 	movhi	r4,1
    a44c:	21291704 	addi	r4,r4,-23460
    a450:	1907883a 	add	r3,r3,r4
    a454:	18800017 	ldw	r2,0(r3)
    a458:	1000683a 	jmp	r2
    a45c:	0000a7c4 	movi	zero,671
    a460:	0000a438 	rdprs	zero,zero,656
    a464:	0000a438 	rdprs	zero,zero,656
    a468:	0000a438 	rdprs	zero,zero,656
    a46c:	0000a438 	rdprs	zero,zero,656
    a470:	0000a438 	rdprs	zero,zero,656
    a474:	0000a438 	rdprs	zero,zero,656
    a478:	0000a438 	rdprs	zero,zero,656
    a47c:	0000a438 	rdprs	zero,zero,656
    a480:	0000a438 	rdprs	zero,zero,656
    a484:	0000a438 	rdprs	zero,zero,656
    a488:	0000a7d4 	movui	zero,671
    a48c:	0000a4e0 	cmpeqi	zero,zero,659
    a490:	0000a438 	rdprs	zero,zero,656
    a494:	0000a438 	rdprs	zero,zero,656
    a498:	0000a438 	rdprs	zero,zero,656
    a49c:	0000a438 	rdprs	zero,zero,656
    a4a0:	0000a4e0 	cmpeqi	zero,zero,659
    a4a4:	0000a438 	rdprs	zero,zero,656
    a4a8:	0000a438 	rdprs	zero,zero,656
    a4ac:	0000a438 	rdprs	zero,zero,656
    a4b0:	0000a438 	rdprs	zero,zero,656
    a4b4:	0000a438 	rdprs	zero,zero,656
    a4b8:	0000a5b4 	movhi	zero,662
    a4bc:	0000a438 	rdprs	zero,zero,656
    a4c0:	0000a438 	rdprs	zero,zero,656
    a4c4:	0000a438 	rdprs	zero,zero,656
    a4c8:	0000a81c 	xori	zero,zero,672
    a4cc:	0000a438 	rdprs	zero,zero,656
    a4d0:	0000a5b8 	rdprs	zero,zero,662
    a4d4:	0000a438 	rdprs	zero,zero,656
    a4d8:	0000a438 	rdprs	zero,zero,656
    a4dc:	0000a7cc 	andi	zero,zero,671
    a4e0:	d8c00d17 	ldw	r3,52(sp)
    a4e4:	18003426 	beq	r3,zero,a5b8 <___vfprintf_internal_r+0x334>
    a4e8:	d9000e17 	ldw	r4,56(sp)
    a4ec:	00c00044 	movi	r3,1
    a4f0:	25800017 	ldw	r22,0(r4)
    a4f4:	21000104 	addi	r4,r4,4
    a4f8:	d9000e15 	stw	r4,56(sp)
    a4fc:	d8c00d15 	stw	r3,52(sp)
    a500:	b0010b16 	blt	r22,zero,a930 <___vfprintf_internal_r+0x6ac>
    a504:	d8001215 	stw	zero,72(sp)
    a508:	d82b883a 	mov	r21,sp
    a50c:	b000321e 	bne	r22,zero,a5d8 <___vfprintf_internal_r+0x354>
    a510:	d8c00b17 	ldw	r3,44(sp)
    a514:	d809883a 	mov	r4,sp
    a518:	00c00b0e 	bge	zero,r3,a548 <___vfprintf_internal_r+0x2c4>
    a51c:	d8800b17 	ldw	r2,44(sp)
    a520:	d82b883a 	mov	r21,sp
    a524:	00c00c04 	movi	r3,48
    a528:	00000206 	br	a534 <___vfprintf_internal_r+0x2b0>
    a52c:	d9400a17 	ldw	r5,40(sp)
    a530:	a9400426 	beq	r21,r5,a544 <___vfprintf_internal_r+0x2c0>
    a534:	a8c00005 	stb	r3,0(r21)
    a538:	10bfffc4 	addi	r2,r2,-1
    a53c:	ad400044 	addi	r21,r21,1
    a540:	103ffa1e 	bne	r2,zero,a52c <___vfprintf_internal_r+0x2a8>
    a544:	a92dc83a 	sub	r22,r21,r4
    a548:	d8c01217 	ldw	r3,72(sp)
    a54c:	b0c5883a 	add	r2,r22,r3
    a550:	d8c00c17 	ldw	r3,48(sp)
    a554:	1885c83a 	sub	r2,r3,r2
    a558:	d8c01017 	ldw	r3,64(sp)
    a55c:	d8800f15 	stw	r2,60(sp)
    a560:	18007826 	beq	r3,zero,a744 <___vfprintf_internal_r+0x4c0>
    a564:	d8c01217 	ldw	r3,72(sp)
    a568:	1800e41e 	bne	r3,zero,a8fc <___vfprintf_internal_r+0x678>
    a56c:	d8c00f17 	ldw	r3,60(sp)
    a570:	00c05c0e 	bge	zero,r3,a6e4 <___vfprintf_internal_r+0x460>
    a574:	00800c04 	movi	r2,48
    a578:	d88008c5 	stb	r2,35(sp)
    a57c:	1c7fffc4 	addi	r17,r3,-1
    a580:	00000306 	br	a590 <___vfprintf_internal_r+0x30c>
    a584:	8c7fffc4 	addi	r17,r17,-1
    a588:	013fffc4 	movi	r4,-1
    a58c:	8900eb26 	beq	r17,r4,a93c <___vfprintf_internal_r+0x6b8>
    a590:	b8800117 	ldw	r2,4(r23)
    a594:	e009883a 	mov	r4,fp
    a598:	b80b883a 	mov	r5,r23
    a59c:	d98008c4 	addi	r6,sp,35
    a5a0:	01c00044 	movi	r7,1
    a5a4:	103ee83a 	callr	r2
    a5a8:	103ff626 	beq	r2,zero,a584 <___vfprintf_internal_r+0x300>
    a5ac:	04bfffc4 	movi	r18,-1
    a5b0:	003f6906 	br	a358 <___vfprintf_internal_r+0xd4>
    a5b4:	05000204 	movi	r20,8
    a5b8:	d9400e17 	ldw	r5,56(sp)
    a5bc:	2d800017 	ldw	r22,0(r5)
    a5c0:	29400104 	addi	r5,r5,4
    a5c4:	d9400e15 	stw	r5,56(sp)
    a5c8:	d8000d15 	stw	zero,52(sp)
    a5cc:	d8001215 	stw	zero,72(sp)
    a5d0:	d82b883a 	mov	r21,sp
    a5d4:	b03fce26 	beq	r22,zero,a510 <___vfprintf_internal_r+0x28c>
    a5d8:	9005883a 	mov	r2,r18
    a5dc:	dc000f15 	stw	r16,60(sp)
    a5e0:	a025883a 	mov	r18,r20
    a5e4:	04400244 	movi	r17,9
    a5e8:	dc001317 	ldw	r16,76(sp)
    a5ec:	1029883a 	mov	r20,r2
    a5f0:	00000506 	br	a608 <___vfprintf_internal_r+0x384>
    a5f4:	b5800c04 	addi	r22,r22,48
    a5f8:	ad800005 	stb	r22,0(r21)
    a5fc:	102d883a 	mov	r22,r2
    a600:	ad400044 	addi	r21,r21,1
    a604:	10000c26 	beq	r2,zero,a638 <___vfprintf_internal_r+0x3b4>
    a608:	b009883a 	mov	r4,r22
    a60c:	900b883a 	mov	r5,r18
    a610:	000ac000 	call	ac00 <__udivsi3>
    a614:	9089383a 	mul	r4,r18,r2
    a618:	b12dc83a 	sub	r22,r22,r4
    a61c:	8dbff50e 	bge	r17,r22,a5f4 <___vfprintf_internal_r+0x370>
    a620:	80001126 	beq	r16,zero,a668 <___vfprintf_internal_r+0x3e4>
    a624:	b5800dc4 	addi	r22,r22,55
    a628:	ad800005 	stb	r22,0(r21)
    a62c:	102d883a 	mov	r22,r2
    a630:	ad400044 	addi	r21,r21,1
    a634:	103ff41e 	bne	r2,zero,a608 <___vfprintf_internal_r+0x384>
    a638:	d8c00b17 	ldw	r3,44(sp)
    a63c:	a005883a 	mov	r2,r20
    a640:	aeedc83a 	sub	r22,r21,sp
    a644:	9029883a 	mov	r20,r18
    a648:	1025883a 	mov	r18,r2
    a64c:	1d85c83a 	sub	r2,r3,r22
    a650:	dc000f17 	ldw	r16,60(sp)
    a654:	d809883a 	mov	r4,sp
    a658:	00bfbb0e 	bge	zero,r2,a548 <___vfprintf_internal_r+0x2c4>
    a65c:	d8c00a17 	ldw	r3,40(sp)
    a660:	a8ffb036 	bltu	r21,r3,a524 <___vfprintf_internal_r+0x2a0>
    a664:	003fb806 	br	a548 <___vfprintf_internal_r+0x2c4>
    a668:	b58015c4 	addi	r22,r22,87
    a66c:	003fe206 	br	a5f8 <___vfprintf_internal_r+0x374>
    a670:	00c00044 	movi	r3,1
    a674:	d8c00d15 	stw	r3,52(sp)
    a678:	00ffffc4 	movi	r3,-1
    a67c:	d8c00b15 	stw	r3,44(sp)
    a680:	d8001315 	stw	zero,76(sp)
    a684:	05000284 	movi	r20,10
    a688:	d8c00c15 	stw	r3,48(sp)
    a68c:	d8001115 	stw	zero,68(sp)
    a690:	d8001015 	stw	zero,64(sp)
    a694:	dd400d17 	ldw	r21,52(sp)
    a698:	003f1506 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a69c:	00c00044 	movi	r3,1
    a6a0:	d8c01115 	stw	r3,68(sp)
    a6a4:	054000c4 	movi	r21,3
    a6a8:	003f1106 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a6ac:	d8c00f17 	ldw	r3,60(sp)
    a6b0:	90e5883a 	add	r18,r18,r3
    a6b4:	d8c01217 	ldw	r3,72(sp)
    a6b8:	18000a26 	beq	r3,zero,a6e4 <___vfprintf_internal_r+0x460>
    a6bc:	b8800117 	ldw	r2,4(r23)
    a6c0:	00c00b44 	movi	r3,45
    a6c4:	d8c00905 	stb	r3,36(sp)
    a6c8:	e009883a 	mov	r4,fp
    a6cc:	b80b883a 	mov	r5,r23
    a6d0:	d9800904 	addi	r6,sp,36
    a6d4:	01c00044 	movi	r7,1
    a6d8:	103ee83a 	callr	r2
    a6dc:	103fb31e 	bne	r2,zero,a5ac <___vfprintf_internal_r+0x328>
    a6e0:	94800044 	addi	r18,r18,1
    a6e4:	ada3c83a 	sub	r17,r21,r22
    a6e8:	05800316 	blt	zero,r22,a6f8 <___vfprintf_internal_r+0x474>
    a6ec:	003f5206 	br	a438 <___vfprintf_internal_r+0x1b4>
    a6f0:	94800044 	addi	r18,r18,1
    a6f4:	ac7f5026 	beq	r21,r17,a438 <___vfprintf_internal_r+0x1b4>
    a6f8:	ad7fffc4 	addi	r21,r21,-1
    a6fc:	a8c00003 	ldbu	r3,0(r21)
    a700:	b8800117 	ldw	r2,4(r23)
    a704:	e009883a 	mov	r4,fp
    a708:	d8c00905 	stb	r3,36(sp)
    a70c:	b80b883a 	mov	r5,r23
    a710:	d9800904 	addi	r6,sp,36
    a714:	01c00044 	movi	r7,1
    a718:	103ee83a 	callr	r2
    a71c:	103ff426 	beq	r2,zero,a6f0 <___vfprintf_internal_r+0x46c>
    a720:	04bfffc4 	movi	r18,-1
    a724:	003f0c06 	br	a358 <___vfprintf_internal_r+0xd4>
    a728:	dd401015 	stw	r21,64(sp)
    a72c:	05400084 	movi	r21,2
    a730:	003eef06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a734:	0005883a 	mov	r2,zero
    a738:	003f2f06 	br	a3f8 <___vfprintf_internal_r+0x174>
    a73c:	0005883a 	mov	r2,zero
    a740:	003f1e06 	br	a3bc <___vfprintf_internal_r+0x138>
    a744:	d8c00f17 	ldw	r3,60(sp)
    a748:	00ffda0e 	bge	zero,r3,a6b4 <___vfprintf_internal_r+0x430>
    a74c:	00800804 	movi	r2,32
    a750:	d8800885 	stb	r2,34(sp)
    a754:	1c7fffc4 	addi	r17,r3,-1
    a758:	00000306 	br	a768 <___vfprintf_internal_r+0x4e4>
    a75c:	8c7fffc4 	addi	r17,r17,-1
    a760:	013fffc4 	movi	r4,-1
    a764:	893fd126 	beq	r17,r4,a6ac <___vfprintf_internal_r+0x428>
    a768:	b8800117 	ldw	r2,4(r23)
    a76c:	e009883a 	mov	r4,fp
    a770:	b80b883a 	mov	r5,r23
    a774:	d9800884 	addi	r6,sp,34
    a778:	01c00044 	movi	r7,1
    a77c:	103ee83a 	callr	r2
    a780:	103ff626 	beq	r2,zero,a75c <___vfprintf_internal_r+0x4d8>
    a784:	04bfffc4 	movi	r18,-1
    a788:	003ef306 	br	a358 <___vfprintf_internal_r+0xd4>
    a78c:	00800044 	movi	r2,1
    a790:	d8800b15 	stw	r2,44(sp)
    a794:	003f2406 	br	a428 <___vfprintf_internal_r+0x1a4>
    a798:	b8c00117 	ldw	r3,4(r23)
    a79c:	d8800905 	stb	r2,36(sp)
    a7a0:	e009883a 	mov	r4,fp
    a7a4:	b80b883a 	mov	r5,r23
    a7a8:	d9800904 	addi	r6,sp,36
    a7ac:	a80f883a 	mov	r7,r21
    a7b0:	183ee83a 	callr	r3
    a7b4:	103f7d1e 	bne	r2,zero,a5ac <___vfprintf_internal_r+0x328>
    a7b8:	94800044 	addi	r18,r18,1
    a7bc:	002b883a 	mov	r21,zero
    a7c0:	003ecb06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a7c4:	00c00044 	movi	r3,1
    a7c8:	d8c01315 	stw	r3,76(sp)
    a7cc:	05000404 	movi	r20,16
    a7d0:	003f7906 	br	a5b8 <___vfprintf_internal_r+0x334>
    a7d4:	d8c00c17 	ldw	r3,48(sp)
    a7d8:	98c0380e 	bge	r19,r3,a8bc <___vfprintf_internal_r+0x638>
    a7dc:	1dbfffc4 	addi	r22,r3,-1
    a7e0:	00800804 	movi	r2,32
    a7e4:	d8800845 	stb	r2,33(sp)
    a7e8:	b023883a 	mov	r17,r22
    a7ec:	057fffc4 	movi	r21,-1
    a7f0:	8c7fffc4 	addi	r17,r17,-1
    a7f4:	8d403026 	beq	r17,r21,a8b8 <___vfprintf_internal_r+0x634>
    a7f8:	b8800117 	ldw	r2,4(r23)
    a7fc:	e009883a 	mov	r4,fp
    a800:	b80b883a 	mov	r5,r23
    a804:	d9800844 	addi	r6,sp,33
    a808:	01c00044 	movi	r7,1
    a80c:	103ee83a 	callr	r2
    a810:	103ff726 	beq	r2,zero,a7f0 <___vfprintf_internal_r+0x56c>
    a814:	04bfffc4 	movi	r18,-1
    a818:	003ecf06 	br	a358 <___vfprintf_internal_r+0xd4>
    a81c:	d9000e17 	ldw	r4,56(sp)
    a820:	d8c00e17 	ldw	r3,56(sp)
    a824:	21000017 	ldw	r4,0(r4)
    a828:	18c00104 	addi	r3,r3,4
    a82c:	d8c00e15 	stw	r3,56(sp)
    a830:	d9000f15 	stw	r4,60(sp)
    a834:	000aa4c0 	call	aa4c <strlen>
    a838:	d8c00c17 	ldw	r3,48(sp)
    a83c:	102d883a 	mov	r22,r2
    a840:	1887c83a 	sub	r3,r3,r2
    a844:	d8c01215 	stw	r3,72(sp)
    a848:	00c0110e 	bge	zero,r3,a890 <___vfprintf_internal_r+0x60c>
    a84c:	00800804 	movi	r2,32
    a850:	d8800805 	stb	r2,32(sp)
    a854:	1c7fffc4 	addi	r17,r3,-1
    a858:	057fffc4 	movi	r21,-1
    a85c:	00000206 	br	a868 <___vfprintf_internal_r+0x5e4>
    a860:	8c7fffc4 	addi	r17,r17,-1
    a864:	8d400826 	beq	r17,r21,a888 <___vfprintf_internal_r+0x604>
    a868:	b8800117 	ldw	r2,4(r23)
    a86c:	e009883a 	mov	r4,fp
    a870:	b80b883a 	mov	r5,r23
    a874:	d9800804 	addi	r6,sp,32
    a878:	01c00044 	movi	r7,1
    a87c:	103ee83a 	callr	r2
    a880:	103ff726 	beq	r2,zero,a860 <___vfprintf_internal_r+0x5dc>
    a884:	003f4906 	br	a5ac <___vfprintf_internal_r+0x328>
    a888:	d8c01217 	ldw	r3,72(sp)
    a88c:	90e5883a 	add	r18,r18,r3
    a890:	b8800117 	ldw	r2,4(r23)
    a894:	d9800f17 	ldw	r6,60(sp)
    a898:	e009883a 	mov	r4,fp
    a89c:	b80b883a 	mov	r5,r23
    a8a0:	b00f883a 	mov	r7,r22
    a8a4:	103ee83a 	callr	r2
    a8a8:	103f401e 	bne	r2,zero,a5ac <___vfprintf_internal_r+0x328>
    a8ac:	95a5883a 	add	r18,r18,r22
    a8b0:	002b883a 	mov	r21,zero
    a8b4:	003e8e06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a8b8:	95a5883a 	add	r18,r18,r22
    a8bc:	d9000e17 	ldw	r4,56(sp)
    a8c0:	b8800117 	ldw	r2,4(r23)
    a8c4:	b80b883a 	mov	r5,r23
    a8c8:	20c00017 	ldw	r3,0(r4)
    a8cc:	d9800904 	addi	r6,sp,36
    a8d0:	e009883a 	mov	r4,fp
    a8d4:	d8c00905 	stb	r3,36(sp)
    a8d8:	d8c00e17 	ldw	r3,56(sp)
    a8dc:	01c00044 	movi	r7,1
    a8e0:	1c400104 	addi	r17,r3,4
    a8e4:	103ee83a 	callr	r2
    a8e8:	103f301e 	bne	r2,zero,a5ac <___vfprintf_internal_r+0x328>
    a8ec:	94800044 	addi	r18,r18,1
    a8f0:	dc400e15 	stw	r17,56(sp)
    a8f4:	002b883a 	mov	r21,zero
    a8f8:	003e7d06 	br	a2f0 <___vfprintf_internal_r+0x6c>
    a8fc:	b8800117 	ldw	r2,4(r23)
    a900:	00c00b44 	movi	r3,45
    a904:	d8c00905 	stb	r3,36(sp)
    a908:	e009883a 	mov	r4,fp
    a90c:	b80b883a 	mov	r5,r23
    a910:	d9800904 	addi	r6,sp,36
    a914:	01c00044 	movi	r7,1
    a918:	103ee83a 	callr	r2
    a91c:	103f231e 	bne	r2,zero,a5ac <___vfprintf_internal_r+0x328>
    a920:	d8c00f17 	ldw	r3,60(sp)
    a924:	94800044 	addi	r18,r18,1
    a928:	00ff1216 	blt	zero,r3,a574 <___vfprintf_internal_r+0x2f0>
    a92c:	003f6d06 	br	a6e4 <___vfprintf_internal_r+0x460>
    a930:	05adc83a 	sub	r22,zero,r22
    a934:	d8c01215 	stw	r3,72(sp)
    a938:	003f2506 	br	a5d0 <___vfprintf_internal_r+0x34c>
    a93c:	d8c00f17 	ldw	r3,60(sp)
    a940:	90e5883a 	add	r18,r18,r3
    a944:	003f6706 	br	a6e4 <___vfprintf_internal_r+0x460>

0000a948 <__vfprintf_internal>:
    a948:	00800074 	movhi	r2,1
    a94c:	10afff04 	addi	r2,r2,-16388
    a950:	2007883a 	mov	r3,r4
    a954:	11000017 	ldw	r4,0(r2)
    a958:	2805883a 	mov	r2,r5
    a95c:	300f883a 	mov	r7,r6
    a960:	180b883a 	mov	r5,r3
    a964:	100d883a 	mov	r6,r2
    a968:	000a2841 	jmpi	a284 <___vfprintf_internal_r>

0000a96c <__sfvwrite_small_dev>:
    a96c:	2880000b 	ldhu	r2,0(r5)
    a970:	defffa04 	addi	sp,sp,-24
    a974:	dcc00315 	stw	r19,12(sp)
    a978:	10c0020c 	andi	r3,r2,8
    a97c:	18ffffcc 	andi	r3,r3,65535
    a980:	18e0001c 	xori	r3,r3,32768
    a984:	dc800215 	stw	r18,8(sp)
    a988:	dc400115 	stw	r17,4(sp)
    a98c:	dfc00515 	stw	ra,20(sp)
    a990:	dd000415 	stw	r20,16(sp)
    a994:	dc000015 	stw	r16,0(sp)
    a998:	18e00004 	addi	r3,r3,-32768
    a99c:	2825883a 	mov	r18,r5
    a9a0:	2027883a 	mov	r19,r4
    a9a4:	3023883a 	mov	r17,r6
    a9a8:	18002626 	beq	r3,zero,aa44 <__sfvwrite_small_dev+0xd8>
    a9ac:	2940008f 	ldh	r5,2(r5)
    a9b0:	28001016 	blt	r5,zero,a9f4 <__sfvwrite_small_dev+0x88>
    a9b4:	01c01a0e 	bge	zero,r7,aa20 <__sfvwrite_small_dev+0xb4>
    a9b8:	3821883a 	mov	r16,r7
    a9bc:	05010004 	movi	r20,1024
    a9c0:	00000306 	br	a9d0 <__sfvwrite_small_dev+0x64>
    a9c4:	88a3883a 	add	r17,r17,r2
    a9c8:	0400150e 	bge	zero,r16,aa20 <__sfvwrite_small_dev+0xb4>
    a9cc:	9140008f 	ldh	r5,2(r18)
    a9d0:	880d883a 	mov	r6,r17
    a9d4:	9809883a 	mov	r4,r19
    a9d8:	800f883a 	mov	r7,r16
    a9dc:	a400010e 	bge	r20,r16,a9e4 <__sfvwrite_small_dev+0x78>
    a9e0:	01c10004 	movi	r7,1024
    a9e4:	000aa740 	call	aa74 <_write_r>
    a9e8:	80a1c83a 	sub	r16,r16,r2
    a9ec:	00bff516 	blt	zero,r2,a9c4 <__sfvwrite_small_dev+0x58>
    a9f0:	9080000b 	ldhu	r2,0(r18)
    a9f4:	10801014 	ori	r2,r2,64
    a9f8:	9080000d 	sth	r2,0(r18)
    a9fc:	00bfffc4 	movi	r2,-1
    aa00:	dfc00517 	ldw	ra,20(sp)
    aa04:	dd000417 	ldw	r20,16(sp)
    aa08:	dcc00317 	ldw	r19,12(sp)
    aa0c:	dc800217 	ldw	r18,8(sp)
    aa10:	dc400117 	ldw	r17,4(sp)
    aa14:	dc000017 	ldw	r16,0(sp)
    aa18:	dec00604 	addi	sp,sp,24
    aa1c:	f800283a 	ret
    aa20:	0005883a 	mov	r2,zero
    aa24:	dfc00517 	ldw	ra,20(sp)
    aa28:	dd000417 	ldw	r20,16(sp)
    aa2c:	dcc00317 	ldw	r19,12(sp)
    aa30:	dc800217 	ldw	r18,8(sp)
    aa34:	dc400117 	ldw	r17,4(sp)
    aa38:	dc000017 	ldw	r16,0(sp)
    aa3c:	dec00604 	addi	sp,sp,24
    aa40:	f800283a 	ret
    aa44:	00bfffc4 	movi	r2,-1
    aa48:	003fed06 	br	aa00 <__sfvwrite_small_dev+0x94>

0000aa4c <strlen>:
    aa4c:	20800007 	ldb	r2,0(r4)
    aa50:	10000626 	beq	r2,zero,aa6c <strlen+0x20>
    aa54:	2005883a 	mov	r2,r4
    aa58:	10800044 	addi	r2,r2,1
    aa5c:	10c00007 	ldb	r3,0(r2)
    aa60:	183ffd1e 	bne	r3,zero,aa58 <strlen+0xc>
    aa64:	1105c83a 	sub	r2,r2,r4
    aa68:	f800283a 	ret
    aa6c:	0005883a 	mov	r2,zero
    aa70:	f800283a 	ret

0000aa74 <_write_r>:
    aa74:	defffd04 	addi	sp,sp,-12
    aa78:	dc400115 	stw	r17,4(sp)
    aa7c:	dc000015 	stw	r16,0(sp)
    aa80:	2023883a 	mov	r17,r4
    aa84:	04000074 	movhi	r16,1
    aa88:	8430d904 	addi	r16,r16,-15516
    aa8c:	2809883a 	mov	r4,r5
    aa90:	300b883a 	mov	r5,r6
    aa94:	380d883a 	mov	r6,r7
    aa98:	dfc00215 	stw	ra,8(sp)
    aa9c:	80000015 	stw	zero,0(r16)
    aaa0:	000ad740 	call	ad74 <write>
    aaa4:	00ffffc4 	movi	r3,-1
    aaa8:	10c00526 	beq	r2,r3,aac0 <_write_r+0x4c>
    aaac:	dfc00217 	ldw	ra,8(sp)
    aab0:	dc400117 	ldw	r17,4(sp)
    aab4:	dc000017 	ldw	r16,0(sp)
    aab8:	dec00304 	addi	sp,sp,12
    aabc:	f800283a 	ret
    aac0:	80c00017 	ldw	r3,0(r16)
    aac4:	183ff926 	beq	r3,zero,aaac <_write_r+0x38>
    aac8:	88c00015 	stw	r3,0(r17)
    aacc:	dfc00217 	ldw	ra,8(sp)
    aad0:	dc400117 	ldw	r17,4(sp)
    aad4:	dc000017 	ldw	r16,0(sp)
    aad8:	dec00304 	addi	sp,sp,12
    aadc:	f800283a 	ret

0000aae0 <udivmodsi4>:
    aae0:	2005883a 	mov	r2,r4
    aae4:	2900182e 	bgeu	r5,r4,ab48 <udivmodsi4+0x68>
    aae8:	28001716 	blt	r5,zero,ab48 <udivmodsi4+0x68>
    aaec:	01000804 	movi	r4,32
    aaf0:	00c00044 	movi	r3,1
    aaf4:	00000206 	br	ab00 <udivmodsi4+0x20>
    aaf8:	20001126 	beq	r4,zero,ab40 <udivmodsi4+0x60>
    aafc:	28000516 	blt	r5,zero,ab14 <udivmodsi4+0x34>
    ab00:	294b883a 	add	r5,r5,r5
    ab04:	213fffc4 	addi	r4,r4,-1
    ab08:	18c7883a 	add	r3,r3,r3
    ab0c:	28bffa36 	bltu	r5,r2,aaf8 <udivmodsi4+0x18>
    ab10:	18000b26 	beq	r3,zero,ab40 <udivmodsi4+0x60>
    ab14:	0009883a 	mov	r4,zero
    ab18:	11400236 	bltu	r2,r5,ab24 <udivmodsi4+0x44>
    ab1c:	1145c83a 	sub	r2,r2,r5
    ab20:	20c8b03a 	or	r4,r4,r3
    ab24:	1806d07a 	srli	r3,r3,1
    ab28:	280ad07a 	srli	r5,r5,1
    ab2c:	183ffa1e 	bne	r3,zero,ab18 <udivmodsi4+0x38>
    ab30:	3000021e 	bne	r6,zero,ab3c <udivmodsi4+0x5c>
    ab34:	2005883a 	mov	r2,r4
    ab38:	f800283a 	ret
    ab3c:	f800283a 	ret
    ab40:	0009883a 	mov	r4,zero
    ab44:	003ffa06 	br	ab30 <udivmodsi4+0x50>
    ab48:	00c00044 	movi	r3,1
    ab4c:	0009883a 	mov	r4,zero
    ab50:	003ff106 	br	ab18 <udivmodsi4+0x38>

0000ab54 <__divsi3>:
    ab54:	defffe04 	addi	sp,sp,-8
    ab58:	dfc00115 	stw	ra,4(sp)
    ab5c:	dc000015 	stw	r16,0(sp)
    ab60:	20000a16 	blt	r4,zero,ab8c <__divsi3+0x38>
    ab64:	0021883a 	mov	r16,zero
    ab68:	28000b16 	blt	r5,zero,ab98 <__divsi3+0x44>
    ab6c:	000d883a 	mov	r6,zero
    ab70:	000aae00 	call	aae0 <udivmodsi4>
    ab74:	80000126 	beq	r16,zero,ab7c <__divsi3+0x28>
    ab78:	0085c83a 	sub	r2,zero,r2
    ab7c:	dfc00117 	ldw	ra,4(sp)
    ab80:	dc000017 	ldw	r16,0(sp)
    ab84:	dec00204 	addi	sp,sp,8
    ab88:	f800283a 	ret
    ab8c:	0109c83a 	sub	r4,zero,r4
    ab90:	04000044 	movi	r16,1
    ab94:	283ff50e 	bge	r5,zero,ab6c <__divsi3+0x18>
    ab98:	014bc83a 	sub	r5,zero,r5
    ab9c:	8400005c 	xori	r16,r16,1
    aba0:	003ff206 	br	ab6c <__divsi3+0x18>

0000aba4 <__modsi3>:
    aba4:	deffff04 	addi	sp,sp,-4
    aba8:	dfc00015 	stw	ra,0(sp)
    abac:	20000516 	blt	r4,zero,abc4 <__modsi3+0x20>
    abb0:	28000c16 	blt	r5,zero,abe4 <__modsi3+0x40>
    abb4:	01800044 	movi	r6,1
    abb8:	dfc00017 	ldw	ra,0(sp)
    abbc:	dec00104 	addi	sp,sp,4
    abc0:	000aae01 	jmpi	aae0 <udivmodsi4>
    abc4:	0109c83a 	sub	r4,zero,r4
    abc8:	28000b16 	blt	r5,zero,abf8 <__modsi3+0x54>
    abcc:	01800044 	movi	r6,1
    abd0:	000aae00 	call	aae0 <udivmodsi4>
    abd4:	0085c83a 	sub	r2,zero,r2
    abd8:	dfc00017 	ldw	ra,0(sp)
    abdc:	dec00104 	addi	sp,sp,4
    abe0:	f800283a 	ret
    abe4:	014bc83a 	sub	r5,zero,r5
    abe8:	01800044 	movi	r6,1
    abec:	dfc00017 	ldw	ra,0(sp)
    abf0:	dec00104 	addi	sp,sp,4
    abf4:	000aae01 	jmpi	aae0 <udivmodsi4>
    abf8:	014bc83a 	sub	r5,zero,r5
    abfc:	003ff306 	br	abcc <__modsi3+0x28>

0000ac00 <__udivsi3>:
    ac00:	000d883a 	mov	r6,zero
    ac04:	000aae01 	jmpi	aae0 <udivmodsi4>

0000ac08 <__umodsi3>:
    ac08:	01800044 	movi	r6,1
    ac0c:	000aae01 	jmpi	aae0 <udivmodsi4>

0000ac10 <alt_load>:
    ac10:	deffff04 	addi	sp,sp,-4
    ac14:	dfc00015 	stw	ra,0(sp)
    ac18:	01400074 	movhi	r5,1
    ac1c:	296f4004 	addi	r5,r5,-17152
    ac20:	01800074 	movhi	r6,1
    ac24:	31b00904 	addi	r6,r6,-16348
    ac28:	29801026 	beq	r5,r6,ac6c <alt_load+0x5c>
    ac2c:	00800074 	movhi	r2,1
    ac30:	10b00904 	addi	r2,r2,-16348
    ac34:	28800d26 	beq	r5,r2,ac6c <alt_load+0x5c>
    ac38:	29c00104 	addi	r7,r5,4
    ac3c:	11cfc83a 	sub	r7,r2,r7
    ac40:	380ed0ba 	srli	r7,r7,2
    ac44:	0005883a 	mov	r2,zero
    ac48:	39c00044 	addi	r7,r7,1
    ac4c:	39cf883a 	add	r7,r7,r7
    ac50:	39cf883a 	add	r7,r7,r7
    ac54:	3087883a 	add	r3,r6,r2
    ac58:	19000017 	ldw	r4,0(r3)
    ac5c:	2887883a 	add	r3,r5,r2
    ac60:	10800104 	addi	r2,r2,4
    ac64:	19000015 	stw	r4,0(r3)
    ac68:	11fffa1e 	bne	r2,r7,ac54 <alt_load+0x44>
    ac6c:	01400074 	movhi	r5,1
    ac70:	29600804 	addi	r5,r5,-32736
    ac74:	01800074 	movhi	r6,1
    ac78:	31a00804 	addi	r6,r6,-32736
    ac7c:	29801026 	beq	r5,r6,acc0 <alt_load+0xb0>
    ac80:	00800074 	movhi	r2,1
    ac84:	10a05404 	addi	r2,r2,-32432
    ac88:	28800d26 	beq	r5,r2,acc0 <alt_load+0xb0>
    ac8c:	29c00104 	addi	r7,r5,4
    ac90:	11cfc83a 	sub	r7,r2,r7
    ac94:	380ed0ba 	srli	r7,r7,2
    ac98:	0005883a 	mov	r2,zero
    ac9c:	39c00044 	addi	r7,r7,1
    aca0:	39cf883a 	add	r7,r7,r7
    aca4:	39cf883a 	add	r7,r7,r7
    aca8:	3087883a 	add	r3,r6,r2
    acac:	19000017 	ldw	r4,0(r3)
    acb0:	2887883a 	add	r3,r5,r2
    acb4:	10800104 	addi	r2,r2,4
    acb8:	19000015 	stw	r4,0(r3)
    acbc:	11fffa1e 	bne	r2,r7,aca8 <alt_load+0x98>
    acc0:	01400074 	movhi	r5,1
    acc4:	296eea04 	addi	r5,r5,-17496
    acc8:	01800074 	movhi	r6,1
    accc:	31aeea04 	addi	r6,r6,-17496
    acd0:	29801026 	beq	r5,r6,ad14 <alt_load+0x104>
    acd4:	00800074 	movhi	r2,1
    acd8:	10af4004 	addi	r2,r2,-17152
    acdc:	28800d26 	beq	r5,r2,ad14 <alt_load+0x104>
    ace0:	29c00104 	addi	r7,r5,4
    ace4:	11cfc83a 	sub	r7,r2,r7
    ace8:	380ed0ba 	srli	r7,r7,2
    acec:	0005883a 	mov	r2,zero
    acf0:	39c00044 	addi	r7,r7,1
    acf4:	39cf883a 	add	r7,r7,r7
    acf8:	39cf883a 	add	r7,r7,r7
    acfc:	3087883a 	add	r3,r6,r2
    ad00:	19000017 	ldw	r4,0(r3)
    ad04:	2887883a 	add	r3,r5,r2
    ad08:	10800104 	addi	r2,r2,4
    ad0c:	19000015 	stw	r4,0(r3)
    ad10:	11fffa1e 	bne	r2,r7,acfc <alt_load+0xec>
    ad14:	000b22c0 	call	b22c <alt_dcache_flush_all>
    ad18:	dfc00017 	ldw	ra,0(sp)
    ad1c:	dec00104 	addi	sp,sp,4
    ad20:	000b2a41 	jmpi	b2a4 <alt_icache_flush_all>

0000ad24 <alt_main>:
    ad24:	defffe04 	addi	sp,sp,-8
    ad28:	0009883a 	mov	r4,zero
    ad2c:	dfc00115 	stw	ra,4(sp)
    ad30:	dc000015 	stw	r16,0(sp)
    ad34:	000ae5c0 	call	ae5c <alt_irq_init>
    ad38:	000ae7c0 	call	ae7c <alt_sys_init>
    ad3c:	01000074 	movhi	r4,1
    ad40:	212f3504 	addi	r4,r4,-17196
    ad44:	200b883a 	mov	r5,r4
    ad48:	200d883a 	mov	r6,r4
    ad4c:	000b4240 	call	b424 <alt_io_redirect>
    ad50:	d120e417 	ldw	r4,-31856(gp)
    ad54:	d160e317 	ldw	r5,-31860(gp)
    ad58:	d1a0e217 	ldw	r6,-31864(gp)
    ad5c:	000825c0 	call	825c <main>
    ad60:	01000044 	movi	r4,1
    ad64:	1021883a 	mov	r16,r2
    ad68:	000b14c0 	call	b14c <close>
    ad6c:	8009883a 	mov	r4,r16
    ad70:	000b9540 	call	b954 <exit>

0000ad74 <write>:
    ad74:	defffe04 	addi	sp,sp,-8
    ad78:	dfc00115 	stw	ra,4(sp)
    ad7c:	dc000015 	stw	r16,0(sp)
    ad80:	20001216 	blt	r4,zero,adcc <write+0x58>
    ad84:	21000324 	muli	r4,r4,12
    ad88:	00800074 	movhi	r2,1
    ad8c:	10af8e04 	addi	r2,r2,-16840
    ad90:	2089883a 	add	r4,r4,r2
    ad94:	20800217 	ldw	r2,8(r4)
    ad98:	108000cc 	andi	r2,r2,3
    ad9c:	10001726 	beq	r2,zero,adfc <write+0x88>
    ada0:	20800017 	ldw	r2,0(r4)
    ada4:	10800617 	ldw	r2,24(r2)
    ada8:	10001426 	beq	r2,zero,adfc <write+0x88>
    adac:	103ee83a 	callr	r2
    adb0:	1021883a 	mov	r16,r2
    adb4:	10001d16 	blt	r2,zero,ae2c <write+0xb8>
    adb8:	8005883a 	mov	r2,r16
    adbc:	dfc00117 	ldw	ra,4(sp)
    adc0:	dc000017 	ldw	r16,0(sp)
    adc4:	dec00204 	addi	sp,sp,8
    adc8:	f800283a 	ret
    adcc:	00800074 	movhi	r2,1
    add0:	10b00504 	addi	r2,r2,-16364
    add4:	10800017 	ldw	r2,0(r2)
    add8:	10000226 	beq	r2,zero,ade4 <write+0x70>
    addc:	103ee83a 	callr	r2
    ade0:	00000206 	br	adec <write+0x78>
    ade4:	00800074 	movhi	r2,1
    ade8:	10b0d904 	addi	r2,r2,-15516
    adec:	00c01444 	movi	r3,81
    adf0:	10c00015 	stw	r3,0(r2)
    adf4:	043fffc4 	movi	r16,-1
    adf8:	003fef06 	br	adb8 <write+0x44>
    adfc:	00800074 	movhi	r2,1
    ae00:	10b00504 	addi	r2,r2,-16364
    ae04:	10800017 	ldw	r2,0(r2)
    ae08:	10000526 	beq	r2,zero,ae20 <write+0xac>
    ae0c:	103ee83a 	callr	r2
    ae10:	00c00344 	movi	r3,13
    ae14:	10c00015 	stw	r3,0(r2)
    ae18:	043fffc4 	movi	r16,-1
    ae1c:	003fe606 	br	adb8 <write+0x44>
    ae20:	00800074 	movhi	r2,1
    ae24:	10b0d904 	addi	r2,r2,-15516
    ae28:	003ff906 	br	ae10 <write+0x9c>
    ae2c:	00800074 	movhi	r2,1
    ae30:	10b00504 	addi	r2,r2,-16364
    ae34:	10800017 	ldw	r2,0(r2)
    ae38:	10000526 	beq	r2,zero,ae50 <write+0xdc>
    ae3c:	103ee83a 	callr	r2
    ae40:	0421c83a 	sub	r16,zero,r16
    ae44:	14000015 	stw	r16,0(r2)
    ae48:	043fffc4 	movi	r16,-1
    ae4c:	003fda06 	br	adb8 <write+0x44>
    ae50:	00800074 	movhi	r2,1
    ae54:	10b0d904 	addi	r2,r2,-15516
    ae58:	003ff906 	br	ae40 <write+0xcc>

0000ae5c <alt_irq_init>:
    ae5c:	deffff04 	addi	sp,sp,-4
    ae60:	dfc00015 	stw	ra,0(sp)
    ae64:	000b7640 	call	b764 <altera_nios2_qsys_irq_init>
    ae68:	00800044 	movi	r2,1
    ae6c:	1001703a 	wrctl	status,r2
    ae70:	dfc00017 	ldw	ra,0(sp)
    ae74:	dec00104 	addi	sp,sp,4
    ae78:	f800283a 	ret

0000ae7c <alt_sys_init>:
    ae7c:	defffe04 	addi	sp,sp,-8
    ae80:	01800044 	movi	r6,1
    ae84:	01c0fa04 	movi	r7,1000
    ae88:	01000074 	movhi	r4,1
    ae8c:	21040004 	addi	r4,r4,4096
    ae90:	000b883a 	mov	r5,zero
    ae94:	dfc00115 	stw	ra,4(sp)
    ae98:	dc000015 	stw	r16,0(sp)
    ae9c:	000afbc0 	call	afbc <alt_avalon_timer_sc_init>
    aea0:	04000074 	movhi	r16,1
    aea4:	84300104 	addi	r16,r16,-16380
    aea8:	800b883a 	mov	r5,r16
    aeac:	01000074 	movhi	r4,1
    aeb0:	212f7804 	addi	r4,r4,-16928
    aeb4:	000b2380 	call	b238 <alt_dev_llist_insert>
    aeb8:	01000074 	movhi	r4,1
    aebc:	212f8304 	addi	r4,r4,-16884
    aec0:	800b883a 	mov	r5,r16
    aec4:	dfc00117 	ldw	ra,4(sp)
    aec8:	dc000017 	ldw	r16,0(sp)
    aecc:	dec00204 	addi	sp,sp,8
    aed0:	000b2381 	jmpi	b238 <alt_dev_llist_insert>

0000aed4 <altera_avalon_jtag_uart_read_fd>:
    aed4:	20800017 	ldw	r2,0(r4)
    aed8:	21c00217 	ldw	r7,8(r4)
    aedc:	11000a04 	addi	r4,r2,40
    aee0:	000aef41 	jmpi	aef4 <altera_avalon_jtag_uart_read>

0000aee4 <altera_avalon_jtag_uart_write_fd>:
    aee4:	20800017 	ldw	r2,0(r4)
    aee8:	21c00217 	ldw	r7,8(r4)
    aeec:	11000a04 	addi	r4,r2,40
    aef0:	000af4c1 	jmpi	af4c <altera_avalon_jtag_uart_write>

0000aef4 <altera_avalon_jtag_uart_read>:
    aef4:	298d883a 	add	r6,r5,r6
    aef8:	22000017 	ldw	r8,0(r4)
    aefc:	29800f2e 	bgeu	r5,r6,af3c <altera_avalon_jtag_uart_read+0x48>
    af00:	2805883a 	mov	r2,r5
    af04:	3a50000c 	andi	r9,r7,16384
    af08:	40c00037 	ldwio	r3,0(r8)
    af0c:	1920000c 	andi	r4,r3,32768
    af10:	20000626 	beq	r4,zero,af2c <altera_avalon_jtag_uart_read+0x38>
    af14:	10c00005 	stb	r3,0(r2)
    af18:	10800044 	addi	r2,r2,1
    af1c:	11bffa36 	bltu	r2,r6,af08 <altera_avalon_jtag_uart_read+0x14>
    af20:	28800626 	beq	r5,r2,af3c <altera_avalon_jtag_uart_read+0x48>
    af24:	1145c83a 	sub	r2,r2,r5
    af28:	f800283a 	ret
    af2c:	117ffd1e 	bne	r2,r5,af24 <altera_avalon_jtag_uart_read+0x30>
    af30:	483ff526 	beq	r9,zero,af08 <altera_avalon_jtag_uart_read+0x14>
    af34:	00bffd44 	movi	r2,-11
    af38:	f800283a 	ret
    af3c:	39d0000c 	andi	r7,r7,16384
    af40:	383ffc1e 	bne	r7,zero,af34 <altera_avalon_jtag_uart_read+0x40>
    af44:	00bffec4 	movi	r2,-5
    af48:	f800283a 	ret

0000af4c <altera_avalon_jtag_uart_write>:
    af4c:	21c00017 	ldw	r7,0(r4)
    af50:	3005883a 	mov	r2,r6
    af54:	298d883a 	add	r6,r5,r6
    af58:	39000104 	addi	r4,r7,4
    af5c:	2980072e 	bgeu	r5,r6,af7c <altera_avalon_jtag_uart_write+0x30>
    af60:	20c00037 	ldwio	r3,0(r4)
    af64:	18ffffec 	andhi	r3,r3,65535
    af68:	183ffd26 	beq	r3,zero,af60 <altera_avalon_jtag_uart_write+0x14>
    af6c:	28c00007 	ldb	r3,0(r5)
    af70:	29400044 	addi	r5,r5,1
    af74:	38c00035 	stwio	r3,0(r7)
    af78:	003ff806 	br	af5c <altera_avalon_jtag_uart_write+0x10>
    af7c:	f800283a 	ret

0000af80 <alt_avalon_timer_sc_irq>:
    af80:	defffe04 	addi	sp,sp,-8
    af84:	dfc00115 	stw	ra,4(sp)
    af88:	dc000015 	stw	r16,0(sp)
    af8c:	20000035 	stwio	zero,0(r4)
    af90:	20800137 	ldwio	r2,4(r4)
    af94:	0021303a 	rdctl	r16,status
    af98:	00bfff84 	movi	r2,-2
    af9c:	8084703a 	and	r2,r16,r2
    afa0:	1001703a 	wrctl	status,r2
    afa4:	000b6700 	call	b670 <alt_tick>
    afa8:	8001703a 	wrctl	status,r16
    afac:	dfc00117 	ldw	ra,4(sp)
    afb0:	dc000017 	ldw	r16,0(sp)
    afb4:	dec00204 	addi	sp,sp,8
    afb8:	f800283a 	ret

0000afbc <alt_avalon_timer_sc_init>:
    afbc:	00c00074 	movhi	r3,1
    afc0:	18f0df04 	addi	r3,r3,-15492
    afc4:	1a000017 	ldw	r8,0(r3)
    afc8:	defffe04 	addi	sp,sp,-8
    afcc:	dfc00115 	stw	ra,4(sp)
    afd0:	2005883a 	mov	r2,r4
    afd4:	2809883a 	mov	r4,r5
    afd8:	300b883a 	mov	r5,r6
    afdc:	4000011e 	bne	r8,zero,afe4 <alt_avalon_timer_sc_init+0x28>
    afe0:	19c00015 	stw	r7,0(r3)
    afe4:	00c001c4 	movi	r3,7
    afe8:	10c00135 	stwio	r3,4(r2)
    afec:	d8000015 	stw	zero,0(sp)
    aff0:	01800074 	movhi	r6,1
    aff4:	31abe004 	addi	r6,r6,-20608
    aff8:	100f883a 	mov	r7,r2
    affc:	000b2b00 	call	b2b0 <alt_ic_isr_register>
    b000:	dfc00117 	ldw	ra,4(sp)
    b004:	dec00204 	addi	sp,sp,8
    b008:	f800283a 	ret

0000b00c <altera_avalon_uart_read_fd>:
    b00c:	20800017 	ldw	r2,0(r4)
    b010:	21c00217 	ldw	r7,8(r4)
    b014:	11000a04 	addi	r4,r2,40
    b018:	000b02c1 	jmpi	b02c <altera_avalon_uart_read>

0000b01c <altera_avalon_uart_write_fd>:
    b01c:	20800017 	ldw	r2,0(r4)
    b020:	21c00217 	ldw	r7,8(r4)
    b024:	11000a04 	addi	r4,r2,40
    b028:	000b0b01 	jmpi	b0b0 <altera_avalon_uart_write>

0000b02c <altera_avalon_uart_read>:
    b02c:	deffff04 	addi	sp,sp,-4
    b030:	dfc00015 	stw	ra,0(sp)
    b034:	39d0000c 	andi	r7,r7,16384
    b038:	20800017 	ldw	r2,0(r4)
    b03c:	10800204 	addi	r2,r2,8
    b040:	10c00037 	ldwio	r3,0(r2)
    b044:	10000035 	stwio	zero,0(r2)
    b048:	1880200c 	andi	r2,r3,128
    b04c:	10000c1e 	bne	r2,zero,b080 <altera_avalon_uart_read+0x54>
    b050:	383ff926 	beq	r7,zero,b038 <altera_avalon_uart_read+0xc>
    b054:	00800074 	movhi	r2,1
    b058:	10b00504 	addi	r2,r2,-16364
    b05c:	10800017 	ldw	r2,0(r2)
    b060:	10001026 	beq	r2,zero,b0a4 <altera_avalon_uart_read+0x78>
    b064:	103ee83a 	callr	r2
    b068:	00c002c4 	movi	r3,11
    b06c:	10c00015 	stw	r3,0(r2)
    b070:	0005883a 	mov	r2,zero
    b074:	dfc00017 	ldw	ra,0(sp)
    b078:	dec00104 	addi	sp,sp,4
    b07c:	f800283a 	ret
    b080:	20800017 	ldw	r2,0(r4)
    b084:	10800037 	ldwio	r2,0(r2)
    b088:	28800005 	stb	r2,0(r5)
    b08c:	18c000cc 	andi	r3,r3,3
    b090:	183fef1e 	bne	r3,zero,b050 <altera_avalon_uart_read+0x24>
    b094:	00800044 	movi	r2,1
    b098:	dfc00017 	ldw	ra,0(sp)
    b09c:	dec00104 	addi	sp,sp,4
    b0a0:	f800283a 	ret
    b0a4:	00800074 	movhi	r2,1
    b0a8:	10b0d904 	addi	r2,r2,-15516
    b0ac:	003fee06 	br	b068 <altera_avalon_uart_read+0x3c>

0000b0b0 <altera_avalon_uart_write>:
    b0b0:	defffd04 	addi	sp,sp,-12
    b0b4:	dc000115 	stw	r16,4(sp)
    b0b8:	dfc00215 	stw	ra,8(sp)
    b0bc:	39d0000c 	andi	r7,r7,16384
    b0c0:	3021883a 	mov	r16,r6
    b0c4:	20c00017 	ldw	r3,0(r4)
    b0c8:	1a000237 	ldwio	r8,8(r3)
    b0cc:	4200100c 	andi	r8,r8,64
    b0d0:	4000071e 	bne	r8,zero,b0f0 <altera_avalon_uart_write+0x40>
    b0d4:	38000b1e 	bne	r7,zero,b104 <altera_avalon_uart_write+0x54>
    b0d8:	803ffa1e 	bne	r16,zero,b0c4 <altera_avalon_uart_write+0x14>
    b0dc:	3405c83a 	sub	r2,r6,r16
    b0e0:	dfc00217 	ldw	ra,8(sp)
    b0e4:	dc000117 	ldw	r16,4(sp)
    b0e8:	dec00304 	addi	sp,sp,12
    b0ec:	f800283a 	ret
    b0f0:	2a000007 	ldb	r8,0(r5)
    b0f4:	29400044 	addi	r5,r5,1
    b0f8:	1a000135 	stwio	r8,4(r3)
    b0fc:	843fffc4 	addi	r16,r16,-1
    b100:	383ff526 	beq	r7,zero,b0d8 <altera_avalon_uart_write+0x28>
    b104:	803ff526 	beq	r16,zero,b0dc <altera_avalon_uart_write+0x2c>
    b108:	00800074 	movhi	r2,1
    b10c:	10b00504 	addi	r2,r2,-16364
    b110:	10800017 	ldw	r2,0(r2)
    b114:	10000a26 	beq	r2,zero,b140 <altera_avalon_uart_write+0x90>
    b118:	d9800015 	stw	r6,0(sp)
    b11c:	103ee83a 	callr	r2
    b120:	d9800017 	ldw	r6,0(sp)
    b124:	00c002c4 	movi	r3,11
    b128:	10c00015 	stw	r3,0(r2)
    b12c:	3405c83a 	sub	r2,r6,r16
    b130:	dfc00217 	ldw	ra,8(sp)
    b134:	dc000117 	ldw	r16,4(sp)
    b138:	dec00304 	addi	sp,sp,12
    b13c:	f800283a 	ret
    b140:	00800074 	movhi	r2,1
    b144:	10b0d904 	addi	r2,r2,-15516
    b148:	003ff606 	br	b124 <altera_avalon_uart_write+0x74>

0000b14c <close>:
    b14c:	defffd04 	addi	sp,sp,-12
    b150:	dc000015 	stw	r16,0(sp)
    b154:	dfc00215 	stw	ra,8(sp)
    b158:	dc400115 	stw	r17,4(sp)
    b15c:	2021883a 	mov	r16,r4
    b160:	20001a16 	blt	r4,zero,b1cc <close+0x80>
    b164:	20c00324 	muli	r3,r4,12
    b168:	00800074 	movhi	r2,1
    b16c:	10af8e04 	addi	r2,r2,-16840
    b170:	1887883a 	add	r3,r3,r2
    b174:	18800017 	ldw	r2,0(r3)
    b178:	10800417 	ldw	r2,16(r2)
    b17c:	10000c26 	beq	r2,zero,b1b0 <close+0x64>
    b180:	1809883a 	mov	r4,r3
    b184:	103ee83a 	callr	r2
    b188:	8009883a 	mov	r4,r16
    b18c:	1023883a 	mov	r17,r2
    b190:	000b6180 	call	b618 <alt_release_fd>
    b194:	0005883a 	mov	r2,zero
    b198:	88001816 	blt	r17,zero,b1fc <close+0xb0>
    b19c:	dfc00217 	ldw	ra,8(sp)
    b1a0:	dc400117 	ldw	r17,4(sp)
    b1a4:	dc000017 	ldw	r16,0(sp)
    b1a8:	dec00304 	addi	sp,sp,12
    b1ac:	f800283a 	ret
    b1b0:	000b6180 	call	b618 <alt_release_fd>
    b1b4:	0005883a 	mov	r2,zero
    b1b8:	dfc00217 	ldw	ra,8(sp)
    b1bc:	dc400117 	ldw	r17,4(sp)
    b1c0:	dc000017 	ldw	r16,0(sp)
    b1c4:	dec00304 	addi	sp,sp,12
    b1c8:	f800283a 	ret
    b1cc:	00800074 	movhi	r2,1
    b1d0:	10b00504 	addi	r2,r2,-16364
    b1d4:	10800017 	ldw	r2,0(r2)
    b1d8:	10000226 	beq	r2,zero,b1e4 <close+0x98>
    b1dc:	103ee83a 	callr	r2
    b1e0:	00000206 	br	b1ec <close+0xa0>
    b1e4:	00800074 	movhi	r2,1
    b1e8:	10b0d904 	addi	r2,r2,-15516
    b1ec:	00c01444 	movi	r3,81
    b1f0:	10c00015 	stw	r3,0(r2)
    b1f4:	00bfffc4 	movi	r2,-1
    b1f8:	003fe806 	br	b19c <close+0x50>
    b1fc:	00800074 	movhi	r2,1
    b200:	10b00504 	addi	r2,r2,-16364
    b204:	10800017 	ldw	r2,0(r2)
    b208:	10000526 	beq	r2,zero,b220 <close+0xd4>
    b20c:	103ee83a 	callr	r2
    b210:	0463c83a 	sub	r17,zero,r17
    b214:	14400015 	stw	r17,0(r2)
    b218:	00bfffc4 	movi	r2,-1
    b21c:	003fdf06 	br	b19c <close+0x50>
    b220:	00800074 	movhi	r2,1
    b224:	10b0d904 	addi	r2,r2,-15516
    b228:	003ff906 	br	b210 <close+0xc4>

0000b22c <alt_dcache_flush_all>:
    b22c:	f800283a 	ret

0000b230 <alt_dev_null_write>:
    b230:	3005883a 	mov	r2,r6
    b234:	f800283a 	ret

0000b238 <alt_dev_llist_insert>:
    b238:	deffff04 	addi	sp,sp,-4
    b23c:	dfc00015 	stw	ra,0(sp)
    b240:	20000c26 	beq	r4,zero,b274 <alt_dev_llist_insert+0x3c>
    b244:	20800217 	ldw	r2,8(r4)
    b248:	10000a26 	beq	r2,zero,b274 <alt_dev_llist_insert+0x3c>
    b24c:	28c00017 	ldw	r3,0(r5)
    b250:	21400115 	stw	r5,4(r4)
    b254:	0005883a 	mov	r2,zero
    b258:	20c00015 	stw	r3,0(r4)
    b25c:	28c00017 	ldw	r3,0(r5)
    b260:	29000015 	stw	r4,0(r5)
    b264:	19000115 	stw	r4,4(r3)
    b268:	dfc00017 	ldw	ra,0(sp)
    b26c:	dec00104 	addi	sp,sp,4
    b270:	f800283a 	ret
    b274:	00800074 	movhi	r2,1
    b278:	10b00504 	addi	r2,r2,-16364
    b27c:	10800017 	ldw	r2,0(r2)
    b280:	10000526 	beq	r2,zero,b298 <alt_dev_llist_insert+0x60>
    b284:	103ee83a 	callr	r2
    b288:	00c00584 	movi	r3,22
    b28c:	10c00015 	stw	r3,0(r2)
    b290:	00bffa84 	movi	r2,-22
    b294:	003ff406 	br	b268 <alt_dev_llist_insert+0x30>
    b298:	00800074 	movhi	r2,1
    b29c:	10b0d904 	addi	r2,r2,-15516
    b2a0:	003ff906 	br	b288 <alt_dev_llist_insert+0x50>

0000b2a4 <alt_icache_flush_all>:
    b2a4:	0009883a 	mov	r4,zero
    b2a8:	01420004 	movi	r5,2048
    b2ac:	000b9041 	jmpi	b904 <alt_icache_flush>

0000b2b0 <alt_ic_isr_register>:
    b2b0:	000b34c1 	jmpi	b34c <alt_iic_isr_register>

0000b2b4 <alt_ic_irq_enable>:
    b2b4:	0007303a 	rdctl	r3,status
    b2b8:	00bfff84 	movi	r2,-2
    b2bc:	1884703a 	and	r2,r3,r2
    b2c0:	1001703a 	wrctl	status,r2
    b2c4:	00800074 	movhi	r2,1
    b2c8:	10b0dd04 	addi	r2,r2,-15500
    b2cc:	01800044 	movi	r6,1
    b2d0:	11000017 	ldw	r4,0(r2)
    b2d4:	314a983a 	sll	r5,r6,r5
    b2d8:	290ab03a 	or	r5,r5,r4
    b2dc:	11400015 	stw	r5,0(r2)
    b2e0:	10800017 	ldw	r2,0(r2)
    b2e4:	100170fa 	wrctl	ienable,r2
    b2e8:	1801703a 	wrctl	status,r3
    b2ec:	0005883a 	mov	r2,zero
    b2f0:	f800283a 	ret

0000b2f4 <alt_ic_irq_disable>:
    b2f4:	0007303a 	rdctl	r3,status
    b2f8:	00bfff84 	movi	r2,-2
    b2fc:	1884703a 	and	r2,r3,r2
    b300:	1001703a 	wrctl	status,r2
    b304:	00800074 	movhi	r2,1
    b308:	10b0dd04 	addi	r2,r2,-15500
    b30c:	01bfff84 	movi	r6,-2
    b310:	11000017 	ldw	r4,0(r2)
    b314:	314a183a 	rol	r5,r6,r5
    b318:	290a703a 	and	r5,r5,r4
    b31c:	11400015 	stw	r5,0(r2)
    b320:	10800017 	ldw	r2,0(r2)
    b324:	100170fa 	wrctl	ienable,r2
    b328:	1801703a 	wrctl	status,r3
    b32c:	0005883a 	mov	r2,zero
    b330:	f800283a 	ret

0000b334 <alt_ic_irq_enabled>:
    b334:	000530fa 	rdctl	r2,ienable
    b338:	00c00044 	movi	r3,1
    b33c:	194a983a 	sll	r5,r3,r5
    b340:	1144703a 	and	r2,r2,r5
    b344:	1004c03a 	cmpne	r2,r2,zero
    b348:	f800283a 	ret

0000b34c <alt_iic_isr_register>:
    b34c:	defffe04 	addi	sp,sp,-8
    b350:	dfc00115 	stw	ra,4(sp)
    b354:	dc000015 	stw	r16,0(sp)
    b358:	00c007c4 	movi	r3,31
    b35c:	19401316 	blt	r3,r5,b3ac <alt_iic_isr_register+0x60>
    b360:	0021303a 	rdctl	r16,status
    b364:	00ffff84 	movi	r3,-2
    b368:	80c6703a 	and	r3,r16,r3
    b36c:	1801703a 	wrctl	status,r3
    b370:	280490fa 	slli	r2,r5,3
    b374:	00c00074 	movhi	r3,1
    b378:	18f11404 	addi	r3,r3,-15280
    b37c:	1885883a 	add	r2,r3,r2
    b380:	11800015 	stw	r6,0(r2)
    b384:	11c00115 	stw	r7,4(r2)
    b388:	30000626 	beq	r6,zero,b3a4 <alt_iic_isr_register+0x58>
    b38c:	000b2b40 	call	b2b4 <alt_ic_irq_enable>
    b390:	8001703a 	wrctl	status,r16
    b394:	dfc00117 	ldw	ra,4(sp)
    b398:	dc000017 	ldw	r16,0(sp)
    b39c:	dec00204 	addi	sp,sp,8
    b3a0:	f800283a 	ret
    b3a4:	000b2f40 	call	b2f4 <alt_ic_irq_disable>
    b3a8:	003ff906 	br	b390 <alt_iic_isr_register+0x44>
    b3ac:	00bffa84 	movi	r2,-22
    b3b0:	003ff806 	br	b394 <alt_iic_isr_register+0x48>

0000b3b4 <alt_open_fd.constprop.0>:
    b3b4:	defffe04 	addi	sp,sp,-8
    b3b8:	dc000015 	stw	r16,0(sp)
    b3bc:	2021883a 	mov	r16,r4
    b3c0:	2809883a 	mov	r4,r5
    b3c4:	300b883a 	mov	r5,r6
    b3c8:	01807fc4 	movi	r6,511
    b3cc:	dfc00115 	stw	ra,4(sp)
    b3d0:	000b49c0 	call	b49c <open>
    b3d4:	10000f16 	blt	r2,zero,b414 <alt_open_fd.constprop.0+0x60>
    b3d8:	10c00324 	muli	r3,r2,12
    b3dc:	1009883a 	mov	r4,r2
    b3e0:	00800074 	movhi	r2,1
    b3e4:	10af8e04 	addi	r2,r2,-16840
    b3e8:	10c5883a 	add	r2,r2,r3
    b3ec:	11400017 	ldw	r5,0(r2)
    b3f0:	10c00117 	ldw	r3,4(r2)
    b3f4:	10800217 	ldw	r2,8(r2)
    b3f8:	81400015 	stw	r5,0(r16)
    b3fc:	80c00115 	stw	r3,4(r16)
    b400:	80800215 	stw	r2,8(r16)
    b404:	dfc00117 	ldw	ra,4(sp)
    b408:	dc000017 	ldw	r16,0(sp)
    b40c:	dec00204 	addi	sp,sp,8
    b410:	000b6181 	jmpi	b618 <alt_release_fd>
    b414:	dfc00117 	ldw	ra,4(sp)
    b418:	dc000017 	ldw	r16,0(sp)
    b41c:	dec00204 	addi	sp,sp,8
    b420:	f800283a 	ret

0000b424 <alt_io_redirect>:
    b424:	defffb04 	addi	sp,sp,-20
    b428:	2005883a 	mov	r2,r4
    b42c:	dc400115 	stw	r17,4(sp)
    b430:	dc000015 	stw	r16,0(sp)
    b434:	04400044 	movi	r17,1
    b438:	04000074 	movhi	r16,1
    b43c:	842f9104 	addi	r16,r16,-16828
    b440:	dcc00315 	stw	r19,12(sp)
    b444:	dc800215 	stw	r18,8(sp)
    b448:	2827883a 	mov	r19,r5
    b44c:	3025883a 	mov	r18,r6
    b450:	100b883a 	mov	r5,r2
    b454:	8009883a 	mov	r4,r16
    b458:	880d883a 	mov	r6,r17
    b45c:	dfc00415 	stw	ra,16(sp)
    b460:	000b3b40 	call	b3b4 <alt_open_fd.constprop.0>
    b464:	813ffd04 	addi	r4,r16,-12
    b468:	980b883a 	mov	r5,r19
    b46c:	000d883a 	mov	r6,zero
    b470:	000b3b40 	call	b3b4 <alt_open_fd.constprop.0>
    b474:	81000304 	addi	r4,r16,12
    b478:	900b883a 	mov	r5,r18
    b47c:	880d883a 	mov	r6,r17
    b480:	dfc00417 	ldw	ra,16(sp)
    b484:	dcc00317 	ldw	r19,12(sp)
    b488:	dc800217 	ldw	r18,8(sp)
    b48c:	dc400117 	ldw	r17,4(sp)
    b490:	dc000017 	ldw	r16,0(sp)
    b494:	dec00504 	addi	sp,sp,20
    b498:	000b3b41 	jmpi	b3b4 <alt_open_fd.constprop.0>

0000b49c <open>:
    b49c:	defff904 	addi	sp,sp,-28
    b4a0:	dc800215 	stw	r18,8(sp)
    b4a4:	2825883a 	mov	r18,r5
    b4a8:	01400074 	movhi	r5,1
    b4ac:	29700104 	addi	r5,r5,-16380
    b4b0:	dd400515 	stw	r21,20(sp)
    b4b4:	dd000415 	stw	r20,16(sp)
    b4b8:	dcc00315 	stw	r19,12(sp)
    b4bc:	dc400115 	stw	r17,4(sp)
    b4c0:	dfc00615 	stw	ra,24(sp)
    b4c4:	dc000015 	stw	r16,0(sp)
    b4c8:	2027883a 	mov	r19,r4
    b4cc:	3029883a 	mov	r20,r6
    b4d0:	000b76c0 	call	b76c <alt_find_dev>
    b4d4:	1023883a 	mov	r17,r2
    b4d8:	002b883a 	mov	r21,zero
    b4dc:	10004026 	beq	r2,zero,b5e0 <open+0x144>
    b4e0:	8809883a 	mov	r4,r17
    b4e4:	000b8ac0 	call	b8ac <alt_get_fd>
    b4e8:	1021883a 	mov	r16,r2
    b4ec:	10003116 	blt	r2,zero,b5b4 <open+0x118>
    b4f0:	11000324 	muli	r4,r2,12
    b4f4:	01800074 	movhi	r6,1
    b4f8:	31af8e04 	addi	r6,r6,-16840
    b4fc:	00d00034 	movhi	r3,16384
    b500:	18ffffc4 	addi	r3,r3,-1
    b504:	3109883a 	add	r4,r6,r4
    b508:	90c6703a 	and	r3,r18,r3
    b50c:	20c00215 	stw	r3,8(r4)
    b510:	a8001126 	beq	r21,zero,b558 <open+0xbc>
    b514:	88800317 	ldw	r2,12(r17)
    b518:	10000526 	beq	r2,zero,b530 <open+0x94>
    b51c:	980b883a 	mov	r5,r19
    b520:	900d883a 	mov	r6,r18
    b524:	a00f883a 	mov	r7,r20
    b528:	103ee83a 	callr	r2
    b52c:	10003616 	blt	r2,zero,b608 <open+0x16c>
    b530:	8005883a 	mov	r2,r16
    b534:	dfc00617 	ldw	ra,24(sp)
    b538:	dd400517 	ldw	r21,20(sp)
    b53c:	dd000417 	ldw	r20,16(sp)
    b540:	dcc00317 	ldw	r19,12(sp)
    b544:	dc800217 	ldw	r18,8(sp)
    b548:	dc400117 	ldw	r17,4(sp)
    b54c:	dc000017 	ldw	r16,0(sp)
    b550:	dec00704 	addi	sp,sp,28
    b554:	f800283a 	ret
    b558:	00800074 	movhi	r2,1
    b55c:	10b00004 	addi	r2,r2,-16384
    b560:	18d00034 	orhi	r3,r3,16384
    b564:	11400017 	ldw	r5,0(r2)
    b568:	20c00215 	stw	r3,8(r4)
    b56c:	20800017 	ldw	r2,0(r4)
    b570:	3011883a 	mov	r8,r6
    b574:	32400204 	addi	r9,r6,8
    b578:	0007883a 	mov	r3,zero
    b57c:	00000306 	br	b58c <open+0xf0>
    b580:	18c00044 	addi	r3,r3,1
    b584:	4a400304 	addi	r9,r9,12
    b588:	28ffe236 	bltu	r5,r3,b514 <open+0x78>
    b58c:	42800017 	ldw	r10,0(r8)
    b590:	42000304 	addi	r8,r8,12
    b594:	12bffa1e 	bne	r2,r10,b580 <open+0xe4>
    b598:	49c00017 	ldw	r7,0(r9)
    b59c:	383ff80e 	bge	r7,zero,b580 <open+0xe4>
    b5a0:	19c00324 	muli	r7,r3,12
    b5a4:	31cf883a 	add	r7,r6,r7
    b5a8:	21fff526 	beq	r4,r7,b580 <open+0xe4>
    b5ac:	04400344 	movi	r17,13
    b5b0:	00000106 	br	b5b8 <open+0x11c>
    b5b4:	00a3c83a 	sub	r17,zero,r2
    b5b8:	8009883a 	mov	r4,r16
    b5bc:	000b6180 	call	b618 <alt_release_fd>
    b5c0:	00800074 	movhi	r2,1
    b5c4:	10b00504 	addi	r2,r2,-16364
    b5c8:	10800017 	ldw	r2,0(r2)
    b5cc:	10000b26 	beq	r2,zero,b5fc <open+0x160>
    b5d0:	103ee83a 	callr	r2
    b5d4:	14400015 	stw	r17,0(r2)
    b5d8:	043fffc4 	movi	r16,-1
    b5dc:	003fd406 	br	b530 <open+0x94>
    b5e0:	9809883a 	mov	r4,r19
    b5e4:	000b8000 	call	b800 <alt_find_file>
    b5e8:	1023883a 	mov	r17,r2
    b5ec:	1000081e 	bne	r2,zero,b610 <open+0x174>
    b5f0:	044004c4 	movi	r17,19
    b5f4:	043fffc4 	movi	r16,-1
    b5f8:	003fef06 	br	b5b8 <open+0x11c>
    b5fc:	00800074 	movhi	r2,1
    b600:	10b0d904 	addi	r2,r2,-15516
    b604:	003ff306 	br	b5d4 <open+0x138>
    b608:	00a3c83a 	sub	r17,zero,r2
    b60c:	003fea06 	br	b5b8 <open+0x11c>
    b610:	05400044 	movi	r21,1
    b614:	003fb206 	br	b4e0 <open+0x44>

0000b618 <alt_release_fd>:
    b618:	00800084 	movi	r2,2
    b61c:	1100060e 	bge	r2,r4,b638 <alt_release_fd+0x20>
    b620:	21000324 	muli	r4,r4,12
    b624:	00800074 	movhi	r2,1
    b628:	10af8e04 	addi	r2,r2,-16840
    b62c:	1109883a 	add	r4,r2,r4
    b630:	20000215 	stw	zero,8(r4)
    b634:	20000015 	stw	zero,0(r4)
    b638:	f800283a 	ret

0000b63c <alt_alarm_stop>:
    b63c:	0005303a 	rdctl	r2,status
    b640:	00ffff84 	movi	r3,-2
    b644:	10c6703a 	and	r3,r2,r3
    b648:	1801703a 	wrctl	status,r3
    b64c:	20c00017 	ldw	r3,0(r4)
    b650:	21400117 	ldw	r5,4(r4)
    b654:	19400115 	stw	r5,4(r3)
    b658:	21400117 	ldw	r5,4(r4)
    b65c:	21000115 	stw	r4,4(r4)
    b660:	28c00015 	stw	r3,0(r5)
    b664:	21000015 	stw	r4,0(r4)
    b668:	1001703a 	wrctl	status,r2
    b66c:	f800283a 	ret

0000b670 <alt_tick>:
    b670:	d0a0e617 	ldw	r2,-31848(gp)
    b674:	defffa04 	addi	sp,sp,-24
    b678:	dc000015 	stw	r16,0(sp)
    b67c:	d4200f17 	ldw	r16,-32708(gp)
    b680:	10800044 	addi	r2,r2,1
    b684:	dc800215 	stw	r18,8(sp)
    b688:	dfc00515 	stw	ra,20(sp)
    b68c:	dd000415 	stw	r20,16(sp)
    b690:	dcc00315 	stw	r19,12(sp)
    b694:	dc400115 	stw	r17,4(sp)
    b698:	d4a00f04 	addi	r18,gp,-32708
    b69c:	d0a0e615 	stw	r2,-31848(gp)
    b6a0:	84801c26 	beq	r16,r18,b714 <alt_tick+0xa4>
    b6a4:	04c00044 	movi	r19,1
    b6a8:	053fff84 	movi	r20,-2
    b6ac:	00000206 	br	b6b8 <alt_tick+0x48>
    b6b0:	8821883a 	mov	r16,r17
    b6b4:	8c801726 	beq	r17,r18,b714 <alt_tick+0xa4>
    b6b8:	80800403 	ldbu	r2,16(r16)
    b6bc:	84400017 	ldw	r17,0(r16)
    b6c0:	10000326 	beq	r2,zero,b6d0 <alt_tick+0x60>
    b6c4:	d0a0e617 	ldw	r2,-31848(gp)
    b6c8:	1000011e 	bne	r2,zero,b6d0 <alt_tick+0x60>
    b6cc:	80000405 	stb	zero,16(r16)
    b6d0:	d0e0e617 	ldw	r3,-31848(gp)
    b6d4:	80800217 	ldw	r2,8(r16)
    b6d8:	18bff536 	bltu	r3,r2,b6b0 <alt_tick+0x40>
    b6dc:	80800403 	ldbu	r2,16(r16)
    b6e0:	103ff31e 	bne	r2,zero,b6b0 <alt_tick+0x40>
    b6e4:	80800317 	ldw	r2,12(r16)
    b6e8:	81000517 	ldw	r4,20(r16)
    b6ec:	103ee83a 	callr	r2
    b6f0:	10001026 	beq	r2,zero,b734 <alt_tick+0xc4>
    b6f4:	81000217 	ldw	r4,8(r16)
    b6f8:	d0e0e617 	ldw	r3,-31848(gp)
    b6fc:	1105883a 	add	r2,r2,r4
    b700:	80800215 	stw	r2,8(r16)
    b704:	10ffea2e 	bgeu	r2,r3,b6b0 <alt_tick+0x40>
    b708:	84c00405 	stb	r19,16(r16)
    b70c:	8821883a 	mov	r16,r17
    b710:	8cbfe91e 	bne	r17,r18,b6b8 <alt_tick+0x48>
    b714:	dfc00517 	ldw	ra,20(sp)
    b718:	dd000417 	ldw	r20,16(sp)
    b71c:	dcc00317 	ldw	r19,12(sp)
    b720:	dc800217 	ldw	r18,8(sp)
    b724:	dc400117 	ldw	r17,4(sp)
    b728:	dc000017 	ldw	r16,0(sp)
    b72c:	dec00604 	addi	sp,sp,24
    b730:	f800283a 	ret
    b734:	0005303a 	rdctl	r2,status
    b738:	1506703a 	and	r3,r2,r20
    b73c:	1801703a 	wrctl	status,r3
    b740:	80c00017 	ldw	r3,0(r16)
    b744:	81000117 	ldw	r4,4(r16)
    b748:	19000115 	stw	r4,4(r3)
    b74c:	81000117 	ldw	r4,4(r16)
    b750:	84000115 	stw	r16,4(r16)
    b754:	20c00015 	stw	r3,0(r4)
    b758:	84000015 	stw	r16,0(r16)
    b75c:	1001703a 	wrctl	status,r2
    b760:	003fd306 	br	b6b0 <alt_tick+0x40>

0000b764 <altera_nios2_qsys_irq_init>:
    b764:	000170fa 	wrctl	ienable,zero
    b768:	f800283a 	ret

0000b76c <alt_find_dev>:
    b76c:	defffb04 	addi	sp,sp,-20
    b770:	dc000015 	stw	r16,0(sp)
    b774:	2c000017 	ldw	r16,0(r5)
    b778:	dcc00315 	stw	r19,12(sp)
    b77c:	dc800215 	stw	r18,8(sp)
    b780:	dc400115 	stw	r17,4(sp)
    b784:	dfc00415 	stw	ra,16(sp)
    b788:	2823883a 	mov	r17,r5
    b78c:	2027883a 	mov	r19,r4
    b790:	000aa4c0 	call	aa4c <strlen>
    b794:	14800044 	addi	r18,r2,1
    b798:	8c00031e 	bne	r17,r16,b7a8 <alt_find_dev+0x3c>
    b79c:	00000f06 	br	b7dc <alt_find_dev+0x70>
    b7a0:	84000017 	ldw	r16,0(r16)
    b7a4:	8c000d26 	beq	r17,r16,b7dc <alt_find_dev+0x70>
    b7a8:	81000217 	ldw	r4,8(r16)
    b7ac:	980b883a 	mov	r5,r19
    b7b0:	900d883a 	mov	r6,r18
    b7b4:	000b9740 	call	b974 <memcmp>
    b7b8:	103ff91e 	bne	r2,zero,b7a0 <alt_find_dev+0x34>
    b7bc:	8005883a 	mov	r2,r16
    b7c0:	dfc00417 	ldw	ra,16(sp)
    b7c4:	dcc00317 	ldw	r19,12(sp)
    b7c8:	dc800217 	ldw	r18,8(sp)
    b7cc:	dc400117 	ldw	r17,4(sp)
    b7d0:	dc000017 	ldw	r16,0(sp)
    b7d4:	dec00504 	addi	sp,sp,20
    b7d8:	f800283a 	ret
    b7dc:	0021883a 	mov	r16,zero
    b7e0:	8005883a 	mov	r2,r16
    b7e4:	dfc00417 	ldw	ra,16(sp)
    b7e8:	dcc00317 	ldw	r19,12(sp)
    b7ec:	dc800217 	ldw	r18,8(sp)
    b7f0:	dc400117 	ldw	r17,4(sp)
    b7f4:	dc000017 	ldw	r16,0(sp)
    b7f8:	dec00504 	addi	sp,sp,20
    b7fc:	f800283a 	ret

0000b800 <alt_find_file>:
    b800:	defffa04 	addi	sp,sp,-24
    b804:	dd000415 	stw	r20,16(sp)
    b808:	05000074 	movhi	r20,1
    b80c:	a5300304 	addi	r20,r20,-16372
    b810:	dc000015 	stw	r16,0(sp)
    b814:	a4000017 	ldw	r16,0(r20)
    b818:	dc800215 	stw	r18,8(sp)
    b81c:	dfc00515 	stw	ra,20(sp)
    b820:	dcc00315 	stw	r19,12(sp)
    b824:	dc400115 	stw	r17,4(sp)
    b828:	2025883a 	mov	r18,r4
    b82c:	85001526 	beq	r16,r20,b884 <alt_find_file+0x84>
    b830:	04c00bc4 	movi	r19,47
    b834:	00000906 	br	b85c <alt_find_file+0x5c>
    b838:	9087883a 	add	r3,r18,r2
    b83c:	18c00007 	ldb	r3,0(r3)
    b840:	100d883a 	mov	r6,r2
    b844:	1cc00126 	beq	r3,r19,b84c <alt_find_file+0x4c>
    b848:	1800021e 	bne	r3,zero,b854 <alt_find_file+0x54>
    b84c:	000b9740 	call	b974 <memcmp>
    b850:	10000d26 	beq	r2,zero,b888 <alt_find_file+0x88>
    b854:	84000017 	ldw	r16,0(r16)
    b858:	85000a26 	beq	r16,r20,b884 <alt_find_file+0x84>
    b85c:	84400217 	ldw	r17,8(r16)
    b860:	8809883a 	mov	r4,r17
    b864:	000aa4c0 	call	aa4c <strlen>
    b868:	8887883a 	add	r3,r17,r2
    b86c:	18ffffc7 	ldb	r3,-1(r3)
    b870:	8809883a 	mov	r4,r17
    b874:	900b883a 	mov	r5,r18
    b878:	1cffef1e 	bne	r3,r19,b838 <alt_find_file+0x38>
    b87c:	10bfffc4 	addi	r2,r2,-1
    b880:	003fed06 	br	b838 <alt_find_file+0x38>
    b884:	0021883a 	mov	r16,zero
    b888:	8005883a 	mov	r2,r16
    b88c:	dfc00517 	ldw	ra,20(sp)
    b890:	dd000417 	ldw	r20,16(sp)
    b894:	dcc00317 	ldw	r19,12(sp)
    b898:	dc800217 	ldw	r18,8(sp)
    b89c:	dc400117 	ldw	r17,4(sp)
    b8a0:	dc000017 	ldw	r16,0(sp)
    b8a4:	dec00604 	addi	sp,sp,24
    b8a8:	f800283a 	ret

0000b8ac <alt_get_fd>:
    b8ac:	01c00074 	movhi	r7,1
    b8b0:	39ef8e04 	addi	r7,r7,-16840
    b8b4:	3807883a 	mov	r3,r7
    b8b8:	0005883a 	mov	r2,zero
    b8bc:	01800804 	movi	r6,32
    b8c0:	00000206 	br	b8cc <alt_get_fd+0x20>
    b8c4:	10800044 	addi	r2,r2,1
    b8c8:	11800c26 	beq	r2,r6,b8fc <alt_get_fd+0x50>
    b8cc:	19400017 	ldw	r5,0(r3)
    b8d0:	18c00304 	addi	r3,r3,12
    b8d4:	283ffb1e 	bne	r5,zero,b8c4 <alt_get_fd+0x18>
    b8d8:	11800324 	muli	r6,r2,12
    b8dc:	00c00074 	movhi	r3,1
    b8e0:	18f00004 	addi	r3,r3,-16384
    b8e4:	19400017 	ldw	r5,0(r3)
    b8e8:	398f883a 	add	r7,r7,r6
    b8ec:	39000015 	stw	r4,0(r7)
    b8f0:	2880030e 	bge	r5,r2,b900 <alt_get_fd+0x54>
    b8f4:	18800015 	stw	r2,0(r3)
    b8f8:	f800283a 	ret
    b8fc:	00bffa04 	movi	r2,-24
    b900:	f800283a 	ret

0000b904 <alt_icache_flush>:
    b904:	00820004 	movi	r2,2048
    b908:	1140012e 	bgeu	r2,r5,b910 <alt_icache_flush+0xc>
    b90c:	100b883a 	mov	r5,r2
    b910:	214b883a 	add	r5,r4,r5
    b914:	2005883a 	mov	r2,r4
    b918:	2140092e 	bgeu	r4,r5,b940 <alt_icache_flush+0x3c>
    b91c:	1000603a 	flushi	r2
    b920:	10800804 	addi	r2,r2,32
    b924:	117ffd36 	bltu	r2,r5,b91c <alt_icache_flush+0x18>
    b928:	0104303a 	nor	r2,zero,r4
    b92c:	2885883a 	add	r2,r5,r2
    b930:	1004d17a 	srli	r2,r2,5
    b934:	10800044 	addi	r2,r2,1
    b938:	1004917a 	slli	r2,r2,5
    b93c:	2085883a 	add	r2,r4,r2
    b940:	210007cc 	andi	r4,r4,31
    b944:	20000126 	beq	r4,zero,b94c <alt_icache_flush+0x48>
    b948:	1000603a 	flushi	r2
    b94c:	0000203a 	flushp
    b950:	f800283a 	ret

0000b954 <exit>:
    b954:	defffe04 	addi	sp,sp,-8
    b958:	000b883a 	mov	r5,zero
    b95c:	dc000015 	stw	r16,0(sp)
    b960:	dfc00115 	stw	ra,4(sp)
    b964:	2021883a 	mov	r16,r4
    b968:	000b9bc0 	call	b9bc <__call_exitprocs>
    b96c:	8009883a 	mov	r4,r16
    b970:	000bb940 	call	bb94 <_exit>

0000b974 <memcmp>:
    b974:	30000d26 	beq	r6,zero,b9ac <memcmp+0x38>
    b978:	20c00003 	ldbu	r3,0(r4)
    b97c:	28800003 	ldbu	r2,0(r5)
    b980:	18800c1e 	bne	r3,r2,b9b4 <memcmp+0x40>
    b984:	31bfff84 	addi	r6,r6,-2
    b988:	01ffffc4 	movi	r7,-1
    b98c:	00000406 	br	b9a0 <memcmp+0x2c>
    b990:	20c00003 	ldbu	r3,0(r4)
    b994:	28800003 	ldbu	r2,0(r5)
    b998:	31bfffc4 	addi	r6,r6,-1
    b99c:	1880051e 	bne	r3,r2,b9b4 <memcmp+0x40>
    b9a0:	21000044 	addi	r4,r4,1
    b9a4:	29400044 	addi	r5,r5,1
    b9a8:	31fff91e 	bne	r6,r7,b990 <memcmp+0x1c>
    b9ac:	0005883a 	mov	r2,zero
    b9b0:	f800283a 	ret
    b9b4:	1885c83a 	sub	r2,r3,r2
    b9b8:	f800283a 	ret

0000b9bc <__call_exitprocs>:
    b9bc:	00800074 	movhi	r2,1
    b9c0:	10affe04 	addi	r2,r2,-16392
    b9c4:	10800017 	ldw	r2,0(r2)
    b9c8:	defff204 	addi	sp,sp,-56
    b9cc:	df000c15 	stw	fp,48(sp)
    b9d0:	d8800015 	stw	r2,0(sp)
    b9d4:	10800c04 	addi	r2,r2,48
    b9d8:	dd400915 	stw	r21,36(sp)
    b9dc:	dfc00d15 	stw	ra,52(sp)
    b9e0:	ddc00b15 	stw	r23,44(sp)
    b9e4:	dd800a15 	stw	r22,40(sp)
    b9e8:	dd000815 	stw	r20,32(sp)
    b9ec:	dcc00715 	stw	r19,28(sp)
    b9f0:	dc800615 	stw	r18,24(sp)
    b9f4:	dc400515 	stw	r17,20(sp)
    b9f8:	dc000415 	stw	r16,16(sp)
    b9fc:	d9000115 	stw	r4,4(sp)
    ba00:	2839883a 	mov	fp,r5
    ba04:	d8800215 	stw	r2,8(sp)
    ba08:	057fffc4 	movi	r21,-1
    ba0c:	d8800017 	ldw	r2,0(sp)
    ba10:	dd800217 	ldw	r22,8(sp)
    ba14:	15c00c17 	ldw	r23,48(r2)
    ba18:	b8001b26 	beq	r23,zero,ba88 <__call_exitprocs+0xcc>
    ba1c:	b9000117 	ldw	r4,4(r23)
    ba20:	bd002217 	ldw	r20,136(r23)
    ba24:	243fffc4 	addi	r16,r4,-1
    ba28:	80001416 	blt	r16,zero,ba7c <__call_exitprocs+0xc0>
    ba2c:	244007c4 	addi	r17,r4,31
    ba30:	21000044 	addi	r4,r4,1
    ba34:	8c63883a 	add	r17,r17,r17
    ba38:	8427883a 	add	r19,r16,r16
    ba3c:	2109883a 	add	r4,r4,r4
    ba40:	8c63883a 	add	r17,r17,r17
    ba44:	9ce7883a 	add	r19,r19,r19
    ba48:	2109883a 	add	r4,r4,r4
    ba4c:	a463883a 	add	r17,r20,r17
    ba50:	a4e7883a 	add	r19,r20,r19
    ba54:	b925883a 	add	r18,r23,r4
    ba58:	e0001726 	beq	fp,zero,bab8 <__call_exitprocs+0xfc>
    ba5c:	a0000226 	beq	r20,zero,ba68 <__call_exitprocs+0xac>
    ba60:	89400017 	ldw	r5,0(r17)
    ba64:	2f001426 	beq	r5,fp,bab8 <__call_exitprocs+0xfc>
    ba68:	843fffc4 	addi	r16,r16,-1
    ba6c:	8c7fff04 	addi	r17,r17,-4
    ba70:	9cffff04 	addi	r19,r19,-4
    ba74:	94bfff04 	addi	r18,r18,-4
    ba78:	857ff71e 	bne	r16,r21,ba58 <__call_exitprocs+0x9c>
    ba7c:	00800034 	movhi	r2,0
    ba80:	10800004 	addi	r2,r2,0
    ba84:	1000311e 	bne	r2,zero,bb4c <__call_exitprocs+0x190>
    ba88:	dfc00d17 	ldw	ra,52(sp)
    ba8c:	df000c17 	ldw	fp,48(sp)
    ba90:	ddc00b17 	ldw	r23,44(sp)
    ba94:	dd800a17 	ldw	r22,40(sp)
    ba98:	dd400917 	ldw	r21,36(sp)
    ba9c:	dd000817 	ldw	r20,32(sp)
    baa0:	dcc00717 	ldw	r19,28(sp)
    baa4:	dc800617 	ldw	r18,24(sp)
    baa8:	dc400517 	ldw	r17,20(sp)
    baac:	dc000417 	ldw	r16,16(sp)
    bab0:	dec00e04 	addi	sp,sp,56
    bab4:	f800283a 	ret
    bab8:	b9000117 	ldw	r4,4(r23)
    babc:	92000017 	ldw	r8,0(r18)
    bac0:	213fffc4 	addi	r4,r4,-1
    bac4:	24001a26 	beq	r4,r16,bb30 <__call_exitprocs+0x174>
    bac8:	90000015 	stw	zero,0(r18)
    bacc:	403fe626 	beq	r8,zero,ba68 <__call_exitprocs+0xac>
    bad0:	ba400117 	ldw	r9,4(r23)
    bad4:	a0001226 	beq	r20,zero,bb20 <__call_exitprocs+0x164>
    bad8:	00800044 	movi	r2,1
    badc:	1408983a 	sll	r4,r2,r16
    bae0:	a1404017 	ldw	r5,256(r20)
    bae4:	214a703a 	and	r5,r4,r5
    bae8:	28000d26 	beq	r5,zero,bb20 <__call_exitprocs+0x164>
    baec:	a1404117 	ldw	r5,260(r20)
    baf0:	2148703a 	and	r4,r4,r5
    baf4:	2000101e 	bne	r4,zero,bb38 <__call_exitprocs+0x17c>
    baf8:	99400017 	ldw	r5,0(r19)
    bafc:	d9000117 	ldw	r4,4(sp)
    bb00:	da400315 	stw	r9,12(sp)
    bb04:	403ee83a 	callr	r8
    bb08:	da400317 	ldw	r9,12(sp)
    bb0c:	b9000117 	ldw	r4,4(r23)
    bb10:	227fbe1e 	bne	r4,r9,ba0c <__call_exitprocs+0x50>
    bb14:	b1000017 	ldw	r4,0(r22)
    bb18:	25ffd326 	beq	r4,r23,ba68 <__call_exitprocs+0xac>
    bb1c:	003fbb06 	br	ba0c <__call_exitprocs+0x50>
    bb20:	da400315 	stw	r9,12(sp)
    bb24:	403ee83a 	callr	r8
    bb28:	da400317 	ldw	r9,12(sp)
    bb2c:	003ff706 	br	bb0c <__call_exitprocs+0x150>
    bb30:	bc000115 	stw	r16,4(r23)
    bb34:	003fe506 	br	bacc <__call_exitprocs+0x110>
    bb38:	99000017 	ldw	r4,0(r19)
    bb3c:	da400315 	stw	r9,12(sp)
    bb40:	403ee83a 	callr	r8
    bb44:	da400317 	ldw	r9,12(sp)
    bb48:	003ff006 	br	bb0c <__call_exitprocs+0x150>
    bb4c:	b9000117 	ldw	r4,4(r23)
    bb50:	20000e1e 	bne	r4,zero,bb8c <__call_exitprocs+0x1d0>
    bb54:	b9000017 	ldw	r4,0(r23)
    bb58:	20000826 	beq	r4,zero,bb7c <__call_exitprocs+0x1c0>
    bb5c:	b1000015 	stw	r4,0(r22)
    bb60:	a0000226 	beq	r20,zero,bb6c <__call_exitprocs+0x1b0>
    bb64:	a009883a 	mov	r4,r20
    bb68:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x8000>
    bb6c:	b809883a 	mov	r4,r23
    bb70:	00000000 	call	0 <__alt_mem_onchip_memory2_0-0x8000>
    bb74:	b5c00017 	ldw	r23,0(r22)
    bb78:	003fa706 	br	ba18 <__call_exitprocs+0x5c>
    bb7c:	0007883a 	mov	r3,zero
    bb80:	b82d883a 	mov	r22,r23
    bb84:	182f883a 	mov	r23,r3
    bb88:	003fa306 	br	ba18 <__call_exitprocs+0x5c>
    bb8c:	b8c00017 	ldw	r3,0(r23)
    bb90:	003ffb06 	br	bb80 <__call_exitprocs+0x1c4>

0000bb94 <_exit>:
    bb94:	20000226 	beq	r4,zero,bba0 <_exit+0xc>
    bb98:	002af070 	cmpltui	zero,zero,43969
    bb9c:	003fff06 	br	bb9c <_exit+0x8>
    bba0:	002af0b0 	cmpltui	zero,zero,43970
    bba4:	003ffd06 	br	bb9c <_exit+0x8>
