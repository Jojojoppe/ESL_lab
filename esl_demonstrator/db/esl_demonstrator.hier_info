|Block1
LED[0] <= slice:inst3.O[0]
LED[1] <= slice:inst3.O[1]
LED[2] <= slice:inst3.O[2]
LED[3] <= slice:inst3.O[3]
LED[4] <= slice:inst3.O[4]
LED[5] <= slice:inst3.O[5]
LED[6] <= slice:inst3.O[6]
LED[7] <= slice:inst3.O[7]
GPIO_0[0] => GPIO_slice:inst2.GPIO_0[0]
GPIO_0[1] => GPIO_slice:inst2.GPIO_0[1]
GPIO_0[2] => GPIO_slice:inst2.GPIO_0[2]
GPIO_0[3] => GPIO_slice:inst2.GPIO_0[3]
GPIO_0[4] => GPIO_slice:inst2.GPIO_0[4]
GPIO_0[5] => GPIO_slice:inst2.GPIO_0[5]
GPIO_0[6] => GPIO_slice:inst2.GPIO_0[6]
GPIO_0[7] => GPIO_slice:inst2.GPIO_0[7]
GPIO_0[8] => GPIO_slice:inst2.GPIO_0[8]
GPIO_0[9] => GPIO_slice:inst2.GPIO_0[9]
GPIO_0[10] => GPIO_slice:inst2.GPIO_0[10]
GPIO_0[11] => GPIO_slice:inst2.GPIO_0[11]
GPIO_0[12] => GPIO_slice:inst2.GPIO_0[12]
GPIO_0[13] => GPIO_slice:inst2.GPIO_0[13]
GPIO_0[14] => GPIO_slice:inst2.GPIO_0[14]
GPIO_0[15] => GPIO_slice:inst2.GPIO_0[15]
GPIO_0[16] => GPIO_slice:inst2.GPIO_0[16]
GPIO_0[17] => GPIO_slice:inst2.GPIO_0[17]
GPIO_0[18] => GPIO_slice:inst2.GPIO_0[18]
GPIO_0[19] => GPIO_slice:inst2.GPIO_0[19]
GPIO_0[20] => GPIO_slice:inst2.GPIO_0[20]
GPIO_0[21] => GPIO_slice:inst2.GPIO_0[21]
GPIO_0[22] => GPIO_slice:inst2.GPIO_0[22]
GPIO_0[23] => GPIO_slice:inst2.GPIO_0[23]
GPIO_0[24] => GPIO_slice:inst2.GPIO_0[24]
GPIO_0[25] => GPIO_slice:inst2.GPIO_0[25]
GPIO_0[26] => GPIO_slice:inst2.GPIO_0[26]
GPIO_0[27] => GPIO_slice:inst2.GPIO_0[27]
GPIO_0[28] => GPIO_slice:inst2.GPIO_0[28]
GPIO_0[29] => GPIO_slice:inst2.GPIO_0[29]
GPIO_0[30] => GPIO_slice:inst2.GPIO_0[30]
GPIO_0[31] => GPIO_slice:inst2.GPIO_0[31]
GPIO_0[32] => GPIO_slice:inst2.GPIO_0[32]
KEY[0] => esl_demonstrator:inst.reset
CLOCK_50 => esl_demonstrator:inst.clk


|Block1|slice:inst3
I[0] => ~NO_FANOUT~
I[1] => ~NO_FANOUT~
I[2] => ~NO_FANOUT~
I[3] => ~NO_FANOUT~
I[4] => ~NO_FANOUT~
I[5] => ~NO_FANOUT~
I[6] => ~NO_FANOUT~
I[7] => ~NO_FANOUT~
I[8] => O[0].DATAIN
I[9] => O[1].DATAIN
I[10] => O[2].DATAIN
I[11] => O[3].DATAIN
I[12] => O[4].DATAIN
I[13] => O[5].DATAIN
I[14] => O[6].DATAIN
I[15] => O[7].DATAIN
I[16] => ~NO_FANOUT~
I[17] => ~NO_FANOUT~
I[18] => ~NO_FANOUT~
I[19] => ~NO_FANOUT~
I[20] => ~NO_FANOUT~
I[21] => ~NO_FANOUT~
I[22] => ~NO_FANOUT~
I[23] => ~NO_FANOUT~
I[24] => ~NO_FANOUT~
I[25] => ~NO_FANOUT~
I[26] => ~NO_FANOUT~
I[27] => ~NO_FANOUT~
I[28] => ~NO_FANOUT~
I[29] => ~NO_FANOUT~
I[30] => ~NO_FANOUT~
I[31] => ~NO_FANOUT~
O[0] <= I[8].DB_MAX_OUTPUT_PORT_TYPE
O[1] <= I[9].DB_MAX_OUTPUT_PORT_TYPE
O[2] <= I[10].DB_MAX_OUTPUT_PORT_TYPE
O[3] <= I[11].DB_MAX_OUTPUT_PORT_TYPE
O[4] <= I[12].DB_MAX_OUTPUT_PORT_TYPE
O[5] <= I[13].DB_MAX_OUTPUT_PORT_TYPE
O[6] <= I[14].DB_MAX_OUTPUT_PORT_TYPE
O[7] <= I[15].DB_MAX_OUTPUT_PORT_TYPE


|Block1|esl_demonstrator:inst
inp_a => process_0.IN1
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => nextcounter.OUTPUTSELECT
inp_a => old_a.DATAIN
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => process_0.IN1
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => nextcounter.OUTPUTSELECT
inp_b => old_b.DATAIN
rotation_counter[0] <= counter[0].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[1] <= counter[1].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[2] <= counter[2].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[3] <= counter[3].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[4] <= counter[4].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[5] <= counter[5].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[6] <= counter[6].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[7] <= counter[7].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[8] <= counter[8].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[9] <= counter[9].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[10] <= counter[10].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[11] <= counter[11].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[12] <= counter[12].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[13] <= counter[13].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[14] <= counter[14].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[15] <= counter[15].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[16] <= counter[16].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[17] <= counter[17].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[18] <= counter[18].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[19] <= counter[19].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[20] <= counter[20].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[21] <= counter[21].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[22] <= counter[22].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[23] <= counter[23].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[24] <= counter[24].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[25] <= counter[25].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[26] <= counter[26].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[27] <= counter[27].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[28] <= counter[28].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[29] <= counter[29].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[30] <= counter[30].DB_MAX_OUTPUT_PORT_TYPE
rotation_counter[31] <= counter[31].DB_MAX_OUTPUT_PORT_TYPE
reset => nextcounter[0].ACLR
reset => nextcounter[1].ACLR
reset => nextcounter[2].ACLR
reset => nextcounter[3].ACLR
reset => nextcounter[4].ACLR
reset => nextcounter[5].ACLR
reset => nextcounter[6].ACLR
reset => nextcounter[7].ACLR
reset => nextcounter[8].ACLR
reset => nextcounter[9].ACLR
reset => nextcounter[10].ACLR
reset => nextcounter[11].ACLR
reset => nextcounter[12].ACLR
reset => nextcounter[13].ACLR
reset => nextcounter[14].ACLR
reset => nextcounter[15].ACLR
reset => nextcounter[16].ACLR
reset => nextcounter[17].ACLR
reset => nextcounter[18].ACLR
reset => nextcounter[19].ACLR
reset => nextcounter[20].ACLR
reset => nextcounter[21].ACLR
reset => nextcounter[22].ACLR
reset => nextcounter[23].ACLR
reset => nextcounter[24].ACLR
reset => nextcounter[25].ACLR
reset => nextcounter[26].ACLR
reset => nextcounter[27].ACLR
reset => nextcounter[28].ACLR
reset => nextcounter[29].ACLR
reset => nextcounter[30].ACLR
reset => nextcounter[31].ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => counter[9].ACLR
reset => counter[10].ACLR
reset => counter[11].ACLR
reset => counter[12].ACLR
reset => counter[13].ACLR
reset => counter[14].ACLR
reset => counter[15].ACLR
reset => counter[16].ACLR
reset => counter[17].ACLR
reset => counter[18].ACLR
reset => counter[19].ACLR
reset => counter[20].ACLR
reset => counter[21].ACLR
reset => counter[22].ACLR
reset => counter[23].ACLR
reset => counter[24].ACLR
reset => counter[25].ACLR
reset => counter[26].ACLR
reset => counter[27].ACLR
reset => counter[28].ACLR
reset => counter[29].ACLR
reset => counter[30].ACLR
reset => counter[31].ACLR
reset => old_a.ENA
reset => old_b.ENA
clk => nextcounter[0].CLK
clk => nextcounter[1].CLK
clk => nextcounter[2].CLK
clk => nextcounter[3].CLK
clk => nextcounter[4].CLK
clk => nextcounter[5].CLK
clk => nextcounter[6].CLK
clk => nextcounter[7].CLK
clk => nextcounter[8].CLK
clk => nextcounter[9].CLK
clk => nextcounter[10].CLK
clk => nextcounter[11].CLK
clk => nextcounter[12].CLK
clk => nextcounter[13].CLK
clk => nextcounter[14].CLK
clk => nextcounter[15].CLK
clk => nextcounter[16].CLK
clk => nextcounter[17].CLK
clk => nextcounter[18].CLK
clk => nextcounter[19].CLK
clk => nextcounter[20].CLK
clk => nextcounter[21].CLK
clk => nextcounter[22].CLK
clk => nextcounter[23].CLK
clk => nextcounter[24].CLK
clk => nextcounter[25].CLK
clk => nextcounter[26].CLK
clk => nextcounter[27].CLK
clk => nextcounter[28].CLK
clk => nextcounter[29].CLK
clk => nextcounter[30].CLK
clk => nextcounter[31].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => old_b.CLK
clk => old_a.CLK


|Block1|GPIO_slice:inst2
GPIO_0[0] => ~NO_FANOUT~
GPIO_0[1] => ~NO_FANOUT~
GPIO_0[2] => ~NO_FANOUT~
GPIO_0[3] => ~NO_FANOUT~
GPIO_0[4] => ~NO_FANOUT~
GPIO_0[5] => ~NO_FANOUT~
GPIO_0[6] => ~NO_FANOUT~
GPIO_0[7] => ~NO_FANOUT~
GPIO_0[8] => ~NO_FANOUT~
GPIO_0[9] => ~NO_FANOUT~
GPIO_0[10] => ~NO_FANOUT~
GPIO_0[11] => ~NO_FANOUT~
GPIO_0[12] => ~NO_FANOUT~
GPIO_0[13] => ~NO_FANOUT~
GPIO_0[14] => ~NO_FANOUT~
GPIO_0[15] => ~NO_FANOUT~
GPIO_0[16] => ~NO_FANOUT~
GPIO_0[17] => ~NO_FANOUT~
GPIO_0[18] => ~NO_FANOUT~
GPIO_0[19] => ~NO_FANOUT~
GPIO_0[20] => encoder_a.DATAIN
GPIO_0[21] => ~NO_FANOUT~
GPIO_0[22] => encoder_b.DATAIN
GPIO_0[23] => ~NO_FANOUT~
GPIO_0[24] => ~NO_FANOUT~
GPIO_0[25] => ~NO_FANOUT~
GPIO_0[26] => ~NO_FANOUT~
GPIO_0[27] => ~NO_FANOUT~
GPIO_0[28] => ~NO_FANOUT~
GPIO_0[29] => ~NO_FANOUT~
GPIO_0[30] => ~NO_FANOUT~
GPIO_0[31] => ~NO_FANOUT~
GPIO_0[32] => ~NO_FANOUT~
encoder_a <= GPIO_0[20].DB_MAX_OUTPUT_PORT_TYPE
encoder_b <= GPIO_0[22].DB_MAX_OUTPUT_PORT_TYPE


